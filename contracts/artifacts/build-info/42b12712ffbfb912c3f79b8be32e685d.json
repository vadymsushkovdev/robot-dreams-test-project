{
	"id": "42b12712ffbfb912c3f79b8be32e685d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DomainRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.24;\n\nimport './interfaces/IDomainRegistry.sol';\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\nimport '@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\n\n/**\n * @title Domain Registry\n * @author Vadym Sushkov\n * @notice This contract allows registration and management of domains.\n */\ncontract DomainRegistry is\n    Initializable,\n    IDomainRegistry,\n    OwnableUpgradeable\n{\n    using SafeERC20 for IERC20;\n\n    /// @custom:storage-location erc7201:domainRegistry.domain\n    struct DomainStorage {\n        /**\n         * @dev Domain registration price\n         * @notice The price set for domain registration.\n         */\n        uint256 registrationPrice;\n        /**\n         * @dev Domain registry container\n         * @notice Mapping to store domain metadata against their names.\n         */\n        mapping(string => address) domainList;\n    }\n\n\n    /// @custom:storage-location erc7201:domainRegistry.fund\n    struct FundStorage {\n        /**\n         * @dev Tracks the balance frozen within the contract.\n         * @notice This balance represents funds that are not available for withdrawal by owner.\n         */\n        uint256 frozenBalance;\n        /**\n         * @dev Tracks the funds owned by each domain owner.\n         * @notice This mapping holds the funds of each domain owner to withdraw.\n         */\n        mapping(address => uint256) domainOwnersFunds;\n    }\n\n    /// @custom:storage-location erc7201:domainRegistry.usdcFund\n    struct UsdcFundStorage {\n        /**\n         * @dev Tracks the balance frozen within the contract.\n         * @notice This balance represents funds that are not available for withdrawal by owner.\n         */\n        uint256 frozenBalance;\n        /**\n         * @dev Tracks the funds owned by each domain owner.\n         * @notice This mapping holds the funds of each domain owner to withdraw.\n         */\n        mapping(address => uint256) domainOwnersFunds;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"domainRegistry.domain\")) - 1)) & ~bytes32(uint256(0xff));\n    bytes32 private constant DOMAIN_STORAGE_LOCATION =\n        0x34d79759018dd62b1c8d40a6535099f131828aa4665b939adf68c4556b516400;\n\n    // keccak256(abi.encode(uint256(keccak256(\"domainRegistry.fund\")) - 1)) & ~bytes32(uint256(0xff));\n    bytes32 private constant FUND_STORAGE_LOCATION =\n        0x249f20ee916056548cfe0204d9ea4281f252680318bb5252f87aa5a31ec81e00;\n\n    // keccak256(abi.encode(uint256(keccak256(\"domainRegistry.usdcFund\")) - 1)) & ~bytes32(uint256(0xff));\n    bytes32 private constant USDC_FUND_STORAGE_LOCATION =\n        0x64d6ff49462c7266e92c8aa47370a483b3bb1c9ff7216e1d88a62c1eb24ffb00;\n\n    /**\n     * @dev Separator used to concatenate domain names.\n     */\n    string private constant domainSeparator = '.';\n\n    /**\n     * @dev Contract to get the latest price ETH/USD.\n     */\n    AggregatorV3Interface private priceFeed;\n\n    /**\n     * @dev Contract to interact with usdc token.\n     */\n    IERC20 private usdcToken;\n\n    /**\n     * @dev Event emitted when a domain is registered.\n     * @param domain The domain name.\n     * @param controller The address of the controller of the domain.\n     */\n    event DomainRegistered(string domain, address indexed controller);\n\n    /**\n     * @dev Event emitted when funds are withdrawn from the contract.\n     * @param amount The amount of funds withdrawn.\n     */\n    event Withdrawal(address reciever, uint256 amount);\n\n    /**\n     * @dev Event emitted when the price for domain registration is changed.\n     * @param newPrice The new price of the domain registration.\n     */\n    event PriceChanged(uint256 newPrice);\n\n    /**\n     * @dev Error thrown when price from oracle is incorrect.\n     */\n    error InvalidPriceFromOracle();\n\n    /**\n     * @dev Error thrown when the provided price equals to zero.\n     * @param incomingValue The value that caused the error.\n     * @param expectingValue The expected value.\n     */\n    error PriceEqualsZero(\n        uint256 incomingValue,\n        uint256 expectingValue\n    );\n\n    /// @dev Error thrown when attempting to register a domain that already exists.\n    error DomainAlreadyTaken();\n\n    /**\n     * @dev Error thrown when the value provided is not equal to the expected value.\n     * @param incomingValue The value provided.\n     * @param expectingValue The expected value.\n     */\n    error IncorrectValueAmount(\n        uint256 incomingValue,\n        uint256 expectingValue\n    );\n\n    /**\n     * @dev Error thrown when there is nothing to withdraw from the contract.\n     * @param requester The address of requester who request withdraw funds.\n     */\n    error NothingToWithdraw(address requester);\n\n    /**\n     * @dev Error thrown when the withdrawal operation fails.\n     * @param data The error data.\n     */\n    error FailedToWithdraw(address reciever, bytes data);\n\n    /**\n     * @dev Error thrown when the parent domain is not found.\n     * @param incomingDomain The domain for which the parent domain is not found.\n     */\n    error ParentDomainNotFound(string incomingDomain);\n\n    /**\n     * @dev Error thrown when the usdc provided is not equal to the expected amount of usdc.\n     * @param incomingUsdc The value provided.\n     * @param expectingUsdc The expected udc amount.\n     */\n    error IncorrectUsdcAmount(\n        uint256 incomingUsdc,\n        uint256 expectingUsdc\n    );\n\n    /**\n     * @dev Modifier to ensure that the provided price is greater than zero.\n     * @param price The price value to check.\n     */\n    modifier priceBiggerThanZero(uint256 price) {\n        if (price == 0) {\n            revert PriceEqualsZero(\n                price,\n                _getDomainStorage().registrationPrice\n            );\n        }\n        _;\n    }\n\n    /**\n     * @dev Modifier to ensure that the eth sent is equal to the registration price.\n     */\n    modifier incorrectValueAmount() {\n        uint256 ethPrice = getRegistrationPriceInEth();\n\n        if (msg.value != ethPrice) {\n            revert IncorrectValueAmount({\n                incomingValue: msg.value,\n                expectingValue: ethPrice\n            });\n        }\n        _;\n    }\n\n    /**\n     * @dev Modifier to ensure that the usdc sent is equal to the registration price.\n     */\n    modifier incorrectUsdcAmount() {\n        uint256 allowance = getUsdcAllowance();\n        uint256 _registrationPrice = _getDomainStorage()\n            .registrationPrice;\n\n        if (allowance != _registrationPrice) {\n            revert IncorrectUsdcAmount({\n                incomingUsdc: allowance,\n                expectingUsdc: _registrationPrice\n            });\n        }\n        _;\n    }\n\n    /**\n     * @dev Modifier to ensure that the requested domain is available to registrate.\n     */\n    modifier existingDomain(string calldata domain) {\n        if (_getDomainStorage().domainList[domain] != address(0)) {\n            revert DomainAlreadyTaken();\n        }\n\n        _;\n    }\n\n    /**\n     * @dev Sets owner of the contract and price for domain registration\n     * @param initialPrice Sets default price for domains\n     */\n    function initialize(\n        uint256 initialPrice,\n        address _pricefeed,\n        address _usdcToken\n    ) public initializer {\n        _getDomainStorage().registrationPrice = initialPrice;\n        __Ownable_init(msg.sender);\n        priceFeed = AggregatorV3Interface(_pricefeed);\n        usdcToken = IERC20(_usdcToken);\n    }\n\n    // @dev Returns domain registration price in usdc\n    function getRegistrationPriceInEth()\n        public\n        view\n        returns (uint256)\n    {\n        return (_getDomainStorage().registrationPrice * 10**2 * 1 ether) / _getEthToUsdPriceFromOracle();\n    }\n\n    // @dev Returns domain registration price in usdc\n    function getRegistrationPriceInUsdc()\n        public\n        view\n        returns (uint256)\n    {\n        return _getDomainStorage().registrationPrice;\n    }\n\n    // @dev Return domain owner address\n    function getDomainOwner(string calldata domain)\n        public\n        view\n        returns (address)\n    {\n        return _getDomainStorage().domainList[domain];\n    }\n\n    /**\n     * @dev Allows buying a child domain under a parent domain.\n     * @param parentDomain The parent domain under which to register the child domain.\n     * @param childDomain The name of the child domain.\n     */\n    function buyChildDomainViaEth(\n        string calldata parentDomain,\n        string calldata childDomain\n    ) external payable incorrectValueAmount {\n        string memory domain = createAndCheckFullDomain(\n            parentDomain,\n            childDomain\n        );\n\n        _getDomainStorage().domainList[domain] = msg.sender;\n\n        _getFundStorage().frozenBalance += msg.value;\n        _getFundStorage().domainOwnersFunds[\n            _getDomainStorage().domainList[parentDomain]\n        ] += msg.value;\n\n        emit DomainRegistered(domain, msg.sender);\n    }\n\n    function buyChildDomainViaUsdc(\n        string calldata parentDomain,\n        string calldata childDomain\n    ) external payable incorrectUsdcAmount {\n        string memory domain = createAndCheckFullDomain(\n            parentDomain,\n            childDomain\n        );\n        uint256 allowance = getUsdcAllowance();\n\n        transferUsdc(allowance);\n\n        _getDomainStorage().domainList[domain] = msg.sender;\n\n        _getUsdcFundStorage().frozenBalance += allowance;\n        _getUsdcFundStorage().domainOwnersFunds[\n            _getDomainStorage().domainList[parentDomain]\n        ] += allowance;\n\n        emit DomainRegistered(domain, msg.sender);\n    }\n\n    /**\n     * @dev Buying a domain via eth\n     * @param domain The domain\n     */\n    function buyDomainViaEth(string calldata domain)\n        external\n        payable\n        incorrectValueAmount\n        existingDomain(domain)\n    {\n        _getDomainStorage().domainList[domain] = msg.sender;\n\n        emit DomainRegistered(domain, msg.sender);\n    }\n\n    /**\n     * @dev Buying a domain via usdc\n     * @param domain The domain\n     */\n    function buyDomainViaUsdc(string calldata domain)\n        external\n        payable\n        incorrectUsdcAmount\n        existingDomain(domain)\n    {\n        uint256 allowance = getUsdcAllowance();\n\n        transferUsdc(allowance);\n\n        _getDomainStorage().domainList[domain] = msg.sender;\n\n        emit DomainRegistered(domain, msg.sender);\n    }\n\n    /**\n     * @dev Change price for domain registration\n     * @param newPrice The new price of the domain\n     */\n    function changePrice(uint256 newPrice)\n        external\n        onlyOwner\n        priceBiggerThanZero(newPrice)\n    {\n        _getDomainStorage().registrationPrice = newPrice;\n\n        emit PriceChanged(newPrice);\n    }\n\n    /**\n     * @dev Withdraw eth to the owner of the contract\n     * @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\"\n     */\n    function withdrawEth() public onlyOwner {\n        uint256 contractBalance = address(this).balance -\n            _getFundStorage().frozenBalance;\n\n        if (contractBalance == 0) {\n            revert NothingToWithdraw(owner());\n        }\n\n        (bool sent, bytes memory data) = payable(owner()).call{\n            value: contractBalance\n        }('');\n\n        if (!sent) {\n            revert FailedToWithdraw(owner(), data);\n        }\n\n        emit Withdrawal(owner(), contractBalance);\n    }\n\n    /**\n     * @dev Withdraw usdc to the owner of the contract\n     * @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\"\n     */\n    function withdrawUsdc() public onlyOwner {\n        uint256 contractBalance = getUsdcContractBalance() -\n            _getUsdcFundStorage().frozenBalance;\n\n        if (contractBalance == 0) {\n            revert NothingToWithdraw(owner());\n        }\n\n        usdcToken.transfer(msg.sender, contractBalance);\n\n        emit Withdrawal(owner(), contractBalance);\n    }\n\n    /**\n     * @dev Allows domain owners to withdraw their eth funds from the contract.\n     * @notice This function allows domain owners to withdraw the eth funds deposited for their domains.\n     * @notice Only the domain owner can invoke this function.\n     * @notice If the domain owner has no funds deposited, the function reverts.\n     */\n    function withdrawDomainEth() public {\n        if (_getFundStorage().domainOwnersFunds[msg.sender] == 0) {\n            revert NothingToWithdraw(msg.sender);\n        }\n\n        (bool sent, bytes memory data) = payable(msg.sender).call{\n            value: _getFundStorage().domainOwnersFunds[msg.sender]\n        }('');\n\n        if (!sent) {\n            revert FailedToWithdraw(msg.sender, data);\n        }\n\n        _getFundStorage().frozenBalance -= _getFundStorage()\n            .domainOwnersFunds[msg.sender];\n        _getFundStorage().domainOwnersFunds[msg.sender] = 0;\n\n        emit Withdrawal(\n            msg.sender,\n            _getFundStorage().domainOwnersFunds[msg.sender]\n        );\n    }\n\n    /**\n     * @dev Allows domain owners to withdraw their usdc funds from the contract.\n     * @notice This function allows domain owners to withdraw the usdc funds deposited for their domains.\n     * @notice Only the domain owner can invoke this function.\n     * @notice If the domain owner has no funds deposited, the function reverts.\n     */\n    function withdrawDomainUsdc() public {\n        if (_getUsdcFundStorage().domainOwnersFunds[msg.sender] == 0) {\n            revert NothingToWithdraw(msg.sender);\n        }\n\n        uint256 fundsToSend = _getFundStorage().domainOwnersFunds[msg.sender];\n\n        usdcToken.transfer(msg.sender, fundsToSend);\n\n        _getFundStorage().frozenBalance -= fundsToSend;\n        _getFundStorage().domainOwnersFunds[msg.sender] = 0;\n\n        emit Withdrawal(\n            msg.sender,\n            fundsToSend\n        );\n    }\n\n    /**\n     * @dev Concatenates child and parent domain names.\n     * @param childDomain The name of the child domain.\n     * @param parentDomain The name of the parent domain.\n     * @return domain The concatenated domain name.\n     */\n    function createFullDomain(\n        string calldata childDomain,\n        string calldata parentDomain\n    ) private pure returns (string memory domain) {\n        domain = string(\n            abi.encodePacked(\n                childDomain,\n                domainSeparator,\n                parentDomain\n            )\n        );\n    }\n\n    /**\n     * @dev Returns domain storage\n     * @notice Domain storage contains domainList and registrationsPrice data\n     */\n    function _getDomainStorage()\n        private\n        pure\n        returns (DomainStorage storage $)\n    {\n        assembly {\n            $.slot := DOMAIN_STORAGE_LOCATION\n        }\n    }\n\n    /**\n     * @dev Returns fund storage\n     * @notice Fund storage contains frozenBalance and domainOwnersFunds data\n     */\n    function _getFundStorage()\n        private\n        pure\n        returns (FundStorage storage $)\n    {\n        assembly {\n            $.slot := FUND_STORAGE_LOCATION\n        }\n    }\n\n    /**\n     * @dev Returns current Eth/Usd price\n     */\n    function _getEthToUsdPriceFromOracle()\n        public \n        view\n        returns (uint256)\n    {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n\n        if (price < 0) {\n            revert InvalidPriceFromOracle();\n        }\n\n        return uint256(price);\n    }\n\n    /**\n     * @dev Returns allowance of user to the contract\n     */\n    function getUsdcAllowance() private view returns (uint256) {\n        return usdcToken.allowance(msg.sender, address(this));\n    }\n\n    /**\n     * @dev Returns usdc fund storage\n     * @notice Fund storage contains frozenBalance and domainOwnersFunds data\n     */\n    function _getUsdcFundStorage()\n        private\n        pure\n        returns (UsdcFundStorage storage $)\n    {\n        assembly {\n            $.slot := USDC_FUND_STORAGE_LOCATION\n        }\n    }\n\n    /**\n     * @dev Checks and returns domain\n     */\n    function createAndCheckFullDomain(\n        string calldata parentDomain,\n        string calldata childDomain\n    ) private view returns (string memory) {\n        if (\n            _getDomainStorage().domainList[parentDomain] == address(0)\n        ) {\n            revert ParentDomainNotFound(parentDomain);\n        }\n\n        string memory domain = createFullDomain(\n            childDomain,\n            parentDomain\n        );\n\n        if (_getDomainStorage().domainList[domain] != address(0)) {\n            revert DomainAlreadyTaken();\n        }\n\n        return domain;\n    }\n\n    /**\n     * @dev Transfering usdc funds from sender to the contract\n     */\n    function transferUsdc(uint256 allowance) private {\n        usdcToken.transferFrom(\n            msg.sender,\n            address(this),\n            allowance\n        );\n    }\n\n    /**\n     * @dev Returns balance of the contract\n     */\n    function getUsdcContractBalance() private view returns(uint256) {\n        return usdcToken.balanceOf(address(this));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/interfaces/IDomainRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.24;\n\n/**\n * @title Domain Registry Interface\n * @notice This interface defines the methods required for interacting with a domain registry contract.\n */\ninterface IDomainRegistry {\n    /**\n     * @dev Change price for domain registration\n     * @param newPrice The new price of the domain\n     */\n    function changePrice(uint256 newPrice) external;\n\n    /**\n     * @dev Buying a domain via eth\n     * @param domain The domain\n     */\n    function buyDomainViaEth(string calldata domain) external payable;\n\n    /**\n     * @dev Buying a domain via usdc\n     * @param domain The domain\n     */\n    function buyDomainViaUsdc(string calldata domain)\n        external\n        payable;\n\n    /**\n     * @dev Withdraw usdc to the owner of the contract\n     * @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\"\n     */\n    function withdrawUsdc() external;\n\n    /**\n     * @dev Withdraw eth to the owner of the contract\n     * @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\"\n     */\n    function withdrawEth() external;\n\n    /**\n     * @dev Allows buying a child domain under a parent domain.\n     * @param parentDomain The parent domain under which to register the child domain.\n     * @param childDomain The name of the child domain.\n     */\n    function buyChildDomainViaEth(\n        string calldata parentDomain,\n        string calldata childDomain\n    ) external payable;\n\n    /**\n     * @dev Allows domain owners to withdraw their eth funds from the contract.\n     * @notice This function allows domain owners to withdraw the eth funds deposited for their domains.\n     * @notice Only the domain owner can invoke this function.\n     * @notice If the domain owner has no funds deposited, the function reverts.\n     */\n    function withdrawDomainEth() external;\n\n    /**\n     * @dev Allows domain owners to withdraw their usdc funds from the contract.\n     * @notice This function allows domain owners to withdraw the usdc funds deposited for their domains.\n     * @notice Only the domain owner can invoke this function.\n     * @notice If the domain owner has no funds deposited, the function reverts.\n     */\n    function withdrawDomainUsdc() external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/DomainRegistry.sol",
								"contracts/interfaces/IDomainRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/DomainRegistry.sol",
								"contracts/interfaces/IDomainRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DomainRegistry.sol": {
				"DomainRegistry": {
					"abi": [
						{
							"inputs": [],
							"name": "DomainAlreadyTaken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reciever",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "FailedToWithdraw",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "incomingUsdc",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expectingUsdc",
									"type": "uint256"
								}
							],
							"name": "IncorrectUsdcAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "incomingValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expectingValue",
									"type": "uint256"
								}
							],
							"name": "IncorrectValueAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPriceFromOracle",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								}
							],
							"name": "NothingToWithdraw",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "incomingDomain",
									"type": "string"
								}
							],
							"name": "ParentDomainNotFound",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "incomingValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expectingValue",
									"type": "uint256"
								}
							],
							"name": "PriceEqualsZero",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "domain",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "DomainRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "PriceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "reciever",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_getEthToUsdPriceFromOracle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "parentDomain",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "childDomain",
									"type": "string"
								}
							],
							"name": "buyChildDomainViaEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "parentDomain",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "childDomain",
									"type": "string"
								}
							],
							"name": "buyChildDomainViaUsdc",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domain",
									"type": "string"
								}
							],
							"name": "buyDomainViaEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domain",
									"type": "string"
								}
							],
							"name": "buyDomainViaUsdc",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "changePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domain",
									"type": "string"
								}
							],
							"name": "getDomainOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRegistrationPriceInEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRegistrationPriceInUsdc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_pricefeed",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcToken",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDomainEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDomainUsdc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawUsdc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Vadym Sushkov",
						"errors": {
							"DomainAlreadyTaken()": [
								{
									"details": "Error thrown when attempting to register a domain that already exists."
								}
							],
							"FailedToWithdraw(address,bytes)": [
								{
									"details": "Error thrown when the withdrawal operation fails.",
									"params": {
										"data": "The error data."
									}
								}
							],
							"IncorrectUsdcAmount(uint256,uint256)": [
								{
									"details": "Error thrown when the usdc provided is not equal to the expected amount of usdc.",
									"params": {
										"expectingUsdc": "The expected udc amount.",
										"incomingUsdc": "The value provided."
									}
								}
							],
							"IncorrectValueAmount(uint256,uint256)": [
								{
									"details": "Error thrown when the value provided is not equal to the expected value.",
									"params": {
										"expectingValue": "The expected value.",
										"incomingValue": "The value provided."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"InvalidPriceFromOracle()": [
								{
									"details": "Error thrown when price from oracle is incorrect."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"NothingToWithdraw(address)": [
								{
									"details": "Error thrown when there is nothing to withdraw from the contract.",
									"params": {
										"requester": "The address of requester who request withdraw funds."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ParentDomainNotFound(string)": [
								{
									"details": "Error thrown when the parent domain is not found.",
									"params": {
										"incomingDomain": "The domain for which the parent domain is not found."
									}
								}
							],
							"PriceEqualsZero(uint256,uint256)": [
								{
									"details": "Error thrown when the provided price equals to zero.",
									"params": {
										"expectingValue": "The expected value.",
										"incomingValue": "The value that caused the error."
									}
								}
							]
						},
						"events": {
							"DomainRegistered(string,address)": {
								"details": "Event emitted when a domain is registered.",
								"params": {
									"controller": "The address of the controller of the domain.",
									"domain": "The domain name."
								}
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"PriceChanged(uint256)": {
								"details": "Event emitted when the price for domain registration is changed.",
								"params": {
									"newPrice": "The new price of the domain registration."
								}
							},
							"Withdrawal(address,uint256)": {
								"details": "Event emitted when funds are withdrawn from the contract.",
								"params": {
									"amount": "The amount of funds withdrawn."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"_getEthToUsdPriceFromOracle()": {
								"details": "Returns current Eth/Usd price"
							},
							"buyChildDomainViaEth(string,string)": {
								"details": "Allows buying a child domain under a parent domain.",
								"params": {
									"childDomain": "The name of the child domain.",
									"parentDomain": "The parent domain under which to register the child domain."
								}
							},
							"buyDomainViaEth(string)": {
								"details": "Buying a domain via eth",
								"params": {
									"domain": "The domain"
								}
							},
							"buyDomainViaUsdc(string)": {
								"details": "Buying a domain via usdc",
								"params": {
									"domain": "The domain"
								}
							},
							"changePrice(uint256)": {
								"details": "Change price for domain registration",
								"params": {
									"newPrice": "The new price of the domain"
								}
							},
							"initialize(uint256,address,address)": {
								"details": "Sets owner of the contract and price for domain registration",
								"params": {
									"initialPrice": "Sets default price for domains"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawDomainEth()": {
								"details": "Allows domain owners to withdraw their eth funds from the contract."
							},
							"withdrawDomainUsdc()": {
								"details": "Allows domain owners to withdraw their usdc funds from the contract."
							},
							"withdrawEth()": {
								"details": "Withdraw eth to the owner of the contract"
							},
							"withdrawUsdc()": {
								"details": "Withdraw usdc to the owner of the contract"
							}
						},
						"stateVariables": {
							"domainSeparator": {
								"details": "Separator used to concatenate domain names."
							},
							"priceFeed": {
								"details": "Contract to get the latest price ETH/USD."
							},
							"usdcToken": {
								"details": "Contract to interact with usdc token."
							}
						},
						"title": "Domain Registry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DomainRegistry.sol\":592:17287  contract DomainRegistry is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DomainRegistry.sol\":592:17287  contract DomainRegistry is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x82702ff4\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb4988fd0\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb4988fd0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfbd43caa\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfc8b2653\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfee84d4e\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x82702ff4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa0ef91df\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa2b40d19\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x37ee4b47\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x37ee4b47\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x559aae74\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x59e41286\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x1b0e17a3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x225068c2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x25970115\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2dd398b5\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DomainRegistry.sol\":9960:10226  function buyDomainViaEth(string calldata domain)... */\n    tag_2:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/DomainRegistry.sol\":9211:9870  function buyChildDomainViaUsdc(... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/DomainRegistry.sol\":8239:8407  function getDomainOwner(string calldata domain)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DomainRegistry.sol\":7768:7976  function getRegistrationPriceInEth()... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DomainRegistry.sol\":8636:9205  function buyChildDomainViaEth(... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/DomainRegistry.sol\":12556:13252  function withdrawDomainEth() public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/DomainRegistry.sol\":8036:8193  function getRegistrationPriceInUsdc()... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/DomainRegistry.sol\":13605:14118  function withdrawDomainUsdc() public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DomainRegistry.sol\":11177:11672  function withdrawEth() public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/DomainRegistry.sol\":10788:11007  function changePrice(uint256 newPrice)... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/DomainRegistry.sol\":7377:7708  function initialize(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/DomainRegistry.sol\":10317:10666  function buyDomainViaUsdc(string calldata domain)... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/DomainRegistry.sol\":15389:15669  function _getEthToUsdPriceFromOracle()... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DomainRegistry.sol\":11843:12205  function withdrawUsdc() public onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/DomainRegistry.sol\":9960:10226  function buyDomainViaEth(string calldata domain)... */\n    tag_25:\n        /* \"contracts/DomainRegistry.sol\":6178:6194  uint256 ethPrice */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":6197:6224  getRegistrationPriceInEth() */\n      tag_90\n        /* \"contracts/DomainRegistry.sol\":6197:6222  getRegistrationPriceInEth */\n      tag_38\n        /* \"contracts/DomainRegistry.sol\":6197:6224  getRegistrationPriceInEth() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/DomainRegistry.sol\":6178:6224  uint256 ethPrice = getRegistrationPriceInEth() */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":6252:6260  ethPrice */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":6239:6248  msg.value */\n      callvalue\n        /* \"contracts/DomainRegistry.sol\":6239:6260  msg.value != ethPrice */\n      eq\n        /* \"contracts/DomainRegistry.sol\":6235:6414  if (msg.value != ethPrice) {... */\n      tag_91\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":6337:6346  msg.value */\n      callvalue\n        /* \"contracts/DomainRegistry.sol\":6380:6388  ethPrice */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":6283:6403  IncorrectValueAmount({... */\n      mload(0x40)\n      0xbe7b9d4d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":6235:6414  if (msg.value != ethPrice) {... */\n    tag_91:\n        /* \"contracts/DomainRegistry.sol\":10094:10100  domain */\n      dup3\n      dup3\n        /* \"contracts/DomainRegistry.sol\":7150:7151  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":7100:7152  _getDomainStorage().domainList[domain] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":7100:7119  _getDomainStorage() */\n      tag_95\n        /* \"contracts/DomainRegistry.sol\":7100:7117  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":7100:7119  _getDomainStorage() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/DomainRegistry.sol\":7100:7130  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":7131:7137  domain */\n      dup4\n      dup4\n        /* \"contracts/DomainRegistry.sol\":7100:7138  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":7100:7152  _getDomainStorage().domainList[domain] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DomainRegistry.sol\":7096:7206  if (_getDomainStorage().domainList[domain] != address(0)) {... */\n      tag_99\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":7175:7195  DomainAlreadyTaken() */\n      mload(0x40)\n      0xc5e8402d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":7096:7206  if (_getDomainStorage().domainList[domain] != address(0)) {... */\n    tag_99:\n        /* \"contracts/DomainRegistry.sol\":10157:10167  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":10116:10135  _getDomainStorage() */\n      tag_101\n        /* \"contracts/DomainRegistry.sol\":10116:10133  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":10116:10135  _getDomainStorage() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/DomainRegistry.sol\":10116:10146  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":10147:10153  domain */\n      dup7\n      dup7\n        /* \"contracts/DomainRegistry.sol\":10116:10154  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_102:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/DomainRegistry.sol\":10116:10167  _getDomainStorage().domainList[domain] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":10208:10218  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":10183:10219  DomainRegistered(domain, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12\n        /* \"contracts/DomainRegistry.sol\":10200:10206  domain */\n      dup7\n      dup7\n        /* \"contracts/DomainRegistry.sol\":10183:10219  DomainRegistered(domain, msg.sender) */\n      mload(0x40)\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DomainRegistry.sol\":6423:6424  _ */\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":6168:6431  {... */\n      pop\n        /* \"contracts/DomainRegistry.sol\":9960:10226  function buyDomainViaEth(string calldata domain)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":9211:9870  function buyChildDomainViaUsdc(... */\n    tag_29:\n        /* \"contracts/DomainRegistry.sol\":6580:6597  uint256 allowance */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":6600:6618  getUsdcAllowance() */\n      tag_106\n        /* \"contracts/DomainRegistry.sol\":6600:6616  getUsdcAllowance */\n      tag_107\n        /* \"contracts/DomainRegistry.sol\":6600:6618  getUsdcAllowance() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/DomainRegistry.sol\":6580:6618  uint256 allowance = getUsdcAllowance() */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":6628:6654  uint256 _registrationPrice */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":6657:6676  _getDomainStorage() */\n      tag_108\n        /* \"contracts/DomainRegistry.sol\":6657:6674  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":6657:6676  _getDomainStorage() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/DomainRegistry.sol\":6657:6707  _getDomainStorage()... */\n      0x00\n      add\n      sload\n        /* \"contracts/DomainRegistry.sol\":6628:6707  uint256 _registrationPrice = _getDomainStorage()... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":6735:6753  _registrationPrice */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":6722:6731  allowance */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":6722:6753  allowance != _registrationPrice */\n      eq\n        /* \"contracts/DomainRegistry.sol\":6718:6914  if (allowance != _registrationPrice) {... */\n      tag_109\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":6828:6837  allowance */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":6870:6888  _registrationPrice */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":6776:6903  IncorrectUsdcAmount({... */\n      mload(0x40)\n      0x035a0e0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":6718:6914  if (allowance != _registrationPrice) {... */\n    tag_109:\n        /* \"contracts/DomainRegistry.sol\":9370:9390  string memory domain */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9393:9478  createAndCheckFullDomain(... */\n      tag_112\n        /* \"contracts/DomainRegistry.sol\":9431:9443  parentDomain */\n      dup8\n      dup8\n        /* \"contracts/DomainRegistry.sol\":9457:9468  childDomain */\n      dup8\n      dup8\n        /* \"contracts/DomainRegistry.sol\":9393:9417  createAndCheckFullDomain */\n      tag_113\n        /* \"contracts/DomainRegistry.sol\":9393:9478  createAndCheckFullDomain(... */\n      jump\t// in\n    tag_112:\n        /* \"contracts/DomainRegistry.sol\":9370:9478  string memory domain = createAndCheckFullDomain(... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":9488:9505  uint256 allowance */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9508:9526  getUsdcAllowance() */\n      tag_114\n        /* \"contracts/DomainRegistry.sol\":9508:9524  getUsdcAllowance */\n      tag_107\n        /* \"contracts/DomainRegistry.sol\":9508:9526  getUsdcAllowance() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/DomainRegistry.sol\":9488:9526  uint256 allowance = getUsdcAllowance() */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":9537:9560  transferUsdc(allowance) */\n      tag_115\n        /* \"contracts/DomainRegistry.sol\":9550:9559  allowance */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":9537:9549  transferUsdc */\n      tag_116\n        /* \"contracts/DomainRegistry.sol\":9537:9560  transferUsdc(allowance) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/DomainRegistry.sol\":9612:9622  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":9571:9590  _getDomainStorage() */\n      tag_117\n        /* \"contracts/DomainRegistry.sol\":9571:9588  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":9571:9590  _getDomainStorage() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/DomainRegistry.sol\":9571:9601  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":9602:9608  domain */\n      dup4\n        /* \"contracts/DomainRegistry.sol\":9571:9609  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9571:9622  _getDomainStorage().domainList[domain] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":9672:9681  allowance */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":9633:9654  _getUsdcFundStorage() */\n      tag_120\n        /* \"contracts/DomainRegistry.sol\":9633:9652  _getUsdcFundStorage */\n      tag_121\n        /* \"contracts/DomainRegistry.sol\":9633:9654  _getUsdcFundStorage() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/DomainRegistry.sol\":9633:9668  _getUsdcFundStorage().frozenBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9633:9681  _getUsdcFundStorage().frozenBalance += allowance */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":9802:9811  allowance */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":9691:9712  _getUsdcFundStorage() */\n      tag_124\n        /* \"contracts/DomainRegistry.sol\":9691:9710  _getUsdcFundStorage */\n      tag_121\n        /* \"contracts/DomainRegistry.sol\":9691:9712  _getUsdcFundStorage() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/DomainRegistry.sol\":9691:9730  _getUsdcFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":9691:9798  _getUsdcFundStorage().domainOwnersFunds[... */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9744:9763  _getDomainStorage() */\n      tag_125\n        /* \"contracts/DomainRegistry.sol\":9744:9761  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":9744:9763  _getDomainStorage() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/DomainRegistry.sol\":9744:9774  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":9775:9787  parentDomain */\n      dup12\n      dup12\n        /* \"contracts/DomainRegistry.sol\":9744:9788  _getDomainStorage().domainList[parentDomain] */\n      mload(0x40)\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_126:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":9691:9798  _getUsdcFundStorage().domainOwnersFunds[... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9691:9811  _getUsdcFundStorage().domainOwnersFunds[... */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":9852:9862  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":9827:9863  DomainRegistered(domain, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12\n        /* \"contracts/DomainRegistry.sol\":9844:9850  domain */\n      dup4\n        /* \"contracts/DomainRegistry.sol\":9827:9863  DomainRegistered(domain, msg.sender) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DomainRegistry.sol\":9360:9870  {... */\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":6570:6931  {... */\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":9211:9870  function buyChildDomainViaUsdc(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":8239:8407  function getDomainOwner(string calldata domain)... */\n    tag_33:\n        /* \"contracts/DomainRegistry.sol\":8332:8339  address */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":8362:8381  _getDomainStorage() */\n      tag_131\n        /* \"contracts/DomainRegistry.sol\":8362:8379  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":8362:8381  _getDomainStorage() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/DomainRegistry.sol\":8362:8392  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":8393:8399  domain */\n      dup4\n      dup4\n        /* \"contracts/DomainRegistry.sol\":8362:8400  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_132:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":8355:8400  return _getDomainStorage().domainList[domain] */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":8239:8407  function getDomainOwner(string calldata domain)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":7768:7976  function getRegistrationPriceInEth()... */\n    tag_38:\n        /* \"contracts/DomainRegistry.sol\":7850:7857  uint256 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":7940:7969  _getEthToUsdPriceFromOracle() */\n      tag_134\n        /* \"contracts/DomainRegistry.sol\":7940:7967  _getEthToUsdPriceFromOracle */\n      tag_84\n        /* \"contracts/DomainRegistry.sol\":7940:7969  _getEthToUsdPriceFromOracle() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/DomainRegistry.sol\":7929:7936  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DomainRegistry.sol\":7921:7926  10**2 */\n      0x64\n        /* \"contracts/DomainRegistry.sol\":7881:7900  _getDomainStorage() */\n      tag_135\n        /* \"contracts/DomainRegistry.sol\":7881:7898  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":7881:7900  _getDomainStorage() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/DomainRegistry.sol\":7881:7918  _getDomainStorage().registrationPrice */\n      0x00\n      add\n      sload\n        /* \"contracts/DomainRegistry.sol\":7881:7926  _getDomainStorage().registrationPrice * 10**2 */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/DomainRegistry.sol\":7881:7936  _getDomainStorage().registrationPrice * 10**2 * 1 ether */\n      tag_138\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_138:\n        /* \"contracts/DomainRegistry.sol\":7880:7969  (_getDomainStorage().registrationPrice * 10**2 * 1 ether) / _getEthToUsdPriceFromOracle() */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/DomainRegistry.sol\":7873:7969  return (_getDomainStorage().registrationPrice * 10**2 * 1 ether) / _getEthToUsdPriceFromOracle() */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":7768:7976  function getRegistrationPriceInEth()... */\n      swap1\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":8636:9205  function buyChildDomainViaEth(... */\n    tag_43:\n        /* \"contracts/DomainRegistry.sol\":6178:6194  uint256 ethPrice */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":6197:6224  getRegistrationPriceInEth() */\n      tag_142\n        /* \"contracts/DomainRegistry.sol\":6197:6222  getRegistrationPriceInEth */\n      tag_38\n        /* \"contracts/DomainRegistry.sol\":6197:6224  getRegistrationPriceInEth() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/DomainRegistry.sol\":6178:6224  uint256 ethPrice = getRegistrationPriceInEth() */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":6252:6260  ethPrice */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":6239:6248  msg.value */\n      callvalue\n        /* \"contracts/DomainRegistry.sol\":6239:6260  msg.value != ethPrice */\n      eq\n        /* \"contracts/DomainRegistry.sol\":6235:6414  if (msg.value != ethPrice) {... */\n      tag_143\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":6337:6346  msg.value */\n      callvalue\n        /* \"contracts/DomainRegistry.sol\":6380:6388  ethPrice */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":6283:6403  IncorrectValueAmount({... */\n      mload(0x40)\n      0xbe7b9d4d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":6235:6414  if (msg.value != ethPrice) {... */\n    tag_143:\n        /* \"contracts/DomainRegistry.sol\":8795:8815  string memory domain */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":8818:8903  createAndCheckFullDomain(... */\n      tag_146\n        /* \"contracts/DomainRegistry.sol\":8856:8868  parentDomain */\n      dup7\n      dup7\n        /* \"contracts/DomainRegistry.sol\":8882:8893  childDomain */\n      dup7\n      dup7\n        /* \"contracts/DomainRegistry.sol\":8818:8842  createAndCheckFullDomain */\n      tag_113\n        /* \"contracts/DomainRegistry.sol\":8818:8903  createAndCheckFullDomain(... */\n      jump\t// in\n    tag_146:\n        /* \"contracts/DomainRegistry.sol\":8795:8903  string memory domain = createAndCheckFullDomain(... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":8955:8965  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":8914:8933  _getDomainStorage() */\n      tag_147\n        /* \"contracts/DomainRegistry.sol\":8914:8931  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":8914:8933  _getDomainStorage() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/DomainRegistry.sol\":8914:8944  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":8945:8951  domain */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":8914:8952  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_148:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/DomainRegistry.sol\":8914:8965  _getDomainStorage().domainList[domain] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":9011:9020  msg.value */\n      callvalue\n        /* \"contracts/DomainRegistry.sol\":8976:8993  _getFundStorage() */\n      tag_149\n        /* \"contracts/DomainRegistry.sol\":8976:8991  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":8976:8993  _getFundStorage() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/DomainRegistry.sol\":8976:9007  _getFundStorage().frozenBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/DomainRegistry.sol\":8976:9020  _getFundStorage().frozenBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_151:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":9137:9146  msg.value */\n      callvalue\n        /* \"contracts/DomainRegistry.sol\":9030:9047  _getFundStorage() */\n      tag_152\n        /* \"contracts/DomainRegistry.sol\":9030:9045  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":9030:9047  _getFundStorage() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/DomainRegistry.sol\":9030:9065  _getFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":9030:9133  _getFundStorage().domainOwnersFunds[... */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9079:9098  _getDomainStorage() */\n      tag_153\n        /* \"contracts/DomainRegistry.sol\":9079:9096  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":9079:9098  _getDomainStorage() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/DomainRegistry.sol\":9079:9109  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":9110:9122  parentDomain */\n      dup10\n      dup10\n        /* \"contracts/DomainRegistry.sol\":9079:9123  _getDomainStorage().domainList[parentDomain] */\n      mload(0x40)\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_154:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":9030:9133  _getFundStorage().domainOwnersFunds[... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DomainRegistry.sol\":9030:9146  _getFundStorage().domainOwnersFunds[... */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":9187:9197  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":9162:9198  DomainRegistered(domain, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12\n        /* \"contracts/DomainRegistry.sol\":9179:9185  domain */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":9162:9198  DomainRegistered(domain, msg.sender) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DomainRegistry.sol\":8785:9205  {... */\n      pop\n        /* \"contracts/DomainRegistry.sol\":6168:6431  {... */\n      pop\n        /* \"contracts/DomainRegistry.sol\":8636:9205  function buyChildDomainViaEth(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":12556:13252  function withdrawDomainEth() public {... */\n    tag_46:\n        /* \"contracts/DomainRegistry.sol\":12657:12658  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":12606:12623  _getFundStorage() */\n      tag_158\n        /* \"contracts/DomainRegistry.sol\":12606:12621  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":12606:12623  _getFundStorage() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/DomainRegistry.sol\":12606:12641  _getFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":12606:12653  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":12642:12652  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":12606:12653  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DomainRegistry.sol\":12606:12658  _getFundStorage().domainOwnersFunds[msg.sender] == 0 */\n      sub\n        /* \"contracts/DomainRegistry.sol\":12602:12721  if (_getFundStorage().domainOwnersFunds[msg.sender] == 0) {... */\n      tag_159\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":12699:12709  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":12681:12710  NothingToWithdraw(msg.sender) */\n      mload(0x40)\n      0xdc69dc1600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":12602:12721  if (_getFundStorage().domainOwnersFunds[msg.sender] == 0) {... */\n    tag_159:\n        /* \"contracts/DomainRegistry.sol\":12732:12741  bool sent */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":12743:12760  bytes memory data */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":12772:12782  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":12764:12788  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":12809:12826  _getFundStorage() */\n      tag_161\n        /* \"contracts/DomainRegistry.sol\":12809:12824  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":12809:12826  _getFundStorage() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/DomainRegistry.sol\":12809:12844  _getFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":12809:12856  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":12845:12855  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":12809:12856  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DomainRegistry.sol\":12764:12870  payable(msg.sender).call{... */\n      mload(0x40)\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_166\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_165)\n    tag_166:\n      0x60\n      swap2\n      pop\n    tag_165:\n      pop\n        /* \"contracts/DomainRegistry.sol\":12731:12870  (bool sent, bytes memory data) = payable(msg.sender).call{... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/DomainRegistry.sol\":12886:12890  sent */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":12881:12958  if (!sent) {... */\n      tag_167\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":12930:12940  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":12942:12946  data */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":12913:12947  FailedToWithdraw(msg.sender, data) */\n      mload(0x40)\n      0x7824688c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":12881:12958  if (!sent) {... */\n    tag_167:\n        /* \"contracts/DomainRegistry.sol\":13003:13020  _getFundStorage() */\n      tag_170\n        /* \"contracts/DomainRegistry.sol\":13003:13018  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":13003:13020  _getFundStorage() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/DomainRegistry.sol\":13003:13051  _getFundStorage()... */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":13003:13063  _getFundStorage()... */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13052:13062  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13003:13063  _getFundStorage()... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DomainRegistry.sol\":12968:12985  _getFundStorage() */\n      tag_171\n        /* \"contracts/DomainRegistry.sol\":12968:12983  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":12968:12985  _getFundStorage() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/DomainRegistry.sol\":12968:12999  _getFundStorage().frozenBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/DomainRegistry.sol\":12968:13063  _getFundStorage().frozenBalance -= _getFundStorage()... */\n      dup3\n      dup3\n      sload\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":13123:13124  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13073:13090  _getFundStorage() */\n      tag_174\n        /* \"contracts/DomainRegistry.sol\":13073:13088  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":13073:13090  _getFundStorage() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/DomainRegistry.sol\":13073:13108  _getFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":13073:13120  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13109:13119  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13073:13120  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DomainRegistry.sol\":13073:13124  _getFundStorage().domainOwnersFunds[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":13140:13245  Withdrawal(... */\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n        /* \"contracts/DomainRegistry.sol\":13164:13174  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13188:13205  _getFundStorage() */\n      tag_175\n        /* \"contracts/DomainRegistry.sol\":13188:13203  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":13188:13205  _getFundStorage() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/DomainRegistry.sol\":13188:13223  _getFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":13188:13235  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13224:13234  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13188:13235  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DomainRegistry.sol\":13140:13245  Withdrawal(... */\n      mload(0x40)\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DomainRegistry.sol\":12592:13252  {... */\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":12556:13252  function withdrawDomainEth() public {... */\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":8036:8193  function getRegistrationPriceInUsdc()... */\n    tag_49:\n        /* \"contracts/DomainRegistry.sol\":8119:8126  uint256 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":8149:8168  _getDomainStorage() */\n      tag_179\n        /* \"contracts/DomainRegistry.sol\":8149:8166  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":8149:8168  _getDomainStorage() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/DomainRegistry.sol\":8149:8186  _getDomainStorage().registrationPrice */\n      0x00\n      add\n      sload\n        /* \"contracts/DomainRegistry.sol\":8142:8186  return _getDomainStorage().registrationPrice */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":8036:8193  function getRegistrationPriceInUsdc()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":13605:14118  function withdrawDomainUsdc() public {... */\n    tag_56:\n        /* \"contracts/DomainRegistry.sol\":13711:13712  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13656:13677  _getUsdcFundStorage() */\n      tag_187\n        /* \"contracts/DomainRegistry.sol\":13656:13675  _getUsdcFundStorage */\n      tag_121\n        /* \"contracts/DomainRegistry.sol\":13656:13677  _getUsdcFundStorage() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/DomainRegistry.sol\":13656:13695  _getUsdcFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":13656:13707  _getUsdcFundStorage().domainOwnersFunds[msg.sender] */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13696:13706  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13656:13707  _getUsdcFundStorage().domainOwnersFunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DomainRegistry.sol\":13656:13712  _getUsdcFundStorage().domainOwnersFunds[msg.sender] == 0 */\n      sub\n        /* \"contracts/DomainRegistry.sol\":13652:13775  if (_getUsdcFundStorage().domainOwnersFunds[msg.sender] == 0) {... */\n      tag_188\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":13753:13763  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13735:13764  NothingToWithdraw(msg.sender) */\n      mload(0x40)\n      0xdc69dc1600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":13652:13775  if (_getUsdcFundStorage().domainOwnersFunds[msg.sender] == 0) {... */\n    tag_188:\n        /* \"contracts/DomainRegistry.sol\":13785:13804  uint256 fundsToSend */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13807:13824  _getFundStorage() */\n      tag_190\n        /* \"contracts/DomainRegistry.sol\":13807:13822  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":13807:13824  _getFundStorage() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/DomainRegistry.sol\":13807:13842  _getFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":13807:13854  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13843:13853  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13807:13854  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DomainRegistry.sol\":13785:13854  uint256 fundsToSend = _getFundStorage().domainOwnersFunds[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":13865:13874  usdcToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":13865:13883  usdcToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/DomainRegistry.sol\":13884:13894  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13896:13907  fundsToSend */\n      dup4\n        /* \"contracts/DomainRegistry.sol\":13865:13908  usdcToken.transfer(msg.sender, fundsToSend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      pop\n        /* \"contracts/DomainRegistry.sol\":13954:13965  fundsToSend */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":13919:13936  _getFundStorage() */\n      tag_196\n        /* \"contracts/DomainRegistry.sol\":13919:13934  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":13919:13936  _getFundStorage() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/DomainRegistry.sol\":13919:13950  _getFundStorage().frozenBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13919:13965  _getFundStorage().frozenBalance -= fundsToSend */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":14025:14026  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":13975:13992  _getFundStorage() */\n      tag_198\n        /* \"contracts/DomainRegistry.sol\":13975:13990  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":13975:13992  _getFundStorage() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/DomainRegistry.sol\":13975:14010  _getFundStorage().domainOwnersFunds */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":13975:14022  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":14011:14021  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":13975:14022  _getFundStorage().domainOwnersFunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DomainRegistry.sol\":13975:14026  _getFundStorage().domainOwnersFunds[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":14042:14111  Withdrawal(... */\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n        /* \"contracts/DomainRegistry.sol\":14066:14076  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":14090:14101  fundsToSend */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":14042:14111  Withdrawal(... */\n      mload(0x40)\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DomainRegistry.sol\":13642:14118  {... */\n      pop\n        /* \"contracts/DomainRegistry.sol\":13605:14118  function withdrawDomainUsdc() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":11177:11672  function withdrawEth() public onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/DomainRegistry.sol\":11227:11250  uint256 contractBalance */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":11289:11306  _getFundStorage() */\n      tag_206\n        /* \"contracts/DomainRegistry.sol\":11289:11304  _getFundStorage */\n      tag_150\n        /* \"contracts/DomainRegistry.sol\":11289:11306  _getFundStorage() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/DomainRegistry.sol\":11289:11320  _getFundStorage().frozenBalance */\n      0x00\n      add\n      sload\n        /* \"contracts/DomainRegistry.sol\":11253:11274  address(this).balance */\n      selfbalance\n        /* \"contracts/DomainRegistry.sol\":11253:11320  address(this).balance -... */\n      tag_207\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_207:\n        /* \"contracts/DomainRegistry.sol\":11227:11320  uint256 contractBalance = address(this).balance -... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":11354:11355  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":11335:11350  contractBalance */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":11335:11355  contractBalance == 0 */\n      sub\n        /* \"contracts/DomainRegistry.sol\":11331:11415  if (contractBalance == 0) {... */\n      tag_208\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":11396:11403  owner() */\n      tag_209\n        /* \"contracts/DomainRegistry.sol\":11396:11401  owner */\n      tag_59\n        /* \"contracts/DomainRegistry.sol\":11396:11403  owner() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/DomainRegistry.sol\":11378:11404  NothingToWithdraw(owner()) */\n      mload(0x40)\n      0xdc69dc1600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":11331:11415  if (contractBalance == 0) {... */\n    tag_208:\n        /* \"contracts/DomainRegistry.sol\":11426:11435  bool sent */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":11437:11454  bytes memory data */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":11466:11473  owner() */\n      tag_211\n        /* \"contracts/DomainRegistry.sol\":11466:11471  owner */\n      tag_59\n        /* \"contracts/DomainRegistry.sol\":11466:11473  owner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/DomainRegistry.sol\":11458:11479  payable(owner()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":11500:11515  contractBalance */\n      dup4\n        /* \"contracts/DomainRegistry.sol\":11458:11529  payable(owner()).call{... */\n      mload(0x40)\n      tag_212\n      swap1\n      tag_163\n      jump\t// in\n    tag_212:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_215\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_214)\n    tag_215:\n      0x60\n      swap2\n      pop\n    tag_214:\n      pop\n        /* \"contracts/DomainRegistry.sol\":11425:11529  (bool sent, bytes memory data) = payable(owner()).call{... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/DomainRegistry.sol\":11545:11549  sent */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":11540:11614  if (!sent) {... */\n      tag_216\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":11589:11596  owner() */\n      tag_217\n        /* \"contracts/DomainRegistry.sol\":11589:11594  owner */\n      tag_59\n        /* \"contracts/DomainRegistry.sol\":11589:11596  owner() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/DomainRegistry.sol\":11598:11602  data */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":11572:11603  FailedToWithdraw(owner(), data) */\n      mload(0x40)\n      0x7824688c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":11540:11614  if (!sent) {... */\n    tag_216:\n        /* \"contracts/DomainRegistry.sol\":11629:11665  Withdrawal(owner(), contractBalance) */\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n        /* \"contracts/DomainRegistry.sol\":11640:11647  owner() */\n      tag_219\n        /* \"contracts/DomainRegistry.sol\":11640:11645  owner */\n      tag_59\n        /* \"contracts/DomainRegistry.sol\":11640:11647  owner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/DomainRegistry.sol\":11649:11664  contractBalance */\n      dup5\n        /* \"contracts/DomainRegistry.sol\":11629:11665  Withdrawal(owner(), contractBalance) */\n      mload(0x40)\n      tag_220\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DomainRegistry.sol\":11217:11672  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":11177:11672  function withdrawEth() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":10788:11007  function changePrice(uint256 newPrice)... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/DomainRegistry.sol\":10890:10898  newPrice */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":5870:5871  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":5861:5866  price */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":5861:5871  price == 0 */\n      sub\n        /* \"contracts/DomainRegistry.sol\":5857:6012  if (price == 0) {... */\n      tag_224\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":5927:5932  price */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":5950:5969  _getDomainStorage() */\n      tag_225\n        /* \"contracts/DomainRegistry.sol\":5950:5967  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":5950:5969  _getDomainStorage() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/DomainRegistry.sol\":5950:5987  _getDomainStorage().registrationPrice */\n      0x00\n      add\n      sload\n        /* \"contracts/DomainRegistry.sol\":5894:6001  PriceEqualsZero(... */\n      mload(0x40)\n      0xd090dd0600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":5857:6012  if (price == 0) {... */\n    tag_224:\n        /* \"contracts/DomainRegistry.sol\":10954:10962  newPrice */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":10914:10933  _getDomainStorage() */\n      tag_228\n        /* \"contracts/DomainRegistry.sol\":10914:10931  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":10914:10933  _getDomainStorage() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/DomainRegistry.sol\":10914:10951  _getDomainStorage().registrationPrice */\n      0x00\n      add\n        /* \"contracts/DomainRegistry.sol\":10914:10962  _getDomainStorage().registrationPrice = newPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":10978:11000  PriceChanged(newPrice) */\n      0xa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d622\n        /* \"contracts/DomainRegistry.sol\":10991:10999  newPrice */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":10978:11000  PriceChanged(newPrice) */\n      mload(0x40)\n      tag_229\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2357:2358  _ */\n      pop\n        /* \"contracts/DomainRegistry.sol\":10788:11007  function changePrice(uint256 newPrice)... */\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":7377:7708  function initialize(... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_237:\n        /* \"contracts/DomainRegistry.sol\":7558:7570  initialPrice */\n      dup8\n        /* \"contracts/DomainRegistry.sol\":7518:7537  _getDomainStorage() */\n      tag_239\n        /* \"contracts/DomainRegistry.sol\":7518:7535  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":7518:7537  _getDomainStorage() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/DomainRegistry.sol\":7518:7555  _getDomainStorage().registrationPrice */\n      0x00\n      add\n        /* \"contracts/DomainRegistry.sol\":7518:7570  _getDomainStorage().registrationPrice = initialPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":7580:7606  __Ownable_init(msg.sender) */\n      tag_240\n        /* \"contracts/DomainRegistry.sol\":7595:7605  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":7580:7594  __Ownable_init */\n      tag_241\n        /* \"contracts/DomainRegistry.sol\":7580:7606  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/DomainRegistry.sol\":7650:7660  _pricefeed */\n      dup7\n        /* \"contracts/DomainRegistry.sol\":7616:7625  priceFeed */\n      0x00\n      dup1\n        /* \"contracts/DomainRegistry.sol\":7616:7661  priceFeed = AggregatorV3Interface(_pricefeed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":7690:7700  _usdcToken */\n      dup6\n        /* \"contracts/DomainRegistry.sol\":7671:7680  usdcToken */\n      0x01\n      0x00\n        /* \"contracts/DomainRegistry.sol\":7671:7701  usdcToken = IERC20(_usdcToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":7377:7708  function initialize(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":10317:10666  function buyDomainViaUsdc(string calldata domain)... */\n    tag_81:\n        /* \"contracts/DomainRegistry.sol\":6580:6597  uint256 allowance */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":6600:6618  getUsdcAllowance() */\n      tag_252\n        /* \"contracts/DomainRegistry.sol\":6600:6616  getUsdcAllowance */\n      tag_107\n        /* \"contracts/DomainRegistry.sol\":6600:6618  getUsdcAllowance() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/DomainRegistry.sol\":6580:6618  uint256 allowance = getUsdcAllowance() */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":6628:6654  uint256 _registrationPrice */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":6657:6676  _getDomainStorage() */\n      tag_253\n        /* \"contracts/DomainRegistry.sol\":6657:6674  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":6657:6676  _getDomainStorage() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/DomainRegistry.sol\":6657:6707  _getDomainStorage()... */\n      0x00\n      add\n      sload\n        /* \"contracts/DomainRegistry.sol\":6628:6707  uint256 _registrationPrice = _getDomainStorage()... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":6735:6753  _registrationPrice */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":6722:6731  allowance */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":6722:6753  allowance != _registrationPrice */\n      eq\n        /* \"contracts/DomainRegistry.sol\":6718:6914  if (allowance != _registrationPrice) {... */\n      tag_254\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":6828:6837  allowance */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":6870:6888  _registrationPrice */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":6776:6903  IncorrectUsdcAmount({... */\n      mload(0x40)\n      0x035a0e0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":6718:6914  if (allowance != _registrationPrice) {... */\n    tag_254:\n        /* \"contracts/DomainRegistry.sol\":10451:10457  domain */\n      dup4\n      dup4\n        /* \"contracts/DomainRegistry.sol\":7150:7151  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":7100:7152  _getDomainStorage().domainList[domain] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":7100:7119  _getDomainStorage() */\n      tag_257\n        /* \"contracts/DomainRegistry.sol\":7100:7117  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":7100:7119  _getDomainStorage() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/DomainRegistry.sol\":7100:7130  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":7131:7137  domain */\n      dup4\n      dup4\n        /* \"contracts/DomainRegistry.sol\":7100:7138  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_258\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_258:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":7100:7152  _getDomainStorage().domainList[domain] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DomainRegistry.sol\":7096:7206  if (_getDomainStorage().domainList[domain] != address(0)) {... */\n      tag_259\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":7175:7195  DomainAlreadyTaken() */\n      mload(0x40)\n      0xc5e8402d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":7096:7206  if (_getDomainStorage().domainList[domain] != address(0)) {... */\n    tag_259:\n        /* \"contracts/DomainRegistry.sol\":10473:10490  uint256 allowance */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":10493:10511  getUsdcAllowance() */\n      tag_261\n        /* \"contracts/DomainRegistry.sol\":10493:10509  getUsdcAllowance */\n      tag_107\n        /* \"contracts/DomainRegistry.sol\":10493:10511  getUsdcAllowance() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/DomainRegistry.sol\":10473:10511  uint256 allowance = getUsdcAllowance() */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":10522:10545  transferUsdc(allowance) */\n      tag_262\n        /* \"contracts/DomainRegistry.sol\":10535:10544  allowance */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":10522:10534  transferUsdc */\n      tag_116\n        /* \"contracts/DomainRegistry.sol\":10522:10545  transferUsdc(allowance) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/DomainRegistry.sol\":10597:10607  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":10556:10575  _getDomainStorage() */\n      tag_263\n        /* \"contracts/DomainRegistry.sol\":10556:10573  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":10556:10575  _getDomainStorage() */\n      jump\t// in\n    tag_263:\n        /* \"contracts/DomainRegistry.sol\":10556:10586  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":10587:10593  domain */\n      dup9\n      dup9\n        /* \"contracts/DomainRegistry.sol\":10556:10594  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_264\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_264:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/DomainRegistry.sol\":10556:10607  _getDomainStorage().domainList[domain] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":10648:10658  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":10623:10659  DomainRegistered(domain, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12\n        /* \"contracts/DomainRegistry.sol\":10640:10646  domain */\n      dup9\n      dup9\n        /* \"contracts/DomainRegistry.sol\":10623:10659  DomainRegistered(domain, msg.sender) */\n      mload(0x40)\n      tag_265\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DomainRegistry.sol\":10463:10666  {... */\n      pop\n        /* \"contracts/DomainRegistry.sol\":6923:6924  _ */\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":6570:6931  {... */\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":10317:10666  function buyDomainViaUsdc(string calldata domain)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":15389:15669  function _getEthToUsdPriceFromOracle()... */\n    tag_84:\n        /* \"contracts/DomainRegistry.sol\":15474:15481  uint256 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":15500:15512  int256 price */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":15522:15531  priceFeed */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":15522:15547  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/DomainRegistry.sol\":15522:15549  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"contracts/DomainRegistry.sol\":15497:15549  (, int256 price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":15572:15573  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":15564:15569  price */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":15564:15573  price < 0 */\n      slt\n        /* \"contracts/DomainRegistry.sol\":15560:15631  if (price < 0) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":15596:15620  InvalidPriceFromOracle() */\n      mload(0x40)\n      0x6f4f5ab900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":15560:15631  if (price < 0) {... */\n    tag_271:\n        /* \"contracts/DomainRegistry.sol\":15656:15661  price */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":15641:15662  return uint256(price) */\n      swap2\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":15389:15669  function _getEthToUsdPriceFromOracle()... */\n      swap1\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":11843:12205  function withdrawUsdc() public onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/DomainRegistry.sol\":11894:11917  uint256 contractBalance */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":11959:11980  _getUsdcFundStorage() */\n      tag_275\n        /* \"contracts/DomainRegistry.sol\":11959:11978  _getUsdcFundStorage */\n      tag_121\n        /* \"contracts/DomainRegistry.sol\":11959:11980  _getUsdcFundStorage() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/DomainRegistry.sol\":11959:11994  _getUsdcFundStorage().frozenBalance */\n      0x00\n      add\n      sload\n        /* \"contracts/DomainRegistry.sol\":11920:11944  getUsdcContractBalance() */\n      tag_276\n        /* \"contracts/DomainRegistry.sol\":11920:11942  getUsdcContractBalance */\n      tag_277\n        /* \"contracts/DomainRegistry.sol\":11920:11944  getUsdcContractBalance() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/DomainRegistry.sol\":11920:11994  getUsdcContractBalance() -... */\n      tag_278\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_278:\n        /* \"contracts/DomainRegistry.sol\":11894:11994  uint256 contractBalance = getUsdcContractBalance() -... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":12028:12029  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":12009:12024  contractBalance */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":12009:12029  contractBalance == 0 */\n      sub\n        /* \"contracts/DomainRegistry.sol\":12005:12089  if (contractBalance == 0) {... */\n      tag_279\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":12070:12077  owner() */\n      tag_280\n        /* \"contracts/DomainRegistry.sol\":12070:12075  owner */\n      tag_59\n        /* \"contracts/DomainRegistry.sol\":12070:12077  owner() */\n      jump\t// in\n    tag_280:\n        /* \"contracts/DomainRegistry.sol\":12052:12078  NothingToWithdraw(owner()) */\n      mload(0x40)\n      0xdc69dc1600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":12005:12089  if (contractBalance == 0) {... */\n    tag_279:\n        /* \"contracts/DomainRegistry.sol\":12099:12108  usdcToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":12099:12117  usdcToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/DomainRegistry.sol\":12118:12128  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":12130:12145  contractBalance */\n      dup4\n        /* \"contracts/DomainRegistry.sol\":12099:12146  usdcToken.transfer(msg.sender, contractBalance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_282:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_285\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_285:\n      pop\n        /* \"contracts/DomainRegistry.sol\":12162:12198  Withdrawal(owner(), contractBalance) */\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n        /* \"contracts/DomainRegistry.sol\":12173:12180  owner() */\n      tag_286\n        /* \"contracts/DomainRegistry.sol\":12173:12178  owner */\n      tag_59\n        /* \"contracts/DomainRegistry.sol\":12173:12180  owner() */\n      jump\t// in\n    tag_286:\n        /* \"contracts/DomainRegistry.sol\":12182:12197  contractBalance */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":12162:12198  Withdrawal(owner(), contractBalance) */\n      mload(0x40)\n      tag_287\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DomainRegistry.sol\":11884:12205  {... */\n      pop\n        /* \"contracts/DomainRegistry.sol\":11843:12205  function withdrawUsdc() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":14826:15012  function _getDomainStorage()... */\n    tag_96:\n        /* \"contracts/DomainRegistry.sol\":14901:14924  DomainStorage storage $ */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":14973:14996  DOMAIN_STORAGE_LOCATION */\n      0x34d79759018dd62b1c8d40a6535099f131828aa4665b939adf68c4556b516400\n        /* \"contracts/DomainRegistry.sol\":14963:14996  $.slot := DOMAIN_STORAGE_LOCATION */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":14826:15012  function _getDomainStorage()... */\n      swap1\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":15745:15874  function getUsdcAllowance() private view returns (uint256) {... */\n    tag_107:\n        /* \"contracts/DomainRegistry.sol\":15795:15802  uint256 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":15821:15830  usdcToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":15821:15840  usdcToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/DomainRegistry.sol\":15841:15851  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":15861:15865  this */\n      address\n        /* \"contracts/DomainRegistry.sol\":15821:15867  usdcToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap3\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"contracts/DomainRegistry.sol\":15814:15867  return usdcToken.allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":15745:15874  function getUsdcAllowance() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":16265:16840  function createAndCheckFullDomain(... */\n    tag_113:\n        /* \"contracts/DomainRegistry.sol\":16402:16415  string memory */\n      0x60\n        /* \"contracts/DomainRegistry.sol\":16500:16501  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":16444:16502  _getDomainStorage().domainList[parentDomain] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":16444:16463  _getDomainStorage() */\n      tag_297\n        /* \"contracts/DomainRegistry.sol\":16444:16461  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":16444:16463  _getDomainStorage() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/DomainRegistry.sol\":16444:16474  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":16475:16487  parentDomain */\n      dup7\n      dup7\n        /* \"contracts/DomainRegistry.sol\":16444:16488  _getDomainStorage().domainList[parentDomain] */\n      mload(0x40)\n      tag_298\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_298:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":16444:16502  _getDomainStorage().domainList[parentDomain] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/DomainRegistry.sol\":16427:16579  if (... */\n      tag_299\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":16555:16567  parentDomain */\n      dup5\n      dup5\n        /* \"contracts/DomainRegistry.sol\":16534:16568  ParentDomainNotFound(parentDomain) */\n      mload(0x40)\n      0x30a58c0700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":16427:16579  if (... */\n    tag_299:\n        /* \"contracts/DomainRegistry.sol\":16589:16609  string memory domain */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":16612:16689  createFullDomain(... */\n      tag_301\n        /* \"contracts/DomainRegistry.sol\":16642:16653  childDomain */\n      dup5\n      dup5\n        /* \"contracts/DomainRegistry.sol\":16667:16679  parentDomain */\n      dup9\n      dup9\n        /* \"contracts/DomainRegistry.sol\":16612:16628  createFullDomain */\n      tag_302\n        /* \"contracts/DomainRegistry.sol\":16612:16689  createFullDomain(... */\n      jump\t// in\n    tag_301:\n        /* \"contracts/DomainRegistry.sol\":16589:16689  string memory domain = createFullDomain(... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":16754:16755  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":16704:16756  _getDomainStorage().domainList[domain] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":16704:16723  _getDomainStorage() */\n      tag_303\n        /* \"contracts/DomainRegistry.sol\":16704:16721  _getDomainStorage */\n      tag_96\n        /* \"contracts/DomainRegistry.sol\":16704:16723  _getDomainStorage() */\n      jump\t// in\n    tag_303:\n        /* \"contracts/DomainRegistry.sol\":16704:16734  _getDomainStorage().domainList */\n      0x01\n      add\n        /* \"contracts/DomainRegistry.sol\":16735:16741  domain */\n      dup3\n        /* \"contracts/DomainRegistry.sol\":16704:16742  _getDomainStorage().domainList[domain] */\n      mload(0x40)\n      tag_304\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_304:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":16704:16756  _getDomainStorage().domainList[domain] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DomainRegistry.sol\":16700:16810  if (_getDomainStorage().domainList[domain] != address(0)) {... */\n      tag_305\n      jumpi\n        /* \"contracts/DomainRegistry.sol\":16779:16799  DomainAlreadyTaken() */\n      mload(0x40)\n      0xc5e8402d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DomainRegistry.sol\":16700:16810  if (_getDomainStorage().domainList[domain] != address(0)) {... */\n    tag_305:\n        /* \"contracts/DomainRegistry.sol\":16827:16833  domain */\n      dup1\n        /* \"contracts/DomainRegistry.sol\":16820:16833  return domain */\n      swap2\n      pop\n      pop\n        /* \"contracts/DomainRegistry.sol\":16265:16840  function createAndCheckFullDomain(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":16925:17097  function transferUsdc(uint256 allowance) private {... */\n    tag_116:\n        /* \"contracts/DomainRegistry.sol\":16984:16993  usdcToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":16984:17006  usdcToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/DomainRegistry.sol\":17020:17030  msg.sender */\n      caller\n        /* \"contracts/DomainRegistry.sol\":17052:17056  this */\n      address\n        /* \"contracts/DomainRegistry.sol\":17071:17080  allowance */\n      dup5\n        /* \"contracts/DomainRegistry.sol\":16984:17090  usdcToken.transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_310\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_310:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_311\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_311:\n      pop\n        /* \"contracts/DomainRegistry.sol\":16925:17097  function transferUsdc(uint256 allowance) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":16012:16205  function _getUsdcFundStorage()... */\n    tag_121:\n        /* \"contracts/DomainRegistry.sol\":16089:16114  UsdcFundStorage storage $ */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":16163:16189  USDC_FUND_STORAGE_LOCATION */\n      0x64d6ff49462c7266e92c8aa47370a483b3bb1c9ff7216e1d88a62c1eb24ffb00\n        /* \"contracts/DomainRegistry.sol\":16153:16189  $.slot := USDC_FUND_STORAGE_LOCATION */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":16012:16205  function _getUsdcFundStorage()... */\n      swap1\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":15145:15325  function _getFundStorage()... */\n    tag_150:\n        /* \"contracts/DomainRegistry.sol\":15218:15239  FundStorage storage $ */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":15288:15309  FUND_STORAGE_LOCATION */\n      0x249f20ee916056548cfe0204d9ea4281f252680318bb5252f87aa5a31ec81e00\n        /* \"contracts/DomainRegistry.sol\":15278:15309  $.slot := FUND_STORAGE_LOCATION */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":15145:15325  function _getFundStorage()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":17163:17285  function getUsdcContractBalance() private view returns(uint256) {... */\n    tag_277:\n        /* \"contracts/DomainRegistry.sol\":17218:17225  uint256 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":17244:17253  usdcToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DomainRegistry.sol\":17244:17263  usdcToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/DomainRegistry.sol\":17272:17276  this */\n      address\n        /* \"contracts/DomainRegistry.sol\":17244:17278  usdcToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_332:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_334\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_334:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_335\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_335:\n        /* \"contracts/DomainRegistry.sol\":17237:17278  return usdcToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":17163:17285  function getUsdcContractBalance() private view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":14362:14691  function createFullDomain(... */\n    tag_302:\n        /* \"contracts/DomainRegistry.sol\":14491:14511  string memory domain */\n      0x60\n        /* \"contracts/DomainRegistry.sol\":14586:14597  childDomain */\n      dup5\n      dup5\n        /* \"contracts/DomainRegistry.sol\":14615:14630  domainSeparator */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/DomainRegistry.sol\":14648:14660  parentDomain */\n      dup6\n      dup6\n        /* \"contracts/DomainRegistry.sol\":14552:14674  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_337\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DomainRegistry.sol\":14523:14684  domain = string(... */\n      swap1\n      pop\n        /* \"contracts/DomainRegistry.sol\":14362:14691  function createFullDomain(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_342\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_353:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_354:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_355:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_356:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_357:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":717:1270   */\n    tag_358:\n        /* \"#utility.yul\":775:783   */\n      0x00\n        /* \"#utility.yul\":785:791   */\n      dup1\n        /* \"#utility.yul\":835:838   */\n      dup4\n        /* \"#utility.yul\":828:832   */\n      0x1f\n        /* \"#utility.yul\":820:826   */\n      dup5\n        /* \"#utility.yul\":816:833   */\n      add\n        /* \"#utility.yul\":812:839   */\n      slt\n        /* \"#utility.yul\":802:924   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":843:922   */\n      tag_410\n      tag_355\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":802:924   */\n    tag_409:\n        /* \"#utility.yul\":956:962   */\n      dup3\n        /* \"#utility.yul\":943:963   */\n      calldataload\n        /* \"#utility.yul\":933:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:1004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":978:984   */\n      dup2\n        /* \"#utility.yul\":975:1005   */\n      gt\n        /* \"#utility.yul\":972:1089   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":1008:1087   */\n      tag_412\n      tag_356\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":972:1089   */\n    tag_411:\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup4\n        /* \"#utility.yul\":1110:1127   */\n      add\n        /* \"#utility.yul\":1098:1127   */\n      swap2\n      pop\n        /* \"#utility.yul\":1176:1179   */\n      dup4\n        /* \"#utility.yul\":1168:1172   */\n      0x01\n        /* \"#utility.yul\":1160:1166   */\n      dup3\n        /* \"#utility.yul\":1156:1173   */\n      mul\n        /* \"#utility.yul\":1146:1154   */\n      dup4\n        /* \"#utility.yul\":1142:1174   */\n      add\n        /* \"#utility.yul\":1139:1180   */\n      gt\n        /* \"#utility.yul\":1136:1264   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":1183:1262   */\n      tag_414\n      tag_357\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1136:1264   */\n    tag_413:\n        /* \"#utility.yul\":717:1270   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1805   */\n    tag_24:\n        /* \"#utility.yul\":1347:1353   */\n      0x00\n        /* \"#utility.yul\":1355:1361   */\n      dup1\n        /* \"#utility.yul\":1404:1406   */\n      0x20\n        /* \"#utility.yul\":1392:1401   */\n      dup4\n        /* \"#utility.yul\":1383:1390   */\n      dup6\n        /* \"#utility.yul\":1379:1402   */\n      sub\n        /* \"#utility.yul\":1375:1407   */\n      slt\n        /* \"#utility.yul\":1372:1491   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":1410:1489   */\n      tag_417\n      tag_353\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1372:1491   */\n    tag_416:\n        /* \"#utility.yul\":1558:1559   */\n      0x00\n        /* \"#utility.yul\":1547:1556   */\n      dup4\n        /* \"#utility.yul\":1543:1560   */\n      add\n        /* \"#utility.yul\":1530:1561   */\n      calldataload\n        /* \"#utility.yul\":1588:1606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1580:1586   */\n      dup2\n        /* \"#utility.yul\":1577:1607   */\n      gt\n        /* \"#utility.yul\":1574:1691   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":1610:1689   */\n      tag_419\n      tag_354\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1574:1691   */\n    tag_418:\n        /* \"#utility.yul\":1723:1788   */\n      tag_420\n        /* \"#utility.yul\":1780:1787   */\n      dup6\n        /* \"#utility.yul\":1771:1777   */\n      dup3\n        /* \"#utility.yul\":1760:1769   */\n      dup7\n        /* \"#utility.yul\":1756:1778   */\n      add\n        /* \"#utility.yul\":1723:1788   */\n      tag_358\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":1705:1788   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1501:1798   */\n      pop\n        /* \"#utility.yul\":1276:1805   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:2685   */\n    tag_28:\n        /* \"#utility.yul\":1903:1909   */\n      0x00\n        /* \"#utility.yul\":1911:1917   */\n      dup1\n        /* \"#utility.yul\":1919:1925   */\n      0x00\n        /* \"#utility.yul\":1927:1933   */\n      dup1\n        /* \"#utility.yul\":1976:1978   */\n      0x40\n        /* \"#utility.yul\":1964:1973   */\n      dup6\n        /* \"#utility.yul\":1955:1962   */\n      dup8\n        /* \"#utility.yul\":1951:1974   */\n      sub\n        /* \"#utility.yul\":1947:1979   */\n      slt\n        /* \"#utility.yul\":1944:2063   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":1982:2061   */\n      tag_423\n      tag_353\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1944:2063   */\n    tag_422:\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2119:2128   */\n      dup6\n        /* \"#utility.yul\":2115:2132   */\n      add\n        /* \"#utility.yul\":2102:2133   */\n      calldataload\n        /* \"#utility.yul\":2160:2178   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2152:2158   */\n      dup2\n        /* \"#utility.yul\":2149:2179   */\n      gt\n        /* \"#utility.yul\":2146:2263   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2182:2261   */\n      tag_425\n      tag_354\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2146:2263   */\n    tag_424:\n        /* \"#utility.yul\":2295:2360   */\n      tag_426\n        /* \"#utility.yul\":2352:2359   */\n      dup8\n        /* \"#utility.yul\":2343:2349   */\n      dup3\n        /* \"#utility.yul\":2332:2341   */\n      dup9\n        /* \"#utility.yul\":2328:2350   */\n      add\n        /* \"#utility.yul\":2295:2360   */\n      tag_358\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2277:2360   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":2073:2370   */\n      pop\n        /* \"#utility.yul\":2437:2439   */\n      0x20\n        /* \"#utility.yul\":2426:2435   */\n      dup6\n        /* \"#utility.yul\":2422:2440   */\n      add\n        /* \"#utility.yul\":2409:2441   */\n      calldataload\n        /* \"#utility.yul\":2468:2486   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2460:2466   */\n      dup2\n        /* \"#utility.yul\":2457:2487   */\n      gt\n        /* \"#utility.yul\":2454:2571   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":2490:2569   */\n      tag_428\n      tag_354\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2454:2571   */\n    tag_427:\n        /* \"#utility.yul\":2603:2668   */\n      tag_429\n        /* \"#utility.yul\":2660:2667   */\n      dup8\n        /* \"#utility.yul\":2651:2657   */\n      dup3\n        /* \"#utility.yul\":2640:2649   */\n      dup9\n        /* \"#utility.yul\":2636:2658   */\n      add\n        /* \"#utility.yul\":2603:2668   */\n      tag_358\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":2585:2668   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2380:2678   */\n      pop\n        /* \"#utility.yul\":1811:2685   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2691:2817   */\n    tag_359:\n        /* \"#utility.yul\":2728:2735   */\n      0x00\n        /* \"#utility.yul\":2768:2810   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2761:2766   */\n      dup3\n        /* \"#utility.yul\":2757:2811   */\n      and\n        /* \"#utility.yul\":2746:2811   */\n      swap1\n      pop\n        /* \"#utility.yul\":2691:2817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:2919   */\n    tag_360:\n        /* \"#utility.yul\":2860:2867   */\n      0x00\n        /* \"#utility.yul\":2889:2913   */\n      tag_432\n        /* \"#utility.yul\":2907:2912   */\n      dup3\n        /* \"#utility.yul\":2889:2913   */\n      tag_359\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2878:2913   */\n      swap1\n      pop\n        /* \"#utility.yul\":2823:2919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2925:3043   */\n    tag_361:\n        /* \"#utility.yul\":3012:3036   */\n      tag_434\n        /* \"#utility.yul\":3030:3035   */\n      dup2\n        /* \"#utility.yul\":3012:3036   */\n      tag_360\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3007:3010   */\n      dup3\n        /* \"#utility.yul\":3000:3037   */\n      mstore\n        /* \"#utility.yul\":2925:3043   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3049:3271   */\n    tag_35:\n        /* \"#utility.yul\":3142:3146   */\n      0x00\n        /* \"#utility.yul\":3180:3182   */\n      0x20\n        /* \"#utility.yul\":3169:3178   */\n      dup3\n        /* \"#utility.yul\":3165:3183   */\n      add\n        /* \"#utility.yul\":3157:3183   */\n      swap1\n      pop\n        /* \"#utility.yul\":3193:3264   */\n      tag_436\n        /* \"#utility.yul\":3261:3262   */\n      0x00\n        /* \"#utility.yul\":3250:3259   */\n      dup4\n        /* \"#utility.yul\":3246:3263   */\n      add\n        /* \"#utility.yul\":3237:3243   */\n      dup5\n        /* \"#utility.yul\":3193:3264   */\n      tag_361\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3049:3271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3354   */\n    tag_362:\n        /* \"#utility.yul\":3314:3321   */\n      0x00\n        /* \"#utility.yul\":3343:3348   */\n      dup2\n        /* \"#utility.yul\":3332:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3277:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3478   */\n    tag_363:\n        /* \"#utility.yul\":3447:3471   */\n      tag_439\n        /* \"#utility.yul\":3465:3470   */\n      dup2\n        /* \"#utility.yul\":3447:3471   */\n      tag_362\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3442:3445   */\n      dup3\n        /* \"#utility.yul\":3435:3472   */\n      mstore\n        /* \"#utility.yul\":3360:3478   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3706   */\n    tag_40:\n        /* \"#utility.yul\":3577:3581   */\n      0x00\n        /* \"#utility.yul\":3615:3617   */\n      0x20\n        /* \"#utility.yul\":3604:3613   */\n      dup3\n        /* \"#utility.yul\":3600:3618   */\n      add\n        /* \"#utility.yul\":3592:3618   */\n      swap1\n      pop\n        /* \"#utility.yul\":3628:3699   */\n      tag_441\n        /* \"#utility.yul\":3696:3697   */\n      0x00\n        /* \"#utility.yul\":3685:3694   */\n      dup4\n        /* \"#utility.yul\":3681:3698   */\n      add\n        /* \"#utility.yul\":3672:3678   */\n      dup5\n        /* \"#utility.yul\":3628:3699   */\n      tag_363\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3484:3706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3712:3834   */\n    tag_364:\n        /* \"#utility.yul\":3785:3809   */\n      tag_443\n        /* \"#utility.yul\":3803:3808   */\n      dup2\n        /* \"#utility.yul\":3785:3809   */\n      tag_362\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":3778:3783   */\n      dup2\n        /* \"#utility.yul\":3775:3810   */\n      eq\n        /* \"#utility.yul\":3765:3828   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3824:3825   */\n      0x00\n        /* \"#utility.yul\":3821:3822   */\n      dup1\n        /* \"#utility.yul\":3814:3826   */\n      revert\n        /* \"#utility.yul\":3765:3828   */\n    tag_444:\n        /* \"#utility.yul\":3712:3834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3840:3979   */\n    tag_365:\n        /* \"#utility.yul\":3886:3891   */\n      0x00\n        /* \"#utility.yul\":3924:3930   */\n      dup2\n        /* \"#utility.yul\":3911:3931   */\n      calldataload\n        /* \"#utility.yul\":3902:3931   */\n      swap1\n      pop\n        /* \"#utility.yul\":3940:3973   */\n      tag_446\n        /* \"#utility.yul\":3967:3972   */\n      dup2\n        /* \"#utility.yul\":3940:3973   */\n      tag_364\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3840:3979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3985:4314   */\n    tag_67:\n        /* \"#utility.yul\":4044:4050   */\n      0x00\n        /* \"#utility.yul\":4093:4095   */\n      0x20\n        /* \"#utility.yul\":4081:4090   */\n      dup3\n        /* \"#utility.yul\":4072:4079   */\n      dup5\n        /* \"#utility.yul\":4068:4091   */\n      sub\n        /* \"#utility.yul\":4064:4096   */\n      slt\n        /* \"#utility.yul\":4061:4180   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":4099:4178   */\n      tag_449\n      tag_353\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4061:4180   */\n    tag_448:\n        /* \"#utility.yul\":4219:4220   */\n      0x00\n        /* \"#utility.yul\":4244:4297   */\n      tag_450\n        /* \"#utility.yul\":4289:4296   */\n      dup5\n        /* \"#utility.yul\":4280:4286   */\n      dup3\n        /* \"#utility.yul\":4269:4278   */\n      dup6\n        /* \"#utility.yul\":4265:4287   */\n      add\n        /* \"#utility.yul\":4244:4297   */\n      tag_365\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4234:4297   */\n      swap2\n      pop\n        /* \"#utility.yul\":4190:4307   */\n      pop\n        /* \"#utility.yul\":3985:4314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4320:4442   */\n    tag_366:\n        /* \"#utility.yul\":4393:4417   */\n      tag_452\n        /* \"#utility.yul\":4411:4416   */\n      dup2\n        /* \"#utility.yul\":4393:4417   */\n      tag_360\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4386:4391   */\n      dup2\n        /* \"#utility.yul\":4383:4418   */\n      eq\n        /* \"#utility.yul\":4373:4436   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4429:4430   */\n      dup1\n        /* \"#utility.yul\":4422:4434   */\n      revert\n        /* \"#utility.yul\":4373:4436   */\n    tag_453:\n        /* \"#utility.yul\":4320:4442   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:4587   */\n    tag_367:\n        /* \"#utility.yul\":4494:4499   */\n      0x00\n        /* \"#utility.yul\":4532:4538   */\n      dup2\n        /* \"#utility.yul\":4519:4539   */\n      calldataload\n        /* \"#utility.yul\":4510:4539   */\n      swap1\n      pop\n        /* \"#utility.yul\":4548:4581   */\n      tag_455\n        /* \"#utility.yul\":4575:4580   */\n      dup2\n        /* \"#utility.yul\":4548:4581   */\n      tag_366\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4448:4587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4593:5212   */\n    tag_72:\n        /* \"#utility.yul\":4670:4676   */\n      0x00\n        /* \"#utility.yul\":4678:4684   */\n      dup1\n        /* \"#utility.yul\":4686:4692   */\n      0x00\n        /* \"#utility.yul\":4735:4737   */\n      0x60\n        /* \"#utility.yul\":4723:4732   */\n      dup5\n        /* \"#utility.yul\":4714:4721   */\n      dup7\n        /* \"#utility.yul\":4710:4733   */\n      sub\n        /* \"#utility.yul\":4706:4738   */\n      slt\n        /* \"#utility.yul\":4703:4822   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":4741:4820   */\n      tag_458\n      tag_353\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4703:4822   */\n    tag_457:\n        /* \"#utility.yul\":4861:4862   */\n      0x00\n        /* \"#utility.yul\":4886:4939   */\n      tag_459\n        /* \"#utility.yul\":4931:4938   */\n      dup7\n        /* \"#utility.yul\":4922:4928   */\n      dup3\n        /* \"#utility.yul\":4911:4920   */\n      dup8\n        /* \"#utility.yul\":4907:4929   */\n      add\n        /* \"#utility.yul\":4886:4939   */\n      tag_365\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4876:4939   */\n      swap4\n      pop\n        /* \"#utility.yul\":4832:4949   */\n      pop\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":5014:5067   */\n      tag_460\n        /* \"#utility.yul\":5059:5066   */\n      dup7\n        /* \"#utility.yul\":5050:5056   */\n      dup3\n        /* \"#utility.yul\":5039:5048   */\n      dup8\n        /* \"#utility.yul\":5035:5057   */\n      add\n        /* \"#utility.yul\":5014:5067   */\n      tag_367\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5004:5067   */\n      swap3\n      pop\n        /* \"#utility.yul\":4959:5077   */\n      pop\n        /* \"#utility.yul\":5116:5118   */\n      0x40\n        /* \"#utility.yul\":5142:5195   */\n      tag_461\n        /* \"#utility.yul\":5187:5194   */\n      dup7\n        /* \"#utility.yul\":5178:5184   */\n      dup3\n        /* \"#utility.yul\":5167:5176   */\n      dup8\n        /* \"#utility.yul\":5163:5185   */\n      add\n        /* \"#utility.yul\":5142:5195   */\n      tag_367\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5132:5195   */\n      swap2\n      pop\n        /* \"#utility.yul\":5087:5205   */\n      pop\n        /* \"#utility.yul\":4593:5212   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5218:5547   */\n    tag_77:\n        /* \"#utility.yul\":5277:5283   */\n      0x00\n        /* \"#utility.yul\":5326:5328   */\n      0x20\n        /* \"#utility.yul\":5314:5323   */\n      dup3\n        /* \"#utility.yul\":5305:5312   */\n      dup5\n        /* \"#utility.yul\":5301:5324   */\n      sub\n        /* \"#utility.yul\":5297:5329   */\n      slt\n        /* \"#utility.yul\":5294:5413   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":5332:5411   */\n      tag_464\n      tag_353\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":5294:5413   */\n    tag_463:\n        /* \"#utility.yul\":5452:5453   */\n      0x00\n        /* \"#utility.yul\":5477:5530   */\n      tag_465\n        /* \"#utility.yul\":5522:5529   */\n      dup5\n        /* \"#utility.yul\":5513:5519   */\n      dup3\n        /* \"#utility.yul\":5502:5511   */\n      dup6\n        /* \"#utility.yul\":5498:5520   */\n      add\n        /* \"#utility.yul\":5477:5530   */\n      tag_367\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5467:5530   */\n      swap2\n      pop\n        /* \"#utility.yul\":5423:5540   */\n      pop\n        /* \"#utility.yul\":5218:5547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5553:5885   */\n    tag_93:\n        /* \"#utility.yul\":5674:5678   */\n      0x00\n        /* \"#utility.yul\":5712:5714   */\n      0x40\n        /* \"#utility.yul\":5701:5710   */\n      dup3\n        /* \"#utility.yul\":5697:5715   */\n      add\n        /* \"#utility.yul\":5689:5715   */\n      swap1\n      pop\n        /* \"#utility.yul\":5725:5796   */\n      tag_467\n        /* \"#utility.yul\":5793:5794   */\n      0x00\n        /* \"#utility.yul\":5782:5791   */\n      dup4\n        /* \"#utility.yul\":5778:5795   */\n      add\n        /* \"#utility.yul\":5769:5775   */\n      dup6\n        /* \"#utility.yul\":5725:5796   */\n      tag_363\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5806:5878   */\n      tag_468\n        /* \"#utility.yul\":5874:5876   */\n      0x20\n        /* \"#utility.yul\":5863:5872   */\n      dup4\n        /* \"#utility.yul\":5859:5877   */\n      add\n        /* \"#utility.yul\":5850:5856   */\n      dup5\n        /* \"#utility.yul\":5806:5878   */\n      tag_363\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5553:5885   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5891:6039   */\n    tag_368:\n        /* \"#utility.yul\":5993:6004   */\n      0x00\n        /* \"#utility.yul\":6030:6033   */\n      dup2\n        /* \"#utility.yul\":6015:6033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5891:6039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6045:6191   */\n    tag_369:\n        /* \"#utility.yul\":6142:6148   */\n      dup3\n        /* \"#utility.yul\":6137:6140   */\n      dup2\n        /* \"#utility.yul\":6132:6135   */\n      dup4\n        /* \"#utility.yul\":6119:6149   */\n      calldatacopy\n        /* \"#utility.yul\":6183:6184   */\n      0x00\n        /* \"#utility.yul\":6174:6180   */\n      dup4\n        /* \"#utility.yul\":6169:6172   */\n      dup4\n        /* \"#utility.yul\":6165:6181   */\n      add\n        /* \"#utility.yul\":6158:6185   */\n      mstore\n        /* \"#utility.yul\":6045:6191   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6551   */\n    tag_370:\n        /* \"#utility.yul\":6337:6340   */\n      0x00\n        /* \"#utility.yul\":6358:6447   */\n      tag_472\n        /* \"#utility.yul\":6440:6446   */\n      dup4\n        /* \"#utility.yul\":6435:6438   */\n      dup6\n        /* \"#utility.yul\":6358:6447   */\n      tag_368\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6351:6447   */\n      swap4\n      pop\n        /* \"#utility.yul\":6457:6513   */\n      tag_473\n        /* \"#utility.yul\":6506:6512   */\n      dup4\n        /* \"#utility.yul\":6501:6504   */\n      dup6\n        /* \"#utility.yul\":6494:6499   */\n      dup5\n        /* \"#utility.yul\":6457:6513   */\n      tag_369\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6538:6544   */\n      dup3\n        /* \"#utility.yul\":6533:6536   */\n      dup5\n        /* \"#utility.yul\":6529:6545   */\n      add\n        /* \"#utility.yul\":6522:6545   */\n      swap1\n      pop\n        /* \"#utility.yul\":6221:6551   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6557:6852   */\n    tag_98:\n        /* \"#utility.yul\":6699:6702   */\n      0x00\n        /* \"#utility.yul\":6721:6826   */\n      tag_475\n        /* \"#utility.yul\":6822:6825   */\n      dup3\n        /* \"#utility.yul\":6813:6819   */\n      dup5\n        /* \"#utility.yul\":6805:6811   */\n      dup7\n        /* \"#utility.yul\":6721:6826   */\n      tag_370\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6714:6826   */\n      swap2\n      pop\n        /* \"#utility.yul\":6843:6846   */\n      dup2\n        /* \"#utility.yul\":6836:6846   */\n      swap1\n      pop\n        /* \"#utility.yul\":6557:6852   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6858:7027   */\n    tag_371:\n        /* \"#utility.yul\":6942:6953   */\n      0x00\n        /* \"#utility.yul\":6976:6982   */\n      dup3\n        /* \"#utility.yul\":6971:6974   */\n      dup3\n        /* \"#utility.yul\":6964:6983   */\n      mstore\n        /* \"#utility.yul\":7016:7020   */\n      0x20\n        /* \"#utility.yul\":7011:7014   */\n      dup3\n        /* \"#utility.yul\":7007:7021   */\n      add\n        /* \"#utility.yul\":6992:7021   */\n      swap1\n      pop\n        /* \"#utility.yul\":6858:7027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7033:7135   */\n    tag_372:\n        /* \"#utility.yul\":7074:7080   */\n      0x00\n        /* \"#utility.yul\":7125:7127   */\n      0x1f\n        /* \"#utility.yul\":7121:7128   */\n      not\n        /* \"#utility.yul\":7116:7118   */\n      0x1f\n        /* \"#utility.yul\":7109:7114   */\n      dup4\n        /* \"#utility.yul\":7105:7119   */\n      add\n        /* \"#utility.yul\":7101:7129   */\n      and\n        /* \"#utility.yul\":7091:7129   */\n      swap1\n      pop\n        /* \"#utility.yul\":7033:7135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7482   */\n    tag_373:\n        /* \"#utility.yul\":7263:7266   */\n      0x00\n        /* \"#utility.yul\":7284:7355   */\n      tag_479\n        /* \"#utility.yul\":7348:7354   */\n      dup4\n        /* \"#utility.yul\":7343:7346   */\n      dup6\n        /* \"#utility.yul\":7284:7355   */\n      tag_371\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7277:7355   */\n      swap4\n      pop\n        /* \"#utility.yul\":7365:7421   */\n      tag_480\n        /* \"#utility.yul\":7414:7420   */\n      dup4\n        /* \"#utility.yul\":7409:7412   */\n      dup6\n        /* \"#utility.yul\":7402:7407   */\n      dup5\n        /* \"#utility.yul\":7365:7421   */\n      tag_369\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7446:7475   */\n      tag_481\n        /* \"#utility.yul\":7468:7474   */\n      dup4\n        /* \"#utility.yul\":7446:7475   */\n      tag_372\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7441:7444   */\n      dup5\n        /* \"#utility.yul\":7437:7476   */\n      add\n        /* \"#utility.yul\":7430:7476   */\n      swap1\n      pop\n        /* \"#utility.yul\":7165:7482   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7488:7821   */\n    tag_104:\n        /* \"#utility.yul\":7611:7615   */\n      0x00\n        /* \"#utility.yul\":7649:7651   */\n      0x20\n        /* \"#utility.yul\":7638:7647   */\n      dup3\n        /* \"#utility.yul\":7634:7652   */\n      add\n        /* \"#utility.yul\":7626:7652   */\n      swap1\n      pop\n        /* \"#utility.yul\":7698:7707   */\n      dup2\n        /* \"#utility.yul\":7692:7696   */\n      dup2\n        /* \"#utility.yul\":7688:7708   */\n      sub\n        /* \"#utility.yul\":7684:7685   */\n      0x00\n        /* \"#utility.yul\":7673:7682   */\n      dup4\n        /* \"#utility.yul\":7669:7686   */\n      add\n        /* \"#utility.yul\":7662:7709   */\n      mstore\n        /* \"#utility.yul\":7726:7814   */\n      tag_483\n        /* \"#utility.yul\":7809:7813   */\n      dup2\n        /* \"#utility.yul\":7800:7806   */\n      dup5\n        /* \"#utility.yul\":7792:7798   */\n      dup7\n        /* \"#utility.yul\":7726:7814   */\n      tag_373\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7718:7814   */\n      swap1\n      pop\n        /* \"#utility.yul\":7488:7821   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7827:7926   */\n    tag_374:\n        /* \"#utility.yul\":7879:7885   */\n      0x00\n        /* \"#utility.yul\":7913:7918   */\n      dup2\n        /* \"#utility.yul\":7907:7919   */\n      mload\n        /* \"#utility.yul\":7897:7919   */\n      swap1\n      pop\n        /* \"#utility.yul\":7827:7926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7932:8178   */\n    tag_375:\n        /* \"#utility.yul\":8013:8014   */\n      0x00\n        /* \"#utility.yul\":8023:8136   */\n    tag_486:\n        /* \"#utility.yul\":8037:8043   */\n      dup4\n        /* \"#utility.yul\":8034:8035   */\n      dup2\n        /* \"#utility.yul\":8031:8044   */\n      lt\n        /* \"#utility.yul\":8023:8136   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":8122:8123   */\n      dup1\n        /* \"#utility.yul\":8117:8120   */\n      dup3\n        /* \"#utility.yul\":8113:8124   */\n      add\n        /* \"#utility.yul\":8107:8125   */\n      mload\n        /* \"#utility.yul\":8103:8104   */\n      dup2\n        /* \"#utility.yul\":8098:8101   */\n      dup5\n        /* \"#utility.yul\":8094:8105   */\n      add\n        /* \"#utility.yul\":8087:8126   */\n      mstore\n        /* \"#utility.yul\":8059:8061   */\n      0x20\n        /* \"#utility.yul\":8056:8057   */\n      dup2\n        /* \"#utility.yul\":8052:8062   */\n      add\n        /* \"#utility.yul\":8047:8062   */\n      swap1\n      pop\n        /* \"#utility.yul\":8023:8136   */\n      jump(tag_486)\n    tag_488:\n        /* \"#utility.yul\":8170:8171   */\n      0x00\n        /* \"#utility.yul\":8161:8167   */\n      dup5\n        /* \"#utility.yul\":8156:8159   */\n      dup5\n        /* \"#utility.yul\":8152:8168   */\n      add\n        /* \"#utility.yul\":8145:8172   */\n      mstore\n        /* \"#utility.yul\":7994:8178   */\n      pop\n        /* \"#utility.yul\":7932:8178   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8184:8574   */\n    tag_376:\n        /* \"#utility.yul\":8290:8293   */\n      0x00\n        /* \"#utility.yul\":8318:8357   */\n      tag_490\n        /* \"#utility.yul\":8351:8356   */\n      dup3\n        /* \"#utility.yul\":8318:8357   */\n      tag_374\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8373:8462   */\n      tag_491\n        /* \"#utility.yul\":8455:8461   */\n      dup2\n        /* \"#utility.yul\":8450:8453   */\n      dup6\n        /* \"#utility.yul\":8373:8462   */\n      tag_368\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8366:8462   */\n      swap4\n      pop\n        /* \"#utility.yul\":8471:8536   */\n      tag_492\n        /* \"#utility.yul\":8529:8535   */\n      dup2\n        /* \"#utility.yul\":8524:8527   */\n      dup6\n        /* \"#utility.yul\":8517:8521   */\n      0x20\n        /* \"#utility.yul\":8510:8515   */\n      dup7\n        /* \"#utility.yul\":8506:8522   */\n      add\n        /* \"#utility.yul\":8471:8536   */\n      tag_375\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8561:8567   */\n      dup1\n        /* \"#utility.yul\":8556:8559   */\n      dup5\n        /* \"#utility.yul\":8552:8568   */\n      add\n        /* \"#utility.yul\":8545:8568   */\n      swap2\n      pop\n        /* \"#utility.yul\":8294:8574   */\n      pop\n        /* \"#utility.yul\":8184:8574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8580:8855   */\n    tag_119:\n        /* \"#utility.yul\":8712:8715   */\n      0x00\n        /* \"#utility.yul\":8734:8829   */\n      tag_494\n        /* \"#utility.yul\":8825:8828   */\n      dup3\n        /* \"#utility.yul\":8816:8822   */\n      dup5\n        /* \"#utility.yul\":8734:8829   */\n      tag_376\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8727:8829   */\n      swap2\n      pop\n        /* \"#utility.yul\":8846:8849   */\n      dup2\n        /* \"#utility.yul\":8839:8849   */\n      swap1\n      pop\n        /* \"#utility.yul\":8580:8855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8861:9041   */\n    tag_377:\n        /* \"#utility.yul\":8909:8986   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8906:8907   */\n      0x00\n        /* \"#utility.yul\":8899:8987   */\n      mstore\n        /* \"#utility.yul\":9006:9010   */\n      0x11\n        /* \"#utility.yul\":9003:9004   */\n      0x04\n        /* \"#utility.yul\":8996:9011   */\n      mstore\n        /* \"#utility.yul\":9030:9034   */\n      0x24\n        /* \"#utility.yul\":9027:9028   */\n      0x00\n        /* \"#utility.yul\":9020:9035   */\n      revert\n        /* \"#utility.yul\":9047:9238   */\n    tag_123:\n        /* \"#utility.yul\":9087:9090   */\n      0x00\n        /* \"#utility.yul\":9106:9126   */\n      tag_497\n        /* \"#utility.yul\":9124:9125   */\n      dup3\n        /* \"#utility.yul\":9106:9126   */\n      tag_362\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9101:9126   */\n      swap2\n      pop\n        /* \"#utility.yul\":9140:9160   */\n      tag_498\n        /* \"#utility.yul\":9158:9159   */\n      dup4\n        /* \"#utility.yul\":9140:9160   */\n      tag_362\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9135:9160   */\n      swap3\n      pop\n        /* \"#utility.yul\":9183:9184   */\n      dup3\n        /* \"#utility.yul\":9180:9181   */\n      dup3\n        /* \"#utility.yul\":9176:9185   */\n      add\n        /* \"#utility.yul\":9169:9185   */\n      swap1\n      pop\n        /* \"#utility.yul\":9204:9207   */\n      dup1\n        /* \"#utility.yul\":9201:9202   */\n      dup3\n        /* \"#utility.yul\":9198:9208   */\n      gt\n        /* \"#utility.yul\":9195:9231   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":9211:9229   */\n      tag_500\n      tag_377\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9195:9231   */\n    tag_499:\n        /* \"#utility.yul\":9047:9238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9244:9621   */\n    tag_378:\n        /* \"#utility.yul\":9332:9335   */\n      0x00\n        /* \"#utility.yul\":9360:9399   */\n      tag_502\n        /* \"#utility.yul\":9393:9398   */\n      dup3\n        /* \"#utility.yul\":9360:9399   */\n      tag_374\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9415:9486   */\n      tag_503\n        /* \"#utility.yul\":9479:9485   */\n      dup2\n        /* \"#utility.yul\":9474:9477   */\n      dup6\n        /* \"#utility.yul\":9415:9486   */\n      tag_371\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9408:9486   */\n      swap4\n      pop\n        /* \"#utility.yul\":9495:9560   */\n      tag_504\n        /* \"#utility.yul\":9553:9559   */\n      dup2\n        /* \"#utility.yul\":9548:9551   */\n      dup6\n        /* \"#utility.yul\":9541:9545   */\n      0x20\n        /* \"#utility.yul\":9534:9539   */\n      dup7\n        /* \"#utility.yul\":9530:9546   */\n      add\n        /* \"#utility.yul\":9495:9560   */\n      tag_375\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9585:9614   */\n      tag_505\n        /* \"#utility.yul\":9607:9613   */\n      dup2\n        /* \"#utility.yul\":9585:9614   */\n      tag_372\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9580:9583   */\n      dup5\n        /* \"#utility.yul\":9576:9615   */\n      add\n        /* \"#utility.yul\":9569:9615   */\n      swap2\n      pop\n        /* \"#utility.yul\":9336:9621   */\n      pop\n        /* \"#utility.yul\":9244:9621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9627:9940   */\n    tag_129:\n        /* \"#utility.yul\":9740:9744   */\n      0x00\n        /* \"#utility.yul\":9778:9780   */\n      0x20\n        /* \"#utility.yul\":9767:9776   */\n      dup3\n        /* \"#utility.yul\":9763:9781   */\n      add\n        /* \"#utility.yul\":9755:9781   */\n      swap1\n      pop\n        /* \"#utility.yul\":9827:9836   */\n      dup2\n        /* \"#utility.yul\":9821:9825   */\n      dup2\n        /* \"#utility.yul\":9817:9837   */\n      sub\n        /* \"#utility.yul\":9813:9814   */\n      0x00\n        /* \"#utility.yul\":9802:9811   */\n      dup4\n        /* \"#utility.yul\":9798:9815   */\n      add\n        /* \"#utility.yul\":9791:9838   */\n      mstore\n        /* \"#utility.yul\":9855:9933   */\n      tag_507\n        /* \"#utility.yul\":9928:9932   */\n      dup2\n        /* \"#utility.yul\":9919:9925   */\n      dup5\n        /* \"#utility.yul\":9855:9933   */\n      tag_378\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9847:9933   */\n      swap1\n      pop\n        /* \"#utility.yul\":9627:9940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9946:10356   */\n    tag_137:\n        /* \"#utility.yul\":9986:9993   */\n      0x00\n        /* \"#utility.yul\":10009:10029   */\n      tag_509\n        /* \"#utility.yul\":10027:10028   */\n      dup3\n        /* \"#utility.yul\":10009:10029   */\n      tag_362\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10004:10029   */\n      swap2\n      pop\n        /* \"#utility.yul\":10043:10063   */\n      tag_510\n        /* \"#utility.yul\":10061:10062   */\n      dup4\n        /* \"#utility.yul\":10043:10063   */\n      tag_362\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10038:10063   */\n      swap3\n      pop\n        /* \"#utility.yul\":10098:10099   */\n      dup3\n        /* \"#utility.yul\":10095:10096   */\n      dup3\n        /* \"#utility.yul\":10091:10100   */\n      mul\n        /* \"#utility.yul\":10120:10150   */\n      tag_511\n        /* \"#utility.yul\":10138:10149   */\n      dup2\n        /* \"#utility.yul\":10120:10150   */\n      tag_362\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10109:10150   */\n      swap2\n      pop\n        /* \"#utility.yul\":10299:10300   */\n      dup3\n        /* \"#utility.yul\":10290:10297   */\n      dup3\n        /* \"#utility.yul\":10286:10301   */\n      div\n        /* \"#utility.yul\":10283:10284   */\n      dup5\n        /* \"#utility.yul\":10280:10302   */\n      eq\n        /* \"#utility.yul\":10260:10261   */\n      dup4\n        /* \"#utility.yul\":10253:10262   */\n      iszero\n        /* \"#utility.yul\":10233:10316   */\n      or\n        /* \"#utility.yul\":10210:10349   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":10329:10347   */\n      tag_513\n      tag_377\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10210:10349   */\n    tag_512:\n        /* \"#utility.yul\":9994:10356   */\n      pop\n        /* \"#utility.yul\":9946:10356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10362:10542   */\n    tag_379:\n        /* \"#utility.yul\":10410:10487   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10407:10408   */\n      0x00\n        /* \"#utility.yul\":10400:10488   */\n      mstore\n        /* \"#utility.yul\":10507:10511   */\n      0x12\n        /* \"#utility.yul\":10504:10505   */\n      0x04\n        /* \"#utility.yul\":10497:10512   */\n      mstore\n        /* \"#utility.yul\":10531:10535   */\n      0x24\n        /* \"#utility.yul\":10528:10529   */\n      0x00\n        /* \"#utility.yul\":10521:10536   */\n      revert\n        /* \"#utility.yul\":10548:10733   */\n    tag_140:\n        /* \"#utility.yul\":10588:10589   */\n      0x00\n        /* \"#utility.yul\":10605:10625   */\n      tag_516\n        /* \"#utility.yul\":10623:10624   */\n      dup3\n        /* \"#utility.yul\":10605:10625   */\n      tag_362\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10600:10625   */\n      swap2\n      pop\n        /* \"#utility.yul\":10639:10659   */\n      tag_517\n        /* \"#utility.yul\":10657:10658   */\n      dup4\n        /* \"#utility.yul\":10639:10659   */\n      tag_362\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10634:10659   */\n      swap3\n      pop\n        /* \"#utility.yul\":10678:10679   */\n      dup3\n        /* \"#utility.yul\":10668:10703   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":10683:10701   */\n      tag_519\n      tag_379\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10668:10703   */\n    tag_518:\n        /* \"#utility.yul\":10725:10726   */\n      dup3\n        /* \"#utility.yul\":10722:10723   */\n      dup3\n        /* \"#utility.yul\":10718:10727   */\n      div\n        /* \"#utility.yul\":10713:10727   */\n      swap1\n      pop\n        /* \"#utility.yul\":10548:10733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10739:10886   */\n    tag_380:\n        /* \"#utility.yul\":10840:10851   */\n      0x00\n        /* \"#utility.yul\":10877:10880   */\n      dup2\n        /* \"#utility.yul\":10862:10880   */\n      swap1\n      pop\n        /* \"#utility.yul\":10739:10886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10892:11006   */\n    tag_381:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11012:11410   */\n    tag_382:\n        /* \"#utility.yul\":11171:11174   */\n      0x00\n        /* \"#utility.yul\":11192:11275   */\n      tag_523\n        /* \"#utility.yul\":11273:11274   */\n      0x00\n        /* \"#utility.yul\":11268:11271   */\n      dup4\n        /* \"#utility.yul\":11192:11275   */\n      tag_380\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11185:11275   */\n      swap2\n      pop\n        /* \"#utility.yul\":11284:11377   */\n      tag_524\n        /* \"#utility.yul\":11373:11376   */\n      dup3\n        /* \"#utility.yul\":11284:11377   */\n      tag_381\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11402:11403   */\n      0x00\n        /* \"#utility.yul\":11397:11400   */\n      dup3\n        /* \"#utility.yul\":11393:11404   */\n      add\n        /* \"#utility.yul\":11386:11404   */\n      swap1\n      pop\n        /* \"#utility.yul\":11012:11410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11416:11795   */\n    tag_163:\n        /* \"#utility.yul\":11600:11603   */\n      0x00\n        /* \"#utility.yul\":11622:11769   */\n      tag_526\n        /* \"#utility.yul\":11765:11768   */\n      dup3\n        /* \"#utility.yul\":11622:11769   */\n      tag_382\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11615:11769   */\n      swap2\n      pop\n        /* \"#utility.yul\":11786:11789   */\n      dup2\n        /* \"#utility.yul\":11779:11789   */\n      swap1\n      pop\n        /* \"#utility.yul\":11416:11795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11801:11899   */\n    tag_383:\n        /* \"#utility.yul\":11852:11858   */\n      0x00\n        /* \"#utility.yul\":11886:11891   */\n      dup2\n        /* \"#utility.yul\":11880:11892   */\n      mload\n        /* \"#utility.yul\":11870:11892   */\n      swap1\n      pop\n        /* \"#utility.yul\":11801:11899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11905:12073   */\n    tag_384:\n        /* \"#utility.yul\":11988:11999   */\n      0x00\n        /* \"#utility.yul\":12022:12028   */\n      dup3\n        /* \"#utility.yul\":12017:12020   */\n      dup3\n        /* \"#utility.yul\":12010:12029   */\n      mstore\n        /* \"#utility.yul\":12062:12066   */\n      0x20\n        /* \"#utility.yul\":12057:12060   */\n      dup3\n        /* \"#utility.yul\":12053:12067   */\n      add\n        /* \"#utility.yul\":12038:12067   */\n      swap1\n      pop\n        /* \"#utility.yul\":11905:12073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12079:12452   */\n    tag_385:\n        /* \"#utility.yul\":12165:12168   */\n      0x00\n        /* \"#utility.yul\":12193:12231   */\n      tag_530\n        /* \"#utility.yul\":12225:12230   */\n      dup3\n        /* \"#utility.yul\":12193:12231   */\n      tag_383\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12247:12317   */\n      tag_531\n        /* \"#utility.yul\":12310:12316   */\n      dup2\n        /* \"#utility.yul\":12305:12308   */\n      dup6\n        /* \"#utility.yul\":12247:12317   */\n      tag_384\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12240:12317   */\n      swap4\n      pop\n        /* \"#utility.yul\":12326:12391   */\n      tag_532\n        /* \"#utility.yul\":12384:12390   */\n      dup2\n        /* \"#utility.yul\":12379:12382   */\n      dup6\n        /* \"#utility.yul\":12372:12376   */\n      0x20\n        /* \"#utility.yul\":12365:12370   */\n      dup7\n        /* \"#utility.yul\":12361:12377   */\n      add\n        /* \"#utility.yul\":12326:12391   */\n      tag_375\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":12416:12445   */\n      tag_533\n        /* \"#utility.yul\":12438:12444   */\n      dup2\n        /* \"#utility.yul\":12416:12445   */\n      tag_372\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12411:12414   */\n      dup5\n        /* \"#utility.yul\":12407:12446   */\n      add\n        /* \"#utility.yul\":12400:12446   */\n      swap2\n      pop\n        /* \"#utility.yul\":12169:12452   */\n      pop\n        /* \"#utility.yul\":12079:12452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12458:12877   */\n    tag_169:\n        /* \"#utility.yul\":12597:12601   */\n      0x00\n        /* \"#utility.yul\":12635:12637   */\n      0x40\n        /* \"#utility.yul\":12624:12633   */\n      dup3\n        /* \"#utility.yul\":12620:12638   */\n      add\n        /* \"#utility.yul\":12612:12638   */\n      swap1\n      pop\n        /* \"#utility.yul\":12648:12719   */\n      tag_535\n        /* \"#utility.yul\":12716:12717   */\n      0x00\n        /* \"#utility.yul\":12705:12714   */\n      dup4\n        /* \"#utility.yul\":12701:12718   */\n      add\n        /* \"#utility.yul\":12692:12698   */\n      dup6\n        /* \"#utility.yul\":12648:12719   */\n      tag_361\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12766:12775   */\n      dup2\n        /* \"#utility.yul\":12760:12764   */\n      dup2\n        /* \"#utility.yul\":12756:12776   */\n      sub\n        /* \"#utility.yul\":12751:12753   */\n      0x20\n        /* \"#utility.yul\":12740:12749   */\n      dup4\n        /* \"#utility.yul\":12736:12754   */\n      add\n        /* \"#utility.yul\":12729:12777   */\n      mstore\n        /* \"#utility.yul\":12794:12870   */\n      tag_536\n        /* \"#utility.yul\":12865:12869   */\n      dup2\n        /* \"#utility.yul\":12856:12862   */\n      dup5\n        /* \"#utility.yul\":12794:12870   */\n      tag_385\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12786:12870   */\n      swap1\n      pop\n        /* \"#utility.yul\":12458:12877   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12883:13077   */\n    tag_173:\n        /* \"#utility.yul\":12923:12927   */\n      0x00\n        /* \"#utility.yul\":12943:12963   */\n      tag_538\n        /* \"#utility.yul\":12961:12962   */\n      dup3\n        /* \"#utility.yul\":12943:12963   */\n      tag_362\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12938:12963   */\n      swap2\n      pop\n        /* \"#utility.yul\":12977:12997   */\n      tag_539\n        /* \"#utility.yul\":12995:12996   */\n      dup4\n        /* \"#utility.yul\":12977:12997   */\n      tag_362\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":12972:12997   */\n      swap3\n      pop\n        /* \"#utility.yul\":13021:13022   */\n      dup3\n        /* \"#utility.yul\":13018:13019   */\n      dup3\n        /* \"#utility.yul\":13014:13023   */\n      sub\n        /* \"#utility.yul\":13006:13023   */\n      swap1\n      pop\n        /* \"#utility.yul\":13045:13046   */\n      dup2\n        /* \"#utility.yul\":13039:13043   */\n      dup2\n        /* \"#utility.yul\":13036:13047   */\n      gt\n        /* \"#utility.yul\":13033:13070   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":13050:13068   */\n      tag_541\n      tag_377\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13033:13070   */\n    tag_540:\n        /* \"#utility.yul\":12883:13077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13083:13415   */\n    tag_177:\n        /* \"#utility.yul\":13204:13208   */\n      0x00\n        /* \"#utility.yul\":13242:13244   */\n      0x40\n        /* \"#utility.yul\":13231:13240   */\n      dup3\n        /* \"#utility.yul\":13227:13245   */\n      add\n        /* \"#utility.yul\":13219:13245   */\n      swap1\n      pop\n        /* \"#utility.yul\":13255:13326   */\n      tag_543\n        /* \"#utility.yul\":13323:13324   */\n      0x00\n        /* \"#utility.yul\":13312:13321   */\n      dup4\n        /* \"#utility.yul\":13308:13325   */\n      add\n        /* \"#utility.yul\":13299:13305   */\n      dup6\n        /* \"#utility.yul\":13255:13326   */\n      tag_361\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13336:13408   */\n      tag_544\n        /* \"#utility.yul\":13404:13406   */\n      0x20\n        /* \"#utility.yul\":13393:13402   */\n      dup4\n        /* \"#utility.yul\":13389:13407   */\n      add\n        /* \"#utility.yul\":13380:13386   */\n      dup5\n        /* \"#utility.yul\":13336:13408   */\n      tag_363\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13083:13415   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13421:13511   */\n    tag_386:\n        /* \"#utility.yul\":13455:13462   */\n      0x00\n        /* \"#utility.yul\":13498:13503   */\n      dup2\n        /* \"#utility.yul\":13491:13504   */\n      iszero\n        /* \"#utility.yul\":13484:13505   */\n      iszero\n        /* \"#utility.yul\":13473:13505   */\n      swap1\n      pop\n        /* \"#utility.yul\":13421:13511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13517:13633   */\n    tag_387:\n        /* \"#utility.yul\":13587:13608   */\n      tag_547\n        /* \"#utility.yul\":13602:13607   */\n      dup2\n        /* \"#utility.yul\":13587:13608   */\n      tag_386\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13580:13585   */\n      dup2\n        /* \"#utility.yul\":13577:13609   */\n      eq\n        /* \"#utility.yul\":13567:13627   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":13623:13624   */\n      0x00\n        /* \"#utility.yul\":13620:13621   */\n      dup1\n        /* \"#utility.yul\":13613:13625   */\n      revert\n        /* \"#utility.yul\":13567:13627   */\n    tag_548:\n        /* \"#utility.yul\":13517:13633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13639:13776   */\n    tag_388:\n        /* \"#utility.yul\":13693:13698   */\n      0x00\n        /* \"#utility.yul\":13724:13730   */\n      dup2\n        /* \"#utility.yul\":13718:13731   */\n      mload\n        /* \"#utility.yul\":13709:13731   */\n      swap1\n      pop\n        /* \"#utility.yul\":13740:13770   */\n      tag_550\n        /* \"#utility.yul\":13764:13769   */\n      dup2\n        /* \"#utility.yul\":13740:13770   */\n      tag_387\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13639:13776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13782:14127   */\n    tag_195:\n        /* \"#utility.yul\":13849:13855   */\n      0x00\n        /* \"#utility.yul\":13898:13900   */\n      0x20\n        /* \"#utility.yul\":13886:13895   */\n      dup3\n        /* \"#utility.yul\":13877:13884   */\n      dup5\n        /* \"#utility.yul\":13873:13896   */\n      sub\n        /* \"#utility.yul\":13869:13901   */\n      slt\n        /* \"#utility.yul\":13866:13985   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":13904:13983   */\n      tag_553\n      tag_353\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13866:13985   */\n    tag_552:\n        /* \"#utility.yul\":14024:14025   */\n      0x00\n        /* \"#utility.yul\":14049:14110   */\n      tag_554\n        /* \"#utility.yul\":14102:14109   */\n      dup5\n        /* \"#utility.yul\":14093:14099   */\n      dup3\n        /* \"#utility.yul\":14082:14091   */\n      dup6\n        /* \"#utility.yul\":14078:14100   */\n      add\n        /* \"#utility.yul\":14049:14110   */\n      tag_388\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14039:14110   */\n      swap2\n      pop\n        /* \"#utility.yul\":13995:14120   */\n      pop\n        /* \"#utility.yul\":13782:14127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14133:14218   */\n    tag_389:\n        /* \"#utility.yul\":14178:14185   */\n      0x00\n        /* \"#utility.yul\":14207:14212   */\n      dup2\n        /* \"#utility.yul\":14196:14212   */\n      swap1\n      pop\n        /* \"#utility.yul\":14133:14218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14224:14325   */\n    tag_390:\n        /* \"#utility.yul\":14260:14267   */\n      0x00\n        /* \"#utility.yul\":14300:14318   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14293:14298   */\n      dup3\n        /* \"#utility.yul\":14289:14319   */\n      and\n        /* \"#utility.yul\":14278:14319   */\n      swap1\n      pop\n        /* \"#utility.yul\":14224:14325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14331:14391   */\n    tag_391:\n        /* \"#utility.yul\":14359:14362   */\n      0x00\n        /* \"#utility.yul\":14380:14385   */\n      dup2\n        /* \"#utility.yul\":14373:14385   */\n      swap1\n      pop\n        /* \"#utility.yul\":14331:14391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14397:14553   */\n    tag_392:\n        /* \"#utility.yul\":14454:14463   */\n      0x00\n        /* \"#utility.yul\":14487:14547   */\n      tag_559\n        /* \"#utility.yul\":14504:14546   */\n      tag_560\n        /* \"#utility.yul\":14513:14545   */\n      tag_561\n        /* \"#utility.yul\":14539:14544   */\n      dup5\n        /* \"#utility.yul\":14513:14545   */\n      tag_389\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14504:14546   */\n      tag_391\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14487:14547   */\n      tag_390\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14474:14547   */\n      swap1\n      pop\n        /* \"#utility.yul\":14397:14553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14559:14704   */\n    tag_393:\n        /* \"#utility.yul\":14653:14697   */\n      tag_563\n        /* \"#utility.yul\":14691:14696   */\n      dup2\n        /* \"#utility.yul\":14653:14697   */\n      tag_392\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14648:14651   */\n      dup3\n        /* \"#utility.yul\":14641:14698   */\n      mstore\n        /* \"#utility.yul\":14559:14704   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14710:14946   */\n    tag_244:\n        /* \"#utility.yul\":14810:14814   */\n      0x00\n        /* \"#utility.yul\":14848:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14846   */\n      dup3\n        /* \"#utility.yul\":14833:14851   */\n      add\n        /* \"#utility.yul\":14825:14851   */\n      swap1\n      pop\n        /* \"#utility.yul\":14861:14939   */\n      tag_565\n        /* \"#utility.yul\":14936:14937   */\n      0x00\n        /* \"#utility.yul\":14925:14934   */\n      dup4\n        /* \"#utility.yul\":14921:14938   */\n      add\n        /* \"#utility.yul\":14912:14918   */\n      dup5\n        /* \"#utility.yul\":14861:14939   */\n      tag_393\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14710:14946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14952:15057   */\n    tag_394:\n        /* \"#utility.yul\":14988:14995   */\n      0x00\n        /* \"#utility.yul\":15028:15050   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":15021:15026   */\n      dup3\n        /* \"#utility.yul\":15017:15051   */\n      and\n        /* \"#utility.yul\":15006:15051   */\n      swap1\n      pop\n        /* \"#utility.yul\":14952:15057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15063:15183   */\n    tag_395:\n        /* \"#utility.yul\":15135:15158   */\n      tag_568\n        /* \"#utility.yul\":15152:15157   */\n      dup2\n        /* \"#utility.yul\":15135:15158   */\n      tag_394\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15128:15133   */\n      dup2\n        /* \"#utility.yul\":15125:15159   */\n      eq\n        /* \"#utility.yul\":15115:15177   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":15173:15174   */\n      0x00\n        /* \"#utility.yul\":15170:15171   */\n      dup1\n        /* \"#utility.yul\":15163:15175   */\n      revert\n        /* \"#utility.yul\":15115:15177   */\n    tag_569:\n        /* \"#utility.yul\":15063:15183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15189:15330   */\n    tag_396:\n        /* \"#utility.yul\":15245:15250   */\n      0x00\n        /* \"#utility.yul\":15276:15282   */\n      dup2\n        /* \"#utility.yul\":15270:15283   */\n      mload\n        /* \"#utility.yul\":15261:15283   */\n      swap1\n      pop\n        /* \"#utility.yul\":15292:15324   */\n      tag_571\n        /* \"#utility.yul\":15318:15323   */\n      dup2\n        /* \"#utility.yul\":15292:15324   */\n      tag_395\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15189:15330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15336:15412   */\n    tag_397:\n        /* \"#utility.yul\":15372:15379   */\n      0x00\n        /* \"#utility.yul\":15401:15406   */\n      dup2\n        /* \"#utility.yul\":15390:15406   */\n      swap1\n      pop\n        /* \"#utility.yul\":15336:15412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15418:15538   */\n    tag_398:\n        /* \"#utility.yul\":15490:15513   */\n      tag_574\n        /* \"#utility.yul\":15507:15512   */\n      dup2\n        /* \"#utility.yul\":15490:15513   */\n      tag_397\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15483:15488   */\n      dup2\n        /* \"#utility.yul\":15480:15514   */\n      eq\n        /* \"#utility.yul\":15470:15532   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":15528:15529   */\n      0x00\n        /* \"#utility.yul\":15525:15526   */\n      dup1\n        /* \"#utility.yul\":15518:15530   */\n      revert\n        /* \"#utility.yul\":15470:15532   */\n    tag_575:\n        /* \"#utility.yul\":15418:15538   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15544:15685   */\n    tag_399:\n        /* \"#utility.yul\":15600:15605   */\n      0x00\n        /* \"#utility.yul\":15631:15637   */\n      dup2\n        /* \"#utility.yul\":15625:15638   */\n      mload\n        /* \"#utility.yul\":15616:15638   */\n      swap1\n      pop\n        /* \"#utility.yul\":15647:15679   */\n      tag_577\n        /* \"#utility.yul\":15673:15678   */\n      dup2\n        /* \"#utility.yul\":15647:15679   */\n      tag_398\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":15544:15685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15691:15834   */\n    tag_400:\n        /* \"#utility.yul\":15748:15753   */\n      0x00\n        /* \"#utility.yul\":15779:15785   */\n      dup2\n        /* \"#utility.yul\":15773:15786   */\n      mload\n        /* \"#utility.yul\":15764:15786   */\n      swap1\n      pop\n        /* \"#utility.yul\":15795:15828   */\n      tag_579\n        /* \"#utility.yul\":15822:15827   */\n      dup2\n        /* \"#utility.yul\":15795:15828   */\n      tag_364\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":15691:15834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15840:16811   */\n    tag_270:\n        /* \"#utility.yul\":15943:15949   */\n      0x00\n        /* \"#utility.yul\":15951:15957   */\n      dup1\n        /* \"#utility.yul\":15959:15965   */\n      0x00\n        /* \"#utility.yul\":15967:15973   */\n      dup1\n        /* \"#utility.yul\":15975:15981   */\n      0x00\n        /* \"#utility.yul\":16024:16027   */\n      0xa0\n        /* \"#utility.yul\":16012:16021   */\n      dup7\n        /* \"#utility.yul\":16003:16010   */\n      dup9\n        /* \"#utility.yul\":15999:16022   */\n      sub\n        /* \"#utility.yul\":15995:16028   */\n      slt\n        /* \"#utility.yul\":15992:16112   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":16031:16110   */\n      tag_582\n      tag_353\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":15992:16112   */\n    tag_581:\n        /* \"#utility.yul\":16151:16152   */\n      0x00\n        /* \"#utility.yul\":16176:16239   */\n      tag_583\n        /* \"#utility.yul\":16231:16238   */\n      dup9\n        /* \"#utility.yul\":16222:16228   */\n      dup3\n        /* \"#utility.yul\":16211:16220   */\n      dup10\n        /* \"#utility.yul\":16207:16229   */\n      add\n        /* \"#utility.yul\":16176:16239   */\n      tag_396\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16166:16239   */\n      swap6\n      pop\n        /* \"#utility.yul\":16122:16249   */\n      pop\n        /* \"#utility.yul\":16288:16290   */\n      0x20\n        /* \"#utility.yul\":16314:16377   */\n      tag_584\n        /* \"#utility.yul\":16369:16376   */\n      dup9\n        /* \"#utility.yul\":16360:16366   */\n      dup3\n        /* \"#utility.yul\":16349:16358   */\n      dup10\n        /* \"#utility.yul\":16345:16367   */\n      add\n        /* \"#utility.yul\":16314:16377   */\n      tag_399\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16304:16377   */\n      swap5\n      pop\n        /* \"#utility.yul\":16259:16387   */\n      pop\n        /* \"#utility.yul\":16426:16428   */\n      0x40\n        /* \"#utility.yul\":16452:16516   */\n      tag_585\n        /* \"#utility.yul\":16508:16515   */\n      dup9\n        /* \"#utility.yul\":16499:16505   */\n      dup3\n        /* \"#utility.yul\":16488:16497   */\n      dup10\n        /* \"#utility.yul\":16484:16506   */\n      add\n        /* \"#utility.yul\":16452:16516   */\n      tag_400\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":16442:16516   */\n      swap4\n      pop\n        /* \"#utility.yul\":16397:16526   */\n      pop\n        /* \"#utility.yul\":16565:16567   */\n      0x60\n        /* \"#utility.yul\":16591:16655   */\n      tag_586\n        /* \"#utility.yul\":16647:16654   */\n      dup9\n        /* \"#utility.yul\":16638:16644   */\n      dup3\n        /* \"#utility.yul\":16627:16636   */\n      dup10\n        /* \"#utility.yul\":16623:16645   */\n      add\n        /* \"#utility.yul\":16591:16655   */\n      tag_400\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16581:16655   */\n      swap3\n      pop\n        /* \"#utility.yul\":16536:16665   */\n      pop\n        /* \"#utility.yul\":16704:16707   */\n      0x80\n        /* \"#utility.yul\":16731:16794   */\n      tag_587\n        /* \"#utility.yul\":16786:16793   */\n      dup9\n        /* \"#utility.yul\":16777:16783   */\n      dup3\n        /* \"#utility.yul\":16766:16775   */\n      dup10\n        /* \"#utility.yul\":16762:16784   */\n      add\n        /* \"#utility.yul\":16731:16794   */\n      tag_396\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":16721:16794   */\n      swap2\n      pop\n        /* \"#utility.yul\":16675:16804   */\n      pop\n        /* \"#utility.yul\":15840:16811   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16817:17149   */\n    tag_291:\n        /* \"#utility.yul\":16938:16942   */\n      0x00\n        /* \"#utility.yul\":16976:16978   */\n      0x40\n        /* \"#utility.yul\":16965:16974   */\n      dup3\n        /* \"#utility.yul\":16961:16979   */\n      add\n        /* \"#utility.yul\":16953:16979   */\n      swap1\n      pop\n        /* \"#utility.yul\":16989:17060   */\n      tag_589\n        /* \"#utility.yul\":17057:17058   */\n      0x00\n        /* \"#utility.yul\":17046:17055   */\n      dup4\n        /* \"#utility.yul\":17042:17059   */\n      add\n        /* \"#utility.yul\":17033:17039   */\n      dup6\n        /* \"#utility.yul\":16989:17060   */\n      tag_361\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":17070:17142   */\n      tag_590\n        /* \"#utility.yul\":17138:17140   */\n      0x20\n        /* \"#utility.yul\":17127:17136   */\n      dup4\n        /* \"#utility.yul\":17123:17141   */\n      add\n        /* \"#utility.yul\":17114:17120   */\n      dup5\n        /* \"#utility.yul\":17070:17142   */\n      tag_361\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16817:17149   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17155:17506   */\n    tag_295:\n        /* \"#utility.yul\":17225:17231   */\n      0x00\n        /* \"#utility.yul\":17274:17276   */\n      0x20\n        /* \"#utility.yul\":17262:17271   */\n      dup3\n        /* \"#utility.yul\":17253:17260   */\n      dup5\n        /* \"#utility.yul\":17249:17272   */\n      sub\n        /* \"#utility.yul\":17245:17277   */\n      slt\n        /* \"#utility.yul\":17242:17361   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":17280:17359   */\n      tag_593\n      tag_353\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17242:17361   */\n    tag_592:\n        /* \"#utility.yul\":17400:17401   */\n      0x00\n        /* \"#utility.yul\":17425:17489   */\n      tag_594\n        /* \"#utility.yul\":17481:17488   */\n      dup5\n        /* \"#utility.yul\":17472:17478   */\n      dup3\n        /* \"#utility.yul\":17461:17470   */\n      dup6\n        /* \"#utility.yul\":17457:17479   */\n      add\n        /* \"#utility.yul\":17425:17489   */\n      tag_400\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17415:17489   */\n      swap2\n      pop\n        /* \"#utility.yul\":17371:17499   */\n      pop\n        /* \"#utility.yul\":17155:17506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17512:17954   */\n    tag_308:\n        /* \"#utility.yul\":17661:17665   */\n      0x00\n        /* \"#utility.yul\":17699:17701   */\n      0x60\n        /* \"#utility.yul\":17688:17697   */\n      dup3\n        /* \"#utility.yul\":17684:17702   */\n      add\n        /* \"#utility.yul\":17676:17702   */\n      swap1\n      pop\n        /* \"#utility.yul\":17712:17783   */\n      tag_596\n        /* \"#utility.yul\":17780:17781   */\n      0x00\n        /* \"#utility.yul\":17769:17778   */\n      dup4\n        /* \"#utility.yul\":17765:17782   */\n      add\n        /* \"#utility.yul\":17756:17762   */\n      dup7\n        /* \"#utility.yul\":17712:17783   */\n      tag_361\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":17793:17865   */\n      tag_597\n        /* \"#utility.yul\":17861:17863   */\n      0x20\n        /* \"#utility.yul\":17850:17859   */\n      dup4\n        /* \"#utility.yul\":17846:17864   */\n      add\n        /* \"#utility.yul\":17837:17843   */\n      dup6\n        /* \"#utility.yul\":17793:17865   */\n      tag_361\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":17875:17947   */\n      tag_598\n        /* \"#utility.yul\":17943:17945   */\n      0x40\n        /* \"#utility.yul\":17932:17941   */\n      dup4\n        /* \"#utility.yul\":17928:17946   */\n      add\n        /* \"#utility.yul\":17919:17925   */\n      dup5\n        /* \"#utility.yul\":17875:17947   */\n      tag_363\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":17512:17954   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17960:18595   */\n    tag_338:\n        /* \"#utility.yul\":18208:18211   */\n      0x00\n        /* \"#utility.yul\":18230:18335   */\n      tag_600\n        /* \"#utility.yul\":18331:18334   */\n      dup3\n        /* \"#utility.yul\":18322:18328   */\n      dup8\n        /* \"#utility.yul\":18314:18320   */\n      dup10\n        /* \"#utility.yul\":18230:18335   */\n      tag_370\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18223:18335   */\n      swap2\n      pop\n        /* \"#utility.yul\":18352:18447   */\n      tag_601\n        /* \"#utility.yul\":18443:18446   */\n      dup3\n        /* \"#utility.yul\":18434:18440   */\n      dup7\n        /* \"#utility.yul\":18352:18447   */\n      tag_376\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":18345:18447   */\n      swap2\n      pop\n        /* \"#utility.yul\":18464:18569   */\n      tag_602\n        /* \"#utility.yul\":18565:18568   */\n      dup3\n        /* \"#utility.yul\":18556:18562   */\n      dup5\n        /* \"#utility.yul\":18548:18554   */\n      dup7\n        /* \"#utility.yul\":18464:18569   */\n      tag_370\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":18457:18569   */\n      swap2\n      pop\n        /* \"#utility.yul\":18586:18589   */\n      dup2\n        /* \"#utility.yul\":18579:18589   */\n      swap1\n      pop\n        /* \"#utility.yul\":17960:18595   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a5088f83ab460b3b84be6cf5b8c8c54c1bfcc8da753e91aa8120dff2889f460064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506127698061001d5f395ff3fe6080604052600436106100fd575f3560e01c806382702ff411610094578063b4988fd011610063578063b4988fd01461028f578063f2fde38b146102b7578063fbd43caa146102df578063fc8b2653146102fb578063fee84d4e14610325576100fd565b806382702ff4146102115780638da5cb5b14610227578063a0ef91df14610251578063a2b40d1914610267576100fd565b806337ee4b47116100d057806337ee4b471461019f578063559aae74146101bb57806359e41286146101d1578063715018a6146101fb576100fd565b80631b0e17a314610101578063225068c21461011d57806325970115146101395780632dd398b514610175575b5f80fd5b61011b60048036038101906101169190611e8f565b61033b565b005b61013760048036038101906101329190611eda565b6104f9565b005b348015610144575f80fd5b5061015f600480360381019061015a9190611e8f565b6106fc565b60405161016c9190611f97565b60405180910390f35b348015610180575f80fd5b5061018961074e565b6040516101969190611fc8565b60405180910390f35b6101b960048036038101906101b49190611eda565b610790565b005b3480156101c6575f80fd5b506101cf61096f565b005b3480156101dc575f80fd5b506101e5610c21565b6040516101f29190611fc8565b60405180910390f35b348015610206575f80fd5b5061020f610c32565b005b34801561021c575f80fd5b50610225610c45565b005b348015610232575f80fd5b5061023b610e5d565b6040516102489190611f97565b60405180910390f35b34801561025c575f80fd5b50610265610e92565b005b348015610272575f80fd5b5061028d6004803603810190610288919061200b565b610fff565b005b34801561029a575f80fd5b506102b560048036038101906102b09190612060565b6110a2565b005b3480156102c2575f80fd5b506102dd60048036038101906102d891906120b0565b6112b3565b005b6102f960048036038101906102f49190611e8f565b611337565b005b348015610306575f80fd5b5061030f611519565b60405161031c9190611fc8565b60405180910390f35b348015610330575f80fd5b506103396115ee565b005b5f61034461074e565b905080341461038c5734816040517fbe7b9d4d0000000000000000000000000000000000000000000000000000000081526004016103839291906120db565b60405180910390fd5b82825f73ffffffffffffffffffffffffffffffffffffffff166103ad611741565b60010183836040516103c092919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461043b576040517fc5e8402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33610444611741565b600101868660405161045792919061213e565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a1286866040516104ea9291906121a2565b60405180910390a25050505050565b5f610502611768565b90505f61050d611741565b5f015490508082146105585781816040517f035a0e0000000000000000000000000000000000000000000000000000000000815260040161054f9291906120db565b60405180910390fd5b5f61056587878787611809565b90505f610570611768565b905061057b8161198b565b33610584611741565b600101836040516105959190612226565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806105e9611a2d565b5f015f8282546105f99190612269565b9250508190555080610609611a2d565b6001015f610615611741565b6001018b8b60405161062892919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461069d9190612269565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12836040516106ea91906122d4565b60405180910390a25050505050505050565b5f610705611741565b600101838360405161071892919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b5f610757611519565b670de0b6b3a7640000606461076a611741565b5f015461077791906122f4565b61078191906122f4565b61078b9190612362565b905090565b5f61079961074e565b90508034146107e15734816040517fbe7b9d4d0000000000000000000000000000000000000000000000000000000081526004016107d89291906120db565b60405180910390fd5b5f6107ee86868686611809565b9050336107f9611741565b6001018260405161080a9190612226565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503461085e611a54565b5f015f82825461086e9190612269565b925050819055503461087e611a54565b6001015f61088a611741565b600101898960405161089d92919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109129190612269565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a128260405161095f91906122d4565b60405180910390a2505050505050565b5f610978611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036109f957336040517fdc69dc160000000000000000000000000000000000000000000000000000000081526004016109f09190611f97565b60405180910390fd5b5f803373ffffffffffffffffffffffffffffffffffffffff16610a1a611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610a65906123bf565b5f6040518083038185875af1925050503d805f8114610a9f576040519150601f19603f3d011682016040523d82523d5f602084013e610aa4565b606091505b509150915081610aed5733816040517f7824688c000000000000000000000000000000000000000000000000000000008152600401610ae4929190612425565b60405180910390fd5b610af5611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b3c611a54565b5f015f828254610b4c9190612453565b925050819055505f610b5c611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6533610bc8611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610c15929190612486565b60405180910390a15050565b5f610c2a611741565b5f0154905090565b610c3a611a7b565b610c435f611b02565b565b5f610c4e611a2d565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610ccf57336040517fdc69dc16000000000000000000000000000000000000000000000000000000008152600401610cc69190611f97565b60405180910390fd5b5f610cd8611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d75929190612486565b6020604051808303815f875af1158015610d91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db591906124e2565b5080610dbf611a54565b5f015f828254610dcf9190612453565b925050819055505f610ddf611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b653382604051610e52929190612486565b60405180910390a150565b5f80610e67611bd3565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610e9a611a7b565b5f610ea3611a54565b5f015447610eb19190612453565b90505f8103610efe57610ec2610e5d565b6040517fdc69dc16000000000000000000000000000000000000000000000000000000008152600401610ef59190611f97565b60405180910390fd5b5f80610f08610e5d565b73ffffffffffffffffffffffffffffffffffffffff1683604051610f2b906123bf565b5f6040518083038185875af1925050503d805f8114610f65576040519150601f19603f3d011682016040523d82523d5f602084013e610f6a565b606091505b509150915081610fba57610f7c610e5d565b816040517f7824688c000000000000000000000000000000000000000000000000000000008152600401610fb1929190612425565b60405180910390fd5b7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65610fe3610e5d565b84604051610ff2929190612486565b60405180910390a1505050565b611007611a7b565b805f81036110585780611018611741565b5f01546040517fd090dd0600000000000000000000000000000000000000000000000000000000815260040161104f9291906120db565b60405180910390fd5b81611061611741565b5f01819055507fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d622826040516110969190611fc8565b60405180910390a15050565b5f6110ab611bfa565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156110f35750825b90505f60018367ffffffffffffffff1614801561112657505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611134575080155b1561116b576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156111b8576001855f0160086101000a81548160ff0219169083151502179055505b876111c1611741565b5f01819055506111d033611c21565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156112a9575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516112a09190612562565b60405180910390a15b5050505050505050565b6112bb611a7b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361132b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113229190611f97565b60405180910390fd5b61133481611b02565b50565b5f611340611768565b90505f61134b611741565b5f015490508082146113965781816040517f035a0e0000000000000000000000000000000000000000000000000000000000815260040161138d9291906120db565b60405180910390fd5b83835f73ffffffffffffffffffffffffffffffffffffffff166113b7611741565b60010183836040516113ca92919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611445576040517fc5e8402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61144e611768565b90506114598161198b565b33611462611741565b600101888860405161147592919061213e565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a1288886040516115089291906121a2565b60405180910390a250505050505050565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611583573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115a79190612601565b5050509150505f8112156115e7576040517f6f4f5ab900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8091505090565b6115f6611a7b565b5f6115ff611a2d565b5f015461160a611c35565b6116149190612453565b90505f810361166157611625610e5d565b6040517fdc69dc160000000000000000000000000000000000000000000000000000000081526004016116589190611f97565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016116bd929190612486565b6020604051808303815f875af11580156116d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116fd91906124e2565b507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65611727610e5d565b82604051611736929190612486565b60405180910390a150565b5f7f34d79759018dd62b1c8d40a6535099f131828aa4665b939adf68c4556b516400905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016117c5929190612678565b602060405180830381865afa1580156117e0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611804919061269f565b905090565b60605f73ffffffffffffffffffffffffffffffffffffffff1661182a611741565b600101868660405161183d92919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118c55784846040517f30a58c070000000000000000000000000000000000000000000000000000000081526004016118bc9291906121a2565b60405180910390fd5b5f6118d284848888611cd4565b90505f73ffffffffffffffffffffffffffffffffffffffff166118f3611741565b600101826040516119049190612226565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461197f576040517fc5e8402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050949350505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016119e9939291906126ca565b6020604051808303815f875af1158015611a05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a2991906124e2565b5050565b5f7f64d6ff49462c7266e92c8aa47370a483b3bb1c9ff7216e1d88a62c1eb24ffb00905090565b5f7f249f20ee916056548cfe0204d9ea4281f252680318bb5252f87aa5a31ec81e00905090565b611a83611d3d565b73ffffffffffffffffffffffffffffffffffffffff16611aa1610e5d565b73ffffffffffffffffffffffffffffffffffffffff1614611b0057611ac4611d3d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611af79190611f97565b60405180910390fd5b565b5f611b0b611bd3565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611c29611d44565b611c3281611d84565b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611c909190611f97565b602060405180830381865afa158015611cab573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ccf919061269f565b905090565b606084846040518060400160405280600181526020017f2e000000000000000000000000000000000000000000000000000000000000008152508585604051602001611d249594939291906126ff565b6040516020818303038152906040529050949350505050565b5f33905090565b611d4c611e08565b611d82576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611d8c611d44565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dfc575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611df39190611f97565b60405180910390fd5b611e0581611b02565b50565b5f611e11611bfa565b5f0160089054906101000a900460ff16905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611e4f57611e4e611e2e565b5b8235905067ffffffffffffffff811115611e6c57611e6b611e32565b5b602083019150836001820283011115611e8857611e87611e36565b5b9250929050565b5f8060208385031215611ea557611ea4611e26565b5b5f83013567ffffffffffffffff811115611ec257611ec1611e2a565b5b611ece85828601611e3a565b92509250509250929050565b5f805f8060408587031215611ef257611ef1611e26565b5b5f85013567ffffffffffffffff811115611f0f57611f0e611e2a565b5b611f1b87828801611e3a565b9450945050602085013567ffffffffffffffff811115611f3e57611f3d611e2a565b5b611f4a87828801611e3a565b925092505092959194509250565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f8182611f58565b9050919050565b611f9181611f77565b82525050565b5f602082019050611faa5f830184611f88565b92915050565b5f819050919050565b611fc281611fb0565b82525050565b5f602082019050611fdb5f830184611fb9565b92915050565b611fea81611fb0565b8114611ff4575f80fd5b50565b5f8135905061200581611fe1565b92915050565b5f602082840312156120205761201f611e26565b5b5f61202d84828501611ff7565b91505092915050565b61203f81611f77565b8114612049575f80fd5b50565b5f8135905061205a81612036565b92915050565b5f805f6060848603121561207757612076611e26565b5b5f61208486828701611ff7565b93505060206120958682870161204c565b92505060406120a68682870161204c565b9150509250925092565b5f602082840312156120c5576120c4611e26565b5b5f6120d28482850161204c565b91505092915050565b5f6040820190506120ee5f830185611fb9565b6120fb6020830184611fb9565b9392505050565b5f81905092915050565b828183375f83830152505050565b5f6121258385612102565b935061213283858461210c565b82840190509392505050565b5f61214a82848661211a565b91508190509392505050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f6121818385612156565b935061218e83858461210c565b61219783612166565b840190509392505050565b5f6020820190508181035f8301526121bb818486612176565b90509392505050565b5f81519050919050565b5f5b838110156121eb5780820151818401526020810190506121d0565b5f8484015250505050565b5f612200826121c4565b61220a8185612102565b935061221a8185602086016121ce565b80840191505092915050565b5f61223182846121f6565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61227382611fb0565b915061227e83611fb0565b92508282019050808211156122965761229561223c565b5b92915050565b5f6122a6826121c4565b6122b08185612156565b93506122c08185602086016121ce565b6122c981612166565b840191505092915050565b5f6020820190508181035f8301526122ec818461229c565b905092915050565b5f6122fe82611fb0565b915061230983611fb0565b925082820261231781611fb0565b9150828204841483151761232e5761232d61223c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61236c82611fb0565b915061237783611fb0565b92508261238757612386612335565b5b828204905092915050565b5f81905092915050565b50565b5f6123aa5f83612392565b91506123b58261239c565b5f82019050919050565b5f6123c98261239f565b9150819050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123f7826123d3565b61240181856123dd565b93506124118185602086016121ce565b61241a81612166565b840191505092915050565b5f6040820190506124385f830185611f88565b818103602083015261244a81846123ed565b90509392505050565b5f61245d82611fb0565b915061246883611fb0565b92508282039050818111156124805761247f61223c565b5b92915050565b5f6040820190506124995f830185611f88565b6124a66020830184611fb9565b9392505050565b5f8115159050919050565b6124c1816124ad565b81146124cb575f80fd5b50565b5f815190506124dc816124b8565b92915050565b5f602082840312156124f7576124f6611e26565b5b5f612504848285016124ce565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61254c6125476125428461250d565b612529565b612516565b9050919050565b61255c81612532565b82525050565b5f6020820190506125755f830184612553565b92915050565b5f69ffffffffffffffffffff82169050919050565b6125998161257b565b81146125a3575f80fd5b50565b5f815190506125b481612590565b92915050565b5f819050919050565b6125cc816125ba565b81146125d6575f80fd5b50565b5f815190506125e7816125c3565b92915050565b5f815190506125fb81611fe1565b92915050565b5f805f805f60a0868803121561261a57612619611e26565b5b5f612627888289016125a6565b9550506020612638888289016125d9565b9450506040612649888289016125ed565b935050606061265a888289016125ed565b925050608061266b888289016125a6565b9150509295509295909350565b5f60408201905061268b5f830185611f88565b6126986020830184611f88565b9392505050565b5f602082840312156126b4576126b3611e26565b5b5f6126c1848285016125ed565b91505092915050565b5f6060820190506126dd5f830186611f88565b6126ea6020830185611f88565b6126f76040830184611fb9565b949350505050565b5f61270b82878961211a565b915061271782866121f6565b915061272482848661211a565b9150819050969550505050505056fea2646970667358221220a5088f83ab460b3b84be6cf5b8c8c54c1bfcc8da753e91aa8120dff2889f460064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2769 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82702FF4 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xB4988FD0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB4988FD0 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xFBD43CAA EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xFC8B2653 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xFEE84D4E EQ PUSH2 0x325 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x82702FF4 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA0EF91DF EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x267 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x37EE4B47 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x37EE4B47 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x559AAE74 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x59E41286 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FB JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x1B0E17A3 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x225068C2 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x25970115 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x2DD398B5 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1EDA JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1EDA JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0xC32 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0xC45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0xE92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x10A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x12B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x1337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x15EE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x344 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x38C JUMPI CALLVALUE DUP2 PUSH1 0x40 MLOAD PUSH32 0xBE7B9D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AD PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43B JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5E8402D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x444 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x457 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x4EA SWAP3 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x502 PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x50D PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD SWAP1 POP DUP1 DUP3 EQ PUSH2 0x558 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x35A0E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x565 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x570 PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH2 0x57B DUP2 PUSH2 0x198B JUMP JUMPDEST CALLER PUSH2 0x584 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH2 0x5E9 PUSH2 0x1A2D JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x609 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 PUSH2 0x615 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x628 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x705 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x718 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x757 PUSH2 0x1519 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH2 0x76A PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x799 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x7E1 JUMPI CALLVALUE DUP2 PUSH1 0x40 MLOAD PUSH32 0xBE7B9D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7EE DUP7 DUP7 DUP7 DUP7 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP CALLER PUSH2 0x7F9 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP3 PUSH1 0x40 MLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH2 0x85E PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH2 0x87E PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 PUSH2 0x88A PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP3 PUSH1 0x40 MLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x978 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x9F9 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1A PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xA65 SWAP1 PUSH2 0x23BF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xAED JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x7824688C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP3 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF5 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB3C PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xB5C PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 CALLER PUSH2 0xBC8 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xC15 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2A PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC3A PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xC43 PUSH0 PUSH2 0x1B02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xC4E PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xCCF JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xCD8 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST POP DUP1 PUSH2 0xDBF PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDCF SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xDDF PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xE52 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE67 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE9A PUSH2 0x1A7B JUMP JUMPDEST PUSH0 PUSH2 0xEA3 PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD SLOAD SELFBALANCE PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xEFE JUMPI PUSH2 0xEC2 PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xF08 PUSH2 0xE5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xF2B SWAP1 PUSH2 0x23BF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xFBA JUMPI PUSH2 0xF7C PUSH2 0xE5D JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x7824688C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB1 SWAP3 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH2 0xFE3 PUSH2 0xE5D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH2 0xFF2 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x1A7B JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1058 JUMPI DUP1 PUSH2 0x1018 PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xD090DD0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x1061 PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xA6DC15BDB68DA224C66DB4B3838D9A2B205138E8CFF6774E57D0AF91E196D622 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1096 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10AB PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x10F3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1126 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1134 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP8 PUSH2 0x11C1 PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x11D0 CALLER PUSH2 0x1C21 JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x12A9 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12BB PUSH2 0x1A7B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x132B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1322 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1334 DUP2 PUSH2 0x1B02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1340 PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x134B PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1396 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x35A0E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138D SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B7 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13CA SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5E8402D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x144E PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH2 0x1459 DUP2 PUSH2 0x198B JUMP JUMPDEST CALLER PUSH2 0x1462 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1475 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1508 SWAP3 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1583 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A7 SWAP2 SWAP1 PUSH2 0x2601 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SLT ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F4F5AB900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15F6 PUSH2 0x1A7B JUMP JUMPDEST PUSH0 PUSH2 0x15FF PUSH2 0x1A2D JUMP JUMPDEST PUSH0 ADD SLOAD PUSH2 0x160A PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1661 JUMPI PUSH2 0x1625 PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1658 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BD SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST POP PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH2 0x1727 PUSH2 0xE5D JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x1736 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x34D79759018DD62B1C8D40A6535099F131828AA4665B939ADF68C4556B516400 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C5 SWAP3 SWAP2 SWAP1 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x182A PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x183D SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18C5 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x30A58C0700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP3 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x18D2 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18F3 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x197F JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5E8402D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A05 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A29 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x64D6FF49462C7266E92C8AA47370A483B3BB1C9FF7216E1D88A62C1EB24FFB00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x249F20EE916056548CFE0204D9EA4281F252680318BB5252F87AA5A31EC81E00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A83 PUSH2 0x1D3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AA1 PUSH2 0xE5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B00 JUMPI PUSH2 0x1AC4 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF7 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1B0B PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C29 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x1C32 DUP2 PUSH2 0x1D84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C90 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CCF SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D24 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D4C PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1D82 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D8C PUSH2 0x1D44 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DFC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x1B02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E11 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E4F JUMPI PUSH2 0x1E4E PUSH2 0x1E2E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1E32 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1E88 JUMPI PUSH2 0x1E87 PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA5 JUMPI PUSH2 0x1EA4 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH2 0x1ECE DUP6 DUP3 DUP7 ADD PUSH2 0x1E3A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0E PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH2 0x1F1B DUP8 DUP3 DUP9 ADD PUSH2 0x1E3A JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH2 0x1F4A DUP8 DUP3 DUP9 ADD PUSH2 0x1E3A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F81 DUP3 PUSH2 0x1F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F91 DUP2 PUSH2 0x1F77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FAA PUSH0 DUP4 ADD DUP5 PUSH2 0x1F88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC2 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FDB PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEA DUP2 PUSH2 0x1FB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2005 DUP2 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2020 JUMPI PUSH2 0x201F PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202D DUP5 DUP3 DUP6 ADD PUSH2 0x1FF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x1F77 JUMP JUMPDEST DUP2 EQ PUSH2 0x2049 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205A DUP2 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2084 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2095 DUP7 DUP3 DUP8 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20A6 DUP7 DUP3 DUP8 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C4 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D2 DUP5 DUP3 DUP6 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20EE PUSH0 DUP4 ADD DUP6 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x20FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2125 DUP4 DUP6 PUSH2 0x2102 JUMP JUMPDEST SWAP4 POP PUSH2 0x2132 DUP4 DUP6 DUP5 PUSH2 0x210C JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214A DUP3 DUP5 DUP7 PUSH2 0x211A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2181 DUP4 DUP6 PUSH2 0x2156 JUMP JUMPDEST SWAP4 POP PUSH2 0x218E DUP4 DUP6 DUP5 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x2197 DUP4 PUSH2 0x2166 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BB DUP2 DUP5 DUP7 PUSH2 0x2176 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21D0 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2200 DUP3 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x220A DUP2 DUP6 PUSH2 0x2102 JUMP JUMPDEST SWAP4 POP PUSH2 0x221A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2231 DUP3 DUP5 PUSH2 0x21F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2273 DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x227E DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2295 PUSH2 0x223C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22A6 DUP3 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x22B0 DUP2 DUP6 PUSH2 0x2156 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x22C9 DUP2 PUSH2 0x2166 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EC DUP2 DUP5 PUSH2 0x229C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22FE DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2309 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2317 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x232E JUMPI PUSH2 0x232D PUSH2 0x223C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x236C DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2377 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2387 JUMPI PUSH2 0x2386 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x23AA PUSH0 DUP4 PUSH2 0x2392 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B5 DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23C9 DUP3 PUSH2 0x239F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23F7 DUP3 PUSH2 0x23D3 JUMP JUMPDEST PUSH2 0x2401 DUP2 DUP6 PUSH2 0x23DD JUMP JUMPDEST SWAP4 POP PUSH2 0x2411 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x241A DUP2 PUSH2 0x2166 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2438 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x244A DUP2 DUP5 PUSH2 0x23ED JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x245D DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2468 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x247F PUSH2 0x223C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2499 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x24A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C1 DUP2 PUSH2 0x24AD JUMP JUMPDEST DUP2 EQ PUSH2 0x24CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24DC DUP2 PUSH2 0x24B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F7 JUMPI PUSH2 0x24F6 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2504 DUP5 DUP3 DUP6 ADD PUSH2 0x24CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x254C PUSH2 0x2547 PUSH2 0x2542 DUP5 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255C DUP2 PUSH2 0x2532 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2575 PUSH0 DUP4 ADD DUP5 PUSH2 0x2553 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2599 DUP2 PUSH2 0x257B JUMP JUMPDEST DUP2 EQ PUSH2 0x25A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25B4 DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25CC DUP2 PUSH2 0x25BA JUMP JUMPDEST DUP2 EQ PUSH2 0x25D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E7 DUP2 PUSH2 0x25C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25FB DUP2 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2627 DUP9 DUP3 DUP10 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2638 DUP9 DUP3 DUP10 ADD PUSH2 0x25D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2649 DUP9 DUP3 DUP10 ADD PUSH2 0x25ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x265A DUP9 DUP3 DUP10 ADD PUSH2 0x25ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x266B DUP9 DUP3 DUP10 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x268B PUSH0 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x2698 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F88 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B4 JUMPI PUSH2 0x26B3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26C1 DUP5 DUP3 DUP6 ADD PUSH2 0x25ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26DD PUSH0 DUP4 ADD DUP7 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x26EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x26F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x270B DUP3 DUP8 DUP10 PUSH2 0x211A JUMP JUMPDEST SWAP2 POP PUSH2 0x2717 DUP3 DUP7 PUSH2 0x21F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2724 DUP3 DUP5 DUP7 PUSH2 0x211A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 ADDMOD DUP16 DUP4 0xAB CHAINID SIGNEXTEND EXTCODESIZE DUP5 0xBE PUSH13 0xF5B8C8C54C1BFCC8DA753E91AA DUP2 KECCAK256 0xDF CALLCODE DUP9 SWAP16 CHAINID STOP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "592:16695:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_100": {
									"entryPoint": 7201,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_127": {
									"entryPoint": 7556,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_416": {
									"entryPoint": 7492,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_168": {
									"entryPoint": 6779,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getDomainStorage_1967": {
									"entryPoint": 5953,
									"id": 1967,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getEthToUsdPriceFromOracle_2002": {
									"entryPoint": 5401,
									"id": 2002,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getFundStorage_1976": {
									"entryPoint": 6740,
									"id": 1976,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_493": {
									"entryPoint": 7162,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_71": {
									"entryPoint": 7123,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getUsdcFundStorage_2028": {
									"entryPoint": 6701,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_484": {
									"entryPoint": 7688,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_522": {
									"entryPoint": 7485,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_239": {
									"entryPoint": 6914,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyChildDomainViaEth_1552": {
									"entryPoint": 1936,
									"id": 1552,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyChildDomainViaUsdc_1611": {
									"entryPoint": 1273,
									"id": 1611,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyDomainViaEth_1638": {
									"entryPoint": 827,
									"id": 1638,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyDomainViaUsdc_1674": {
									"entryPoint": 4919,
									"id": 1674,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changePrice_1696": {
									"entryPoint": 4095,
									"id": 1696,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createAndCheckFullDomain_2079": {
									"entryPoint": 6153,
									"id": 2079,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@createFullDomain_1958": {
									"entryPoint": 7380,
									"id": 1958,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@getDomainOwner_1499": {
									"entryPoint": 1788,
									"id": 1499,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRegistrationPriceInEth_1475": {
									"entryPoint": 1870,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRegistrationPriceInUsdc_1485": {
									"entryPoint": 3105,
									"id": 1485,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUsdcAllowance_2019": {
									"entryPoint": 5992,
									"id": 2019,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUsdcContractBalance_2113": {
									"entryPoint": 7221,
									"id": 2113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1455": {
									"entryPoint": 4258,
									"id": 1455,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_151": {
									"entryPoint": 3677,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_182": {
									"entryPoint": 3122,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_210": {
									"entryPoint": 4787,
									"id": 210,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferUsdc_2098": {
									"entryPoint": 6539,
									"id": 2098,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawDomainEth_1877": {
									"entryPoint": 2415,
									"id": 1877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawDomainUsdc_1935": {
									"entryPoint": 3141,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawEth_1756": {
									"entryPoint": 3730,
									"id": 1756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUsdc_1796": {
									"entryPoint": 5614,
									"id": 1796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 9689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 7738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_address": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8474,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_calldata_ptr_t_string_memory_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9983,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9848,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9930,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 9570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8610,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8411,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 9494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 9595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 9522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 9667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 9616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18598:10",
										"nodeType": "YulBlock",
										"src": "0:18598:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "669:28:10",
													"nodeType": "YulBlock",
													"src": "669:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:10",
																		"nodeType": "YulLiteral",
																		"src": "686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:10",
																		"nodeType": "YulLiteral",
																		"src": "689:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:10"
																},
																"nativeSrc": "679:12:10",
																"nodeType": "YulFunctionCall",
																"src": "679:12:10"
															},
															"nativeSrc": "679:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:10"
											},
											{
												"body": {
													"nativeSrc": "792:478:10",
													"nodeType": "YulBlock",
													"src": "792:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "841:83:10",
																"nodeType": "YulBlock",
																"src": "841:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "843:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "843:77:10"
																			},
																			"nativeSrc": "843:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "843:79:10"
																		},
																		"nativeSrc": "843:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "843:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "820:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "820:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "828:4:10",
																						"nodeType": "YulLiteral",
																						"src": "828:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "816:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "816:3:10"
																				},
																				"nativeSrc": "816:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "816:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "835:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "835:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "812:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:10"
																		},
																		"nativeSrc": "812:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "812:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "805:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:10"
																},
																"nativeSrc": "805:35:10",
																"nodeType": "YulFunctionCall",
																"src": "805:35:10"
															},
															"nativeSrc": "802:122:10",
															"nodeType": "YulIf",
															"src": "802:122:10"
														},
														{
															"nativeSrc": "933:30:10",
															"nodeType": "YulAssignment",
															"src": "933:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "956:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "943:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:10"
																},
																"nativeSrc": "943:20:10",
																"nodeType": "YulFunctionCall",
																"src": "943:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "933:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1006:83:10",
																"nodeType": "YulBlock",
																"src": "1006:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1008:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1008:77:10"
																			},
																			"nativeSrc": "1008:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1008:79:10"
																		},
																		"nativeSrc": "1008:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1008:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "978:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "978:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "986:18:10",
																		"nodeType": "YulLiteral",
																		"src": "986:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "975:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "975:2:10"
																},
																"nativeSrc": "975:30:10",
																"nodeType": "YulFunctionCall",
																"src": "975:30:10"
															},
															"nativeSrc": "972:117:10",
															"nodeType": "YulIf",
															"src": "972:117:10"
														},
														{
															"nativeSrc": "1098:29:10",
															"nodeType": "YulAssignment",
															"src": "1098:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1114:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1114:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1122:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1122:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1110:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1110:3:10"
																},
																"nativeSrc": "1110:17:10",
																"nodeType": "YulFunctionCall",
																"src": "1110:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1098:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1098:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1181:83:10",
																"nodeType": "YulBlock",
																"src": "1181:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1183:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1183:77:10"
																			},
																			"nativeSrc": "1183:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1183:79:10"
																		},
																		"nativeSrc": "1183:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1146:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1146:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1160:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1160:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1168:4:10",
																						"nodeType": "YulLiteral",
																						"src": "1168:4:10",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1156:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:10"
																				},
																				"nativeSrc": "1156:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1156:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1142:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:10"
																		},
																		"nativeSrc": "1142:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1142:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1176:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1176:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1139:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1139:2:10"
																},
																"nativeSrc": "1139:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1139:41:10"
															},
															"nativeSrc": "1136:128:10",
															"nodeType": "YulIf",
															"src": "1136:128:10"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "717:553:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "759:6:10",
														"nodeType": "YulTypedName",
														"src": "759:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "767:3:10",
														"nodeType": "YulTypedName",
														"src": "767:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "775:8:10",
														"nodeType": "YulTypedName",
														"src": "775:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "785:6:10",
														"nodeType": "YulTypedName",
														"src": "785:6:10",
														"type": ""
													}
												],
												"src": "717:553:10"
											},
											{
												"body": {
													"nativeSrc": "1362:443:10",
													"nodeType": "YulBlock",
													"src": "1362:443:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1408:83:10",
																"nodeType": "YulBlock",
																"src": "1408:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1410:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1410:77:10"
																			},
																			"nativeSrc": "1410:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:79:10"
																		},
																		"nativeSrc": "1410:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1410:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1383:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1383:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1392:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1392:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1379:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:10"
																		},
																		"nativeSrc": "1379:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1404:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1375:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:10"
																},
																"nativeSrc": "1375:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1375:32:10"
															},
															"nativeSrc": "1372:119:10",
															"nodeType": "YulIf",
															"src": "1372:119:10"
														},
														{
															"nativeSrc": "1501:297:10",
															"nodeType": "YulBlock",
															"src": "1501:297:10",
															"statements": [
																{
																	"nativeSrc": "1516:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1516:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1547:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1547:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1558:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1558:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1543:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1543:3:10"
																				},
																				"nativeSrc": "1543:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1543:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1530:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "1530:12:10"
																		},
																		"nativeSrc": "1530:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1530:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1520:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1520:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1608:83:10",
																		"nodeType": "YulBlock",
																		"src": "1608:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1610:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "1610:77:10"
																					},
																					"nativeSrc": "1610:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1610:79:10"
																				},
																				"nativeSrc": "1610:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1610:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1580:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1588:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1588:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1577:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1577:2:10"
																		},
																		"nativeSrc": "1577:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:30:10"
																	},
																	"nativeSrc": "1574:117:10",
																	"nodeType": "YulIf",
																	"src": "1574:117:10"
																},
																{
																	"nativeSrc": "1705:83:10",
																	"nodeType": "YulAssignment",
																	"src": "1705:83:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1760:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1760:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1771:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1771:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1756:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1756:3:10"
																				},
																				"nativeSrc": "1756:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1756:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1780:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1780:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "1723:32:10",
																			"nodeType": "YulIdentifier",
																			"src": "1723:32:10"
																		},
																		"nativeSrc": "1723:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:65:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1705:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:10"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1713:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1713:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nativeSrc": "1276:529:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1324:9:10",
														"nodeType": "YulTypedName",
														"src": "1324:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1335:7:10",
														"nodeType": "YulTypedName",
														"src": "1335:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1355:6:10",
														"nodeType": "YulTypedName",
														"src": "1355:6:10",
														"type": ""
													}
												],
												"src": "1276:529:10"
											},
											{
												"body": {
													"nativeSrc": "1934:751:10",
													"nodeType": "YulBlock",
													"src": "1934:751:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1980:83:10",
																"nodeType": "YulBlock",
																"src": "1980:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1982:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1982:77:10"
																			},
																			"nativeSrc": "1982:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1982:79:10"
																		},
																		"nativeSrc": "1982:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1982:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1955:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1955:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1964:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1964:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1951:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:10"
																		},
																		"nativeSrc": "1951:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1951:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1976:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1947:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:10"
																},
																"nativeSrc": "1947:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1947:32:10"
															},
															"nativeSrc": "1944:119:10",
															"nodeType": "YulIf",
															"src": "1944:119:10"
														},
														{
															"nativeSrc": "2073:297:10",
															"nodeType": "YulBlock",
															"src": "2073:297:10",
															"statements": [
																{
																	"nativeSrc": "2088:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2088:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2119:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2119:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2130:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2130:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2115:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2115:3:10"
																				},
																				"nativeSrc": "2115:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2115:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2102:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "2102:12:10"
																		},
																		"nativeSrc": "2102:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2092:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2092:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2180:83:10",
																		"nodeType": "YulBlock",
																		"src": "2180:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2182:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "2182:77:10"
																					},
																					"nativeSrc": "2182:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:79:10"
																				},
																				"nativeSrc": "2182:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2182:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2152:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2152:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2160:18:10",
																				"nodeType": "YulLiteral",
																				"src": "2160:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2149:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2149:2:10"
																		},
																		"nativeSrc": "2149:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:30:10"
																	},
																	"nativeSrc": "2146:117:10",
																	"nodeType": "YulIf",
																	"src": "2146:117:10"
																},
																{
																	"nativeSrc": "2277:83:10",
																	"nodeType": "YulAssignment",
																	"src": "2277:83:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2332:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2332:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2343:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2343:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2328:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2328:3:10"
																				},
																				"nativeSrc": "2328:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2328:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2352:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "2295:32:10",
																			"nodeType": "YulIdentifier",
																			"src": "2295:32:10"
																		},
																		"nativeSrc": "2295:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:65:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2277:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2277:6:10"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "2285:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2285:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2380:298:10",
															"nodeType": "YulBlock",
															"src": "2380:298:10",
															"statements": [
																{
																	"nativeSrc": "2395:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2395:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2426:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2426:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2437:2:10",
																						"nodeType": "YulLiteral",
																						"src": "2437:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2422:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2422:3:10"
																				},
																				"nativeSrc": "2422:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2422:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2409:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "2409:12:10"
																		},
																		"nativeSrc": "2409:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2399:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2399:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2488:83:10",
																		"nodeType": "YulBlock",
																		"src": "2488:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2490:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "2490:77:10"
																					},
																					"nativeSrc": "2490:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2490:79:10"
																				},
																				"nativeSrc": "2490:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2490:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2460:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2460:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2468:18:10",
																				"nodeType": "YulLiteral",
																				"src": "2468:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2457:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2457:2:10"
																		},
																		"nativeSrc": "2457:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2457:30:10"
																	},
																	"nativeSrc": "2454:117:10",
																	"nodeType": "YulIf",
																	"src": "2454:117:10"
																},
																{
																	"nativeSrc": "2585:83:10",
																	"nodeType": "YulAssignment",
																	"src": "2585:83:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2640:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2640:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2651:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2651:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2636:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2636:3:10"
																				},
																				"nativeSrc": "2636:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2636:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2660:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2660:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "2603:32:10",
																			"nodeType": "YulIdentifier",
																			"src": "2603:32:10"
																		},
																		"nativeSrc": "2603:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2603:65:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2585:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2585:6:10"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "2593:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2593:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr",
												"nativeSrc": "1811:874:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1880:9:10",
														"nodeType": "YulTypedName",
														"src": "1880:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1891:7:10",
														"nodeType": "YulTypedName",
														"src": "1891:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1903:6:10",
														"nodeType": "YulTypedName",
														"src": "1903:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1911:6:10",
														"nodeType": "YulTypedName",
														"src": "1911:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1919:6:10",
														"nodeType": "YulTypedName",
														"src": "1919:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1927:6:10",
														"nodeType": "YulTypedName",
														"src": "1927:6:10",
														"type": ""
													}
												],
												"src": "1811:874:10"
											},
											{
												"body": {
													"nativeSrc": "2736:81:10",
													"nodeType": "YulBlock",
													"src": "2736:81:10",
													"statements": [
														{
															"nativeSrc": "2746:65:10",
															"nodeType": "YulAssignment",
															"src": "2746:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2761:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2761:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2768:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2768:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2757:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2757:3:10"
																},
																"nativeSrc": "2757:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2757:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2746:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2746:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2691:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:10",
														"nodeType": "YulTypedName",
														"src": "2718:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2728:7:10",
														"nodeType": "YulTypedName",
														"src": "2728:7:10",
														"type": ""
													}
												],
												"src": "2691:126:10"
											},
											{
												"body": {
													"nativeSrc": "2868:51:10",
													"nodeType": "YulBlock",
													"src": "2868:51:10",
													"statements": [
														{
															"nativeSrc": "2878:35:10",
															"nodeType": "YulAssignment",
															"src": "2878:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2907:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2907:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2889:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2889:17:10"
																},
																"nativeSrc": "2889:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2889:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2878:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2878:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2823:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2850:5:10",
														"nodeType": "YulTypedName",
														"src": "2850:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2860:7:10",
														"nodeType": "YulTypedName",
														"src": "2860:7:10",
														"type": ""
													}
												],
												"src": "2823:96:10"
											},
											{
												"body": {
													"nativeSrc": "2990:53:10",
													"nodeType": "YulBlock",
													"src": "2990:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3007:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3007:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3030:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3030:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3012:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3012:17:10"
																		},
																		"nativeSrc": "3012:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3012:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3000:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:10"
																},
																"nativeSrc": "3000:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3000:37:10"
															},
															"nativeSrc": "3000:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3000:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2925:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2978:5:10",
														"nodeType": "YulTypedName",
														"src": "2978:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2985:3:10",
														"nodeType": "YulTypedName",
														"src": "2985:3:10",
														"type": ""
													}
												],
												"src": "2925:118:10"
											},
											{
												"body": {
													"nativeSrc": "3147:124:10",
													"nodeType": "YulBlock",
													"src": "3147:124:10",
													"statements": [
														{
															"nativeSrc": "3157:26:10",
															"nodeType": "YulAssignment",
															"src": "3157:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3169:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3169:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3165:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3165:3:10"
																},
																"nativeSrc": "3165:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3165:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3157:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3157:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3237:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3250:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3250:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3261:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3261:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3246:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:10"
																		},
																		"nativeSrc": "3246:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3193:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3193:43:10"
																},
																"nativeSrc": "3193:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3193:71:10"
															},
															"nativeSrc": "3193:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3193:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3049:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3119:9:10",
														"nodeType": "YulTypedName",
														"src": "3119:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3131:6:10",
														"nodeType": "YulTypedName",
														"src": "3131:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3142:4:10",
														"nodeType": "YulTypedName",
														"src": "3142:4:10",
														"type": ""
													}
												],
												"src": "3049:222:10"
											},
											{
												"body": {
													"nativeSrc": "3322:32:10",
													"nodeType": "YulBlock",
													"src": "3322:32:10",
													"statements": [
														{
															"nativeSrc": "3332:16:10",
															"nodeType": "YulAssignment",
															"src": "3332:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3343:5:10",
																"nodeType": "YulIdentifier",
																"src": "3343:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3332:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3332:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3277:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3304:5:10",
														"nodeType": "YulTypedName",
														"src": "3304:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3314:7:10",
														"nodeType": "YulTypedName",
														"src": "3314:7:10",
														"type": ""
													}
												],
												"src": "3277:77:10"
											},
											{
												"body": {
													"nativeSrc": "3425:53:10",
													"nodeType": "YulBlock",
													"src": "3425:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3442:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3442:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3465:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3465:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3447:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3447:17:10"
																		},
																		"nativeSrc": "3447:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3435:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:10"
																},
																"nativeSrc": "3435:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3435:37:10"
															},
															"nativeSrc": "3435:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3435:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3360:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3413:5:10",
														"nodeType": "YulTypedName",
														"src": "3413:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3420:3:10",
														"nodeType": "YulTypedName",
														"src": "3420:3:10",
														"type": ""
													}
												],
												"src": "3360:118:10"
											},
											{
												"body": {
													"nativeSrc": "3582:124:10",
													"nodeType": "YulBlock",
													"src": "3582:124:10",
													"statements": [
														{
															"nativeSrc": "3592:26:10",
															"nodeType": "YulAssignment",
															"src": "3592:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3604:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3604:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3600:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3600:3:10"
																},
																"nativeSrc": "3600:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3600:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3592:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3592:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3672:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3672:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3685:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3685:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3696:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3696:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3681:3:10"
																		},
																		"nativeSrc": "3681:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3628:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3628:43:10"
																},
																"nativeSrc": "3628:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3628:71:10"
															},
															"nativeSrc": "3628:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3628:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3484:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3554:9:10",
														"nodeType": "YulTypedName",
														"src": "3554:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3566:6:10",
														"nodeType": "YulTypedName",
														"src": "3566:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3577:4:10",
														"nodeType": "YulTypedName",
														"src": "3577:4:10",
														"type": ""
													}
												],
												"src": "3484:222:10"
											},
											{
												"body": {
													"nativeSrc": "3755:79:10",
													"nodeType": "YulBlock",
													"src": "3755:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3812:16:10",
																"nodeType": "YulBlock",
																"src": "3812:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3821:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3824:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3824:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3814:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3814:6:10"
																			},
																			"nativeSrc": "3814:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3814:12:10"
																		},
																		"nativeSrc": "3814:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3814:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3778:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3778:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3803:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3803:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3785:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3785:17:10"
																				},
																				"nativeSrc": "3785:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3785:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3775:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3775:2:10"
																		},
																		"nativeSrc": "3775:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3768:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:10"
																},
																"nativeSrc": "3768:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3768:43:10"
															},
															"nativeSrc": "3765:63:10",
															"nodeType": "YulIf",
															"src": "3765:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3712:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3748:5:10",
														"nodeType": "YulTypedName",
														"src": "3748:5:10",
														"type": ""
													}
												],
												"src": "3712:122:10"
											},
											{
												"body": {
													"nativeSrc": "3892:87:10",
													"nodeType": "YulBlock",
													"src": "3892:87:10",
													"statements": [
														{
															"nativeSrc": "3902:29:10",
															"nodeType": "YulAssignment",
															"src": "3902:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3924:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3911:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3911:12:10"
																},
																"nativeSrc": "3911:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3911:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3902:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3902:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3967:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3967:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3940:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3940:26:10"
																},
																"nativeSrc": "3940:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3940:33:10"
															},
															"nativeSrc": "3940:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3940:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3840:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3870:6:10",
														"nodeType": "YulTypedName",
														"src": "3870:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3878:3:10",
														"nodeType": "YulTypedName",
														"src": "3878:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3886:5:10",
														"nodeType": "YulTypedName",
														"src": "3886:5:10",
														"type": ""
													}
												],
												"src": "3840:139:10"
											},
											{
												"body": {
													"nativeSrc": "4051:263:10",
													"nodeType": "YulBlock",
													"src": "4051:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4097:83:10",
																"nodeType": "YulBlock",
																"src": "4097:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4099:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4099:77:10"
																			},
																			"nativeSrc": "4099:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4099:79:10"
																		},
																		"nativeSrc": "4099:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4099:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4072:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4072:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4081:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4081:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4068:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:10"
																		},
																		"nativeSrc": "4068:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4093:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4093:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4064:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:10"
																},
																"nativeSrc": "4064:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4064:32:10"
															},
															"nativeSrc": "4061:119:10",
															"nodeType": "YulIf",
															"src": "4061:119:10"
														},
														{
															"nativeSrc": "4190:117:10",
															"nodeType": "YulBlock",
															"src": "4190:117:10",
															"statements": [
																{
																	"nativeSrc": "4205:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4205:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4219:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4219:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4209:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4209:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4234:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4234:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4269:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4269:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4280:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4280:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4265:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4265:3:10"
																				},
																				"nativeSrc": "4265:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4265:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4289:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4289:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4244:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4244:20:10"
																		},
																		"nativeSrc": "4244:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4244:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4234:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4234:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3985:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4021:9:10",
														"nodeType": "YulTypedName",
														"src": "4021:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4032:7:10",
														"nodeType": "YulTypedName",
														"src": "4032:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4044:6:10",
														"nodeType": "YulTypedName",
														"src": "4044:6:10",
														"type": ""
													}
												],
												"src": "3985:329:10"
											},
											{
												"body": {
													"nativeSrc": "4363:79:10",
													"nodeType": "YulBlock",
													"src": "4363:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:16:10",
																"nodeType": "YulBlock",
																"src": "4420:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4429:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4429:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4432:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4432:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4422:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4422:6:10"
																			},
																			"nativeSrc": "4422:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4422:12:10"
																		},
																		"nativeSrc": "4422:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4422:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4386:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4386:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4411:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4411:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4393:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4393:17:10"
																				},
																				"nativeSrc": "4393:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4393:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4383:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4383:2:10"
																		},
																		"nativeSrc": "4383:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4383:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4376:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:10"
																},
																"nativeSrc": "4376:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4376:43:10"
															},
															"nativeSrc": "4373:63:10",
															"nodeType": "YulIf",
															"src": "4373:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4320:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4356:5:10",
														"nodeType": "YulTypedName",
														"src": "4356:5:10",
														"type": ""
													}
												],
												"src": "4320:122:10"
											},
											{
												"body": {
													"nativeSrc": "4500:87:10",
													"nodeType": "YulBlock",
													"src": "4500:87:10",
													"statements": [
														{
															"nativeSrc": "4510:29:10",
															"nodeType": "YulAssignment",
															"src": "4510:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4532:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4532:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4519:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4519:12:10"
																},
																"nativeSrc": "4519:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4519:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4510:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4510:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4575:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4575:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4548:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4548:26:10"
																},
																"nativeSrc": "4548:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4548:33:10"
															},
															"nativeSrc": "4548:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4548:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4448:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4478:6:10",
														"nodeType": "YulTypedName",
														"src": "4478:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4486:3:10",
														"nodeType": "YulTypedName",
														"src": "4486:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4494:5:10",
														"nodeType": "YulTypedName",
														"src": "4494:5:10",
														"type": ""
													}
												],
												"src": "4448:139:10"
											},
											{
												"body": {
													"nativeSrc": "4693:519:10",
													"nodeType": "YulBlock",
													"src": "4693:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4739:83:10",
																"nodeType": "YulBlock",
																"src": "4739:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4741:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4741:77:10"
																			},
																			"nativeSrc": "4741:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4741:79:10"
																		},
																		"nativeSrc": "4741:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4741:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4714:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4714:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4723:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4723:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4710:3:10"
																		},
																		"nativeSrc": "4710:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4710:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4735:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4735:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4706:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4706:3:10"
																},
																"nativeSrc": "4706:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4706:32:10"
															},
															"nativeSrc": "4703:119:10",
															"nodeType": "YulIf",
															"src": "4703:119:10"
														},
														{
															"nativeSrc": "4832:117:10",
															"nodeType": "YulBlock",
															"src": "4832:117:10",
															"statements": [
																{
																	"nativeSrc": "4847:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4847:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4861:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4861:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4851:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4851:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4876:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4876:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4911:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4911:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4922:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4922:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4907:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4907:3:10"
																				},
																				"nativeSrc": "4907:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4907:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4931:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4931:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4886:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4886:20:10"
																		},
																		"nativeSrc": "4886:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4886:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4876:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4876:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4959:118:10",
															"nodeType": "YulBlock",
															"src": "4959:118:10",
															"statements": [
																{
																	"nativeSrc": "4974:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4974:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4988:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4978:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4978:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5004:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5004:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5039:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5039:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5050:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5050:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5035:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5035:3:10"
																				},
																				"nativeSrc": "5035:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5035:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5059:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5059:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5014:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5014:20:10"
																		},
																		"nativeSrc": "5014:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5014:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5004:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5004:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5087:118:10",
															"nodeType": "YulBlock",
															"src": "5087:118:10",
															"statements": [
																{
																	"nativeSrc": "5102:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5102:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5116:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5116:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5106:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5106:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5132:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5132:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5167:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5167:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5178:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5178:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5163:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5163:3:10"
																				},
																				"nativeSrc": "5163:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5163:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5187:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5187:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5142:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5142:20:10"
																		},
																		"nativeSrc": "5142:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5142:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5132:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5132:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_address",
												"nativeSrc": "4593:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4647:9:10",
														"nodeType": "YulTypedName",
														"src": "4647:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4658:7:10",
														"nodeType": "YulTypedName",
														"src": "4658:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4670:6:10",
														"nodeType": "YulTypedName",
														"src": "4670:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4678:6:10",
														"nodeType": "YulTypedName",
														"src": "4678:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4686:6:10",
														"nodeType": "YulTypedName",
														"src": "4686:6:10",
														"type": ""
													}
												],
												"src": "4593:619:10"
											},
											{
												"body": {
													"nativeSrc": "5284:263:10",
													"nodeType": "YulBlock",
													"src": "5284:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5330:83:10",
																"nodeType": "YulBlock",
																"src": "5330:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5332:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5332:77:10"
																			},
																			"nativeSrc": "5332:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5332:79:10"
																		},
																		"nativeSrc": "5332:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5332:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5305:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5305:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5314:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5314:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5301:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:10"
																		},
																		"nativeSrc": "5301:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5301:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5326:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5297:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5297:3:10"
																},
																"nativeSrc": "5297:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5297:32:10"
															},
															"nativeSrc": "5294:119:10",
															"nodeType": "YulIf",
															"src": "5294:119:10"
														},
														{
															"nativeSrc": "5423:117:10",
															"nodeType": "YulBlock",
															"src": "5423:117:10",
															"statements": [
																{
																	"nativeSrc": "5438:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5438:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5452:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5452:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5442:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5442:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5467:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5467:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5502:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5502:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5513:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5513:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5498:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5498:3:10"
																				},
																				"nativeSrc": "5498:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5498:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5522:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5522:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5477:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5477:20:10"
																		},
																		"nativeSrc": "5477:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5477:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5467:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5467:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5218:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5254:9:10",
														"nodeType": "YulTypedName",
														"src": "5254:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5265:7:10",
														"nodeType": "YulTypedName",
														"src": "5265:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5277:6:10",
														"nodeType": "YulTypedName",
														"src": "5277:6:10",
														"type": ""
													}
												],
												"src": "5218:329:10"
											},
											{
												"body": {
													"nativeSrc": "5679:206:10",
													"nodeType": "YulBlock",
													"src": "5679:206:10",
													"statements": [
														{
															"nativeSrc": "5689:26:10",
															"nodeType": "YulAssignment",
															"src": "5689:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5701:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5701:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5712:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5697:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5697:3:10"
																},
																"nativeSrc": "5697:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5697:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5689:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5689:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5769:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5769:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5782:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5793:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5793:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5778:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5778:3:10"
																		},
																		"nativeSrc": "5778:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5778:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5725:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5725:43:10"
																},
																"nativeSrc": "5725:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5725:71:10"
															},
															"nativeSrc": "5725:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5725:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5850:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5850:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5863:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5863:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5874:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5874:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5859:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:10"
																		},
																		"nativeSrc": "5859:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5859:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5806:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5806:43:10"
																},
																"nativeSrc": "5806:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5806:72:10"
															},
															"nativeSrc": "5806:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5806:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5553:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5643:9:10",
														"nodeType": "YulTypedName",
														"src": "5643:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5655:6:10",
														"nodeType": "YulTypedName",
														"src": "5655:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5663:6:10",
														"nodeType": "YulTypedName",
														"src": "5663:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5674:4:10",
														"nodeType": "YulTypedName",
														"src": "5674:4:10",
														"type": ""
													}
												],
												"src": "5553:332:10"
											},
											{
												"body": {
													"nativeSrc": "6005:34:10",
													"nodeType": "YulBlock",
													"src": "6005:34:10",
													"statements": [
														{
															"nativeSrc": "6015:18:10",
															"nodeType": "YulAssignment",
															"src": "6015:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "6030:3:10",
																"nodeType": "YulIdentifier",
																"src": "6030:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6015:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "6015:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5891:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5977:3:10",
														"nodeType": "YulTypedName",
														"src": "5977:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5982:6:10",
														"nodeType": "YulTypedName",
														"src": "5982:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5993:11:10",
														"nodeType": "YulTypedName",
														"src": "5993:11:10",
														"type": ""
													}
												],
												"src": "5891:148:10"
											},
											{
												"body": {
													"nativeSrc": "6109:82:10",
													"nodeType": "YulBlock",
													"src": "6109:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6132:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6132:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6137:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6137:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6142:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6142:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6119:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6119:12:10"
																},
																"nativeSrc": "6119:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6119:30:10"
															},
															"nativeSrc": "6119:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6119:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6169:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6169:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6174:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6174:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6165:3:10"
																		},
																		"nativeSrc": "6165:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6165:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6183:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6183:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6158:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6158:6:10"
																},
																"nativeSrc": "6158:27:10",
																"nodeType": "YulFunctionCall",
																"src": "6158:27:10"
															},
															"nativeSrc": "6158:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "6158:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6045:146:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6091:3:10",
														"nodeType": "YulTypedName",
														"src": "6091:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6096:3:10",
														"nodeType": "YulTypedName",
														"src": "6096:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6101:6:10",
														"nodeType": "YulTypedName",
														"src": "6101:6:10",
														"type": ""
													}
												],
												"src": "6045:146:10"
											},
											{
												"body": {
													"nativeSrc": "6341:210:10",
													"nodeType": "YulBlock",
													"src": "6341:210:10",
													"statements": [
														{
															"nativeSrc": "6351:96:10",
															"nodeType": "YulAssignment",
															"src": "6351:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6435:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6435:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6440:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6358:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "6358:76:10"
																},
																"nativeSrc": "6358:89:10",
																"nodeType": "YulFunctionCall",
																"src": "6358:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6494:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6494:5:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6501:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6501:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6506:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6506:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6457:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "6457:36:10"
																},
																"nativeSrc": "6457:56:10",
																"nodeType": "YulFunctionCall",
																"src": "6457:56:10"
															},
															"nativeSrc": "6457:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "6457:56:10"
														},
														{
															"nativeSrc": "6522:23:10",
															"nodeType": "YulAssignment",
															"src": "6522:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6533:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6533:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6538:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6538:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6529:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:10"
																},
																"nativeSrc": "6529:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6529:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6522:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6221:330:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6314:5:10",
														"nodeType": "YulTypedName",
														"src": "6314:5:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6321:6:10",
														"nodeType": "YulTypedName",
														"src": "6321:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6329:3:10",
														"nodeType": "YulTypedName",
														"src": "6329:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6337:3:10",
														"nodeType": "YulTypedName",
														"src": "6337:3:10",
														"type": ""
													}
												],
												"src": "6221:330:10"
											},
											{
												"body": {
													"nativeSrc": "6703:149:10",
													"nodeType": "YulBlock",
													"src": "6703:149:10",
													"statements": [
														{
															"nativeSrc": "6714:112:10",
															"nodeType": "YulAssignment",
															"src": "6714:112:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6805:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6813:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6822:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6822:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6721:83:10",
																	"nodeType": "YulIdentifier",
																	"src": "6721:83:10"
																},
																"nativeSrc": "6721:105:10",
																"nodeType": "YulFunctionCall",
																"src": "6721:105:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6714:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6714:3:10"
																}
															]
														},
														{
															"nativeSrc": "6836:10:10",
															"nodeType": "YulAssignment",
															"src": "6836:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "6843:3:10",
																"nodeType": "YulIdentifier",
																"src": "6843:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6836:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6557:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6674:3:10",
														"nodeType": "YulTypedName",
														"src": "6674:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6680:6:10",
														"nodeType": "YulTypedName",
														"src": "6680:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6688:6:10",
														"nodeType": "YulTypedName",
														"src": "6688:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6699:3:10",
														"nodeType": "YulTypedName",
														"src": "6699:3:10",
														"type": ""
													}
												],
												"src": "6557:295:10"
											},
											{
												"body": {
													"nativeSrc": "6954:73:10",
													"nodeType": "YulBlock",
													"src": "6954:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6971:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6971:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6976:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6976:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6964:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6964:6:10"
																},
																"nativeSrc": "6964:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6964:19:10"
															},
															"nativeSrc": "6964:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "6964:19:10"
														},
														{
															"nativeSrc": "6992:29:10",
															"nodeType": "YulAssignment",
															"src": "6992:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7011:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7011:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7016:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7016:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7007:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7007:3:10"
																},
																"nativeSrc": "7007:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7007:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6992:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "6992:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6858:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6926:3:10",
														"nodeType": "YulTypedName",
														"src": "6926:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6931:6:10",
														"nodeType": "YulTypedName",
														"src": "6931:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6942:11:10",
														"nodeType": "YulTypedName",
														"src": "6942:11:10",
														"type": ""
													}
												],
												"src": "6858:169:10"
											},
											{
												"body": {
													"nativeSrc": "7081:54:10",
													"nodeType": "YulBlock",
													"src": "7081:54:10",
													"statements": [
														{
															"nativeSrc": "7091:38:10",
															"nodeType": "YulAssignment",
															"src": "7091:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7109:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7109:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7116:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7116:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7105:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7105:3:10"
																		},
																		"nativeSrc": "7105:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7125:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7125:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7121:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7121:3:10"
																		},
																		"nativeSrc": "7121:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7121:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7101:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:10"
																},
																"nativeSrc": "7101:28:10",
																"nodeType": "YulFunctionCall",
																"src": "7101:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7091:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7091:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "7033:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7064:5:10",
														"nodeType": "YulTypedName",
														"src": "7064:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7074:6:10",
														"nodeType": "YulTypedName",
														"src": "7074:6:10",
														"type": ""
													}
												],
												"src": "7033:102:10"
											},
											{
												"body": {
													"nativeSrc": "7267:215:10",
													"nodeType": "YulBlock",
													"src": "7267:215:10",
													"statements": [
														{
															"nativeSrc": "7277:78:10",
															"nodeType": "YulAssignment",
															"src": "7277:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7343:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7343:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7348:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7348:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7284:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7284:58:10"
																},
																"nativeSrc": "7284:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7284:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7277:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7402:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7402:5:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7409:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7409:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7414:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7414:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7365:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "7365:36:10"
																},
																"nativeSrc": "7365:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7365:56:10"
															},
															"nativeSrc": "7365:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "7365:56:10"
														},
														{
															"nativeSrc": "7430:46:10",
															"nodeType": "YulAssignment",
															"src": "7430:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7441:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7441:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7468:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7468:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7446:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "7446:21:10"
																		},
																		"nativeSrc": "7446:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7437:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7437:3:10"
																},
																"nativeSrc": "7437:39:10",
																"nodeType": "YulFunctionCall",
																"src": "7437:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7430:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7430:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7165:317:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7240:5:10",
														"nodeType": "YulTypedName",
														"src": "7240:5:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7247:6:10",
														"nodeType": "YulTypedName",
														"src": "7247:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7255:3:10",
														"nodeType": "YulTypedName",
														"src": "7255:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7263:3:10",
														"nodeType": "YulTypedName",
														"src": "7263:3:10",
														"type": ""
													}
												],
												"src": "7165:317:10"
											},
											{
												"body": {
													"nativeSrc": "7616:205:10",
													"nodeType": "YulBlock",
													"src": "7616:205:10",
													"statements": [
														{
															"nativeSrc": "7626:26:10",
															"nodeType": "YulAssignment",
															"src": "7626:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7638:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7638:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7649:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7649:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7634:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7634:3:10"
																},
																"nativeSrc": "7634:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7634:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7626:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7626:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7673:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7673:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7684:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7684:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7669:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7669:3:10"
																		},
																		"nativeSrc": "7669:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7692:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7692:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7698:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7688:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7688:3:10"
																		},
																		"nativeSrc": "7688:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7688:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7662:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7662:6:10"
																},
																"nativeSrc": "7662:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7662:47:10"
															},
															"nativeSrc": "7662:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7662:47:10"
														},
														{
															"nativeSrc": "7718:96:10",
															"nodeType": "YulAssignment",
															"src": "7718:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7792:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7792:6:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7800:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7800:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7809:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7809:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7726:65:10",
																	"nodeType": "YulIdentifier",
																	"src": "7726:65:10"
																},
																"nativeSrc": "7726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7726:88:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7718:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7718:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7488:333:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7580:9:10",
														"nodeType": "YulTypedName",
														"src": "7580:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7592:6:10",
														"nodeType": "YulTypedName",
														"src": "7592:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7600:6:10",
														"nodeType": "YulTypedName",
														"src": "7600:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7611:4:10",
														"nodeType": "YulTypedName",
														"src": "7611:4:10",
														"type": ""
													}
												],
												"src": "7488:333:10"
											},
											{
												"body": {
													"nativeSrc": "7886:40:10",
													"nodeType": "YulBlock",
													"src": "7886:40:10",
													"statements": [
														{
															"nativeSrc": "7897:22:10",
															"nodeType": "YulAssignment",
															"src": "7897:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7913:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7913:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7907:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7907:5:10"
																},
																"nativeSrc": "7907:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7907:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7897:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7827:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7869:5:10",
														"nodeType": "YulTypedName",
														"src": "7869:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7879:6:10",
														"nodeType": "YulTypedName",
														"src": "7879:6:10",
														"type": ""
													}
												],
												"src": "7827:99:10"
											},
											{
												"body": {
													"nativeSrc": "7994:184:10",
													"nodeType": "YulBlock",
													"src": "7994:184:10",
													"statements": [
														{
															"nativeSrc": "8004:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8004:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8013:1:10",
																"nodeType": "YulLiteral",
																"src": "8013:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8008:1:10",
																	"nodeType": "YulTypedName",
																	"src": "8008:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8073:63:10",
																"nodeType": "YulBlock",
																"src": "8073:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "8098:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8098:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "8103:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "8103:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8094:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8094:3:10"
																					},
																					"nativeSrc": "8094:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8094:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "8117:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8117:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "8122:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "8122:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8113:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8113:3:10"
																							},
																							"nativeSrc": "8113:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8113:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "8107:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "8107:5:10"
																					},
																					"nativeSrc": "8107:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8107:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8087:6:10"
																			},
																			"nativeSrc": "8087:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8087:39:10"
																		},
																		"nativeSrc": "8087:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8087:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8034:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8034:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8037:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8037:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8031:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8031:2:10"
																},
																"nativeSrc": "8031:13:10",
																"nodeType": "YulFunctionCall",
																"src": "8031:13:10"
															},
															"nativeSrc": "8023:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8045:19:10",
																"nodeType": "YulBlock",
																"src": "8045:19:10",
																"statements": [
																	{
																		"nativeSrc": "8047:15:10",
																		"nodeType": "YulAssignment",
																		"src": "8047:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8056:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "8056:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8059:2:10",
																					"nodeType": "YulLiteral",
																					"src": "8059:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8052:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8052:3:10"
																			},
																			"nativeSrc": "8052:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8052:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8047:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8047:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8027:3:10",
																"nodeType": "YulBlock",
																"src": "8027:3:10",
																"statements": []
															},
															"src": "8023:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8156:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8156:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8161:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8161:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8152:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8152:3:10"
																		},
																		"nativeSrc": "8152:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8152:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8170:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8170:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8145:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8145:6:10"
																},
																"nativeSrc": "8145:27:10",
																"nodeType": "YulFunctionCall",
																"src": "8145:27:10"
															},
															"nativeSrc": "8145:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "8145:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7932:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7976:3:10",
														"nodeType": "YulTypedName",
														"src": "7976:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7981:3:10",
														"nodeType": "YulTypedName",
														"src": "7981:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7986:6:10",
														"nodeType": "YulTypedName",
														"src": "7986:6:10",
														"type": ""
													}
												],
												"src": "7932:246:10"
											},
											{
												"body": {
													"nativeSrc": "8294:280:10",
													"nodeType": "YulBlock",
													"src": "8294:280:10",
													"statements": [
														{
															"nativeSrc": "8304:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8304:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8351:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8351:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8318:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "8318:32:10"
																},
																"nativeSrc": "8318:39:10",
																"nodeType": "YulFunctionCall",
																"src": "8318:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8308:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8308:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8366:96:10",
															"nodeType": "YulAssignment",
															"src": "8366:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8450:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8450:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8455:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8455:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8373:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "8373:76:10"
																},
																"nativeSrc": "8373:89:10",
																"nodeType": "YulFunctionCall",
																"src": "8373:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8366:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8366:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8510:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8510:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8517:4:10",
																				"nodeType": "YulLiteral",
																				"src": "8517:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8506:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8506:3:10"
																		},
																		"nativeSrc": "8506:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8506:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8524:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8524:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8529:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8529:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8471:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "8471:34:10"
																},
																"nativeSrc": "8471:65:10",
																"nodeType": "YulFunctionCall",
																"src": "8471:65:10"
															},
															"nativeSrc": "8471:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "8471:65:10"
														},
														{
															"nativeSrc": "8545:23:10",
															"nodeType": "YulAssignment",
															"src": "8545:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8556:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8552:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8552:3:10"
																},
																"nativeSrc": "8552:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8552:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8545:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8545:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8184:390:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8275:5:10",
														"nodeType": "YulTypedName",
														"src": "8275:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8282:3:10",
														"nodeType": "YulTypedName",
														"src": "8282:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8290:3:10",
														"nodeType": "YulTypedName",
														"src": "8290:3:10",
														"type": ""
													}
												],
												"src": "8184:390:10"
											},
											{
												"body": {
													"nativeSrc": "8716:139:10",
													"nodeType": "YulBlock",
													"src": "8716:139:10",
													"statements": [
														{
															"nativeSrc": "8727:102:10",
															"nodeType": "YulAssignment",
															"src": "8727:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8816:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8816:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8825:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8825:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8734:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "8734:81:10"
																},
																"nativeSrc": "8734:95:10",
																"nodeType": "YulFunctionCall",
																"src": "8734:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8727:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8727:3:10"
																}
															]
														},
														{
															"nativeSrc": "8839:10:10",
															"nodeType": "YulAssignment",
															"src": "8839:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "8846:3:10",
																"nodeType": "YulIdentifier",
																"src": "8846:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8839:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8839:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8580:275:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8695:3:10",
														"nodeType": "YulTypedName",
														"src": "8695:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8701:6:10",
														"nodeType": "YulTypedName",
														"src": "8701:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8712:3:10",
														"nodeType": "YulTypedName",
														"src": "8712:3:10",
														"type": ""
													}
												],
												"src": "8580:275:10"
											},
											{
												"body": {
													"nativeSrc": "8889:152:10",
													"nodeType": "YulBlock",
													"src": "8889:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8906:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8906:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8909:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8909:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8899:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8899:6:10"
																},
																"nativeSrc": "8899:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8899:88:10"
															},
															"nativeSrc": "8899:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8899:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9003:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9003:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9006:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9006:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8996:6:10"
																},
																"nativeSrc": "8996:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8996:15:10"
															},
															"nativeSrc": "8996:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8996:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9027:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9027:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9030:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9030:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9020:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:10"
																},
																"nativeSrc": "9020:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9020:15:10"
															},
															"nativeSrc": "9020:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9020:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8861:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8861:180:10"
											},
											{
												"body": {
													"nativeSrc": "9091:147:10",
													"nodeType": "YulBlock",
													"src": "9091:147:10",
													"statements": [
														{
															"nativeSrc": "9101:25:10",
															"nodeType": "YulAssignment",
															"src": "9101:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9124:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9124:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9106:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9106:17:10"
																},
																"nativeSrc": "9106:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9106:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9101:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9101:1:10"
																}
															]
														},
														{
															"nativeSrc": "9135:25:10",
															"nodeType": "YulAssignment",
															"src": "9135:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9158:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9158:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9140:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9140:17:10"
																},
																"nativeSrc": "9140:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9140:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9135:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9135:1:10"
																}
															]
														},
														{
															"nativeSrc": "9169:16:10",
															"nodeType": "YulAssignment",
															"src": "9169:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9180:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9180:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9183:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9183:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9176:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9176:3:10"
																},
																"nativeSrc": "9176:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9176:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9169:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9169:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9209:22:10",
																"nodeType": "YulBlock",
																"src": "9209:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9211:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9211:16:10"
																			},
																			"nativeSrc": "9211:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9211:18:10"
																		},
																		"nativeSrc": "9211:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9211:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9201:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9201:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9204:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9204:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9198:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9198:2:10"
																},
																"nativeSrc": "9198:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9198:10:10"
															},
															"nativeSrc": "9195:36:10",
															"nodeType": "YulIf",
															"src": "9195:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9047:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9078:1:10",
														"nodeType": "YulTypedName",
														"src": "9078:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9081:1:10",
														"nodeType": "YulTypedName",
														"src": "9081:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9087:3:10",
														"nodeType": "YulTypedName",
														"src": "9087:3:10",
														"type": ""
													}
												],
												"src": "9047:191:10"
											},
											{
												"body": {
													"nativeSrc": "9336:285:10",
													"nodeType": "YulBlock",
													"src": "9336:285:10",
													"statements": [
														{
															"nativeSrc": "9346:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9346:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9393:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9393:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9360:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "9360:32:10"
																},
																"nativeSrc": "9360:39:10",
																"nodeType": "YulFunctionCall",
																"src": "9360:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9350:6:10",
																	"nodeType": "YulTypedName",
																	"src": "9350:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9408:78:10",
															"nodeType": "YulAssignment",
															"src": "9408:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9474:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9474:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9479:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9479:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9415:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9415:58:10"
																},
																"nativeSrc": "9415:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9415:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9408:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9534:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9534:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9541:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9541:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9530:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9530:3:10"
																		},
																		"nativeSrc": "9530:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9530:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9548:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9548:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9553:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9495:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "9495:34:10"
																},
																"nativeSrc": "9495:65:10",
																"nodeType": "YulFunctionCall",
																"src": "9495:65:10"
															},
															"nativeSrc": "9495:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "9495:65:10"
														},
														{
															"nativeSrc": "9569:46:10",
															"nodeType": "YulAssignment",
															"src": "9569:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9580:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9580:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9607:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9607:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9585:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "9585:21:10"
																		},
																		"nativeSrc": "9585:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9585:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9576:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9576:3:10"
																},
																"nativeSrc": "9576:39:10",
																"nodeType": "YulFunctionCall",
																"src": "9576:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9569:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9569:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9244:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9317:5:10",
														"nodeType": "YulTypedName",
														"src": "9317:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9324:3:10",
														"nodeType": "YulTypedName",
														"src": "9324:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9332:3:10",
														"nodeType": "YulTypedName",
														"src": "9332:3:10",
														"type": ""
													}
												],
												"src": "9244:377:10"
											},
											{
												"body": {
													"nativeSrc": "9745:195:10",
													"nodeType": "YulBlock",
													"src": "9745:195:10",
													"statements": [
														{
															"nativeSrc": "9755:26:10",
															"nodeType": "YulAssignment",
															"src": "9755:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9767:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9767:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9778:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9778:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9763:3:10"
																},
																"nativeSrc": "9763:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9763:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9755:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9755:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9802:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9802:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9813:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9813:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9798:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9798:3:10"
																		},
																		"nativeSrc": "9798:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9798:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9821:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9821:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9827:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9827:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9817:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9817:3:10"
																		},
																		"nativeSrc": "9817:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9817:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9791:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9791:6:10"
																},
																"nativeSrc": "9791:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9791:47:10"
															},
															"nativeSrc": "9791:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9791:47:10"
														},
														{
															"nativeSrc": "9847:86:10",
															"nodeType": "YulAssignment",
															"src": "9847:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9919:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9919:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9928:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9928:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9855:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "9855:63:10"
																},
																"nativeSrc": "9855:78:10",
																"nodeType": "YulFunctionCall",
																"src": "9855:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9847:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9847:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9627:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9717:9:10",
														"nodeType": "YulTypedName",
														"src": "9717:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9729:6:10",
														"nodeType": "YulTypedName",
														"src": "9729:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9740:4:10",
														"nodeType": "YulTypedName",
														"src": "9740:4:10",
														"type": ""
													}
												],
												"src": "9627:313:10"
											},
											{
												"body": {
													"nativeSrc": "9994:362:10",
													"nodeType": "YulBlock",
													"src": "9994:362:10",
													"statements": [
														{
															"nativeSrc": "10004:25:10",
															"nodeType": "YulAssignment",
															"src": "10004:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10027:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10027:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10009:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10009:17:10"
																},
																"nativeSrc": "10009:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10009:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10004:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10004:1:10"
																}
															]
														},
														{
															"nativeSrc": "10038:25:10",
															"nodeType": "YulAssignment",
															"src": "10038:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10061:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10061:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10043:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10043:17:10"
																},
																"nativeSrc": "10043:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10043:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10038:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10038:1:10"
																}
															]
														},
														{
															"nativeSrc": "10072:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10072:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10095:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10095:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10098:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10098:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10091:3:10"
																},
																"nativeSrc": "10091:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10091:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10076:11:10",
																	"nodeType": "YulTypedName",
																	"src": "10076:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10109:41:10",
															"nodeType": "YulAssignment",
															"src": "10109:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10138:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "10138:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10120:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10120:17:10"
																},
																"nativeSrc": "10120:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10120:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10109:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "10109:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10327:22:10",
																"nodeType": "YulBlock",
																"src": "10327:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10329:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10329:16:10"
																			},
																			"nativeSrc": "10329:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10329:18:10"
																		},
																		"nativeSrc": "10329:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10329:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10260:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10260:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10253:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10253:6:10"
																				},
																				"nativeSrc": "10253:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10253:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10283:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10283:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10290:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "10290:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10299:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "10299:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10286:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10286:3:10"
																						},
																						"nativeSrc": "10286:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10286:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10280:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10280:2:10"
																				},
																				"nativeSrc": "10280:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10280:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10233:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10233:2:10"
																		},
																		"nativeSrc": "10233:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10233:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10213:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10213:6:10"
																},
																"nativeSrc": "10213:113:10",
																"nodeType": "YulFunctionCall",
																"src": "10213:113:10"
															},
															"nativeSrc": "10210:139:10",
															"nodeType": "YulIf",
															"src": "10210:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9946:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9977:1:10",
														"nodeType": "YulTypedName",
														"src": "9977:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9980:1:10",
														"nodeType": "YulTypedName",
														"src": "9980:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9986:7:10",
														"nodeType": "YulTypedName",
														"src": "9986:7:10",
														"type": ""
													}
												],
												"src": "9946:410:10"
											},
											{
												"body": {
													"nativeSrc": "10390:152:10",
													"nodeType": "YulBlock",
													"src": "10390:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10407:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10407:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10410:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10410:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10400:6:10"
																},
																"nativeSrc": "10400:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10400:88:10"
															},
															"nativeSrc": "10400:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10400:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10504:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10504:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10507:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10507:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10497:6:10"
																},
																"nativeSrc": "10497:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10497:15:10"
															},
															"nativeSrc": "10497:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10497:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10528:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10528:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10531:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10531:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10521:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10521:6:10"
																},
																"nativeSrc": "10521:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10521:15:10"
															},
															"nativeSrc": "10521:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10521:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10362:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10362:180:10"
											},
											{
												"body": {
													"nativeSrc": "10590:143:10",
													"nodeType": "YulBlock",
													"src": "10590:143:10",
													"statements": [
														{
															"nativeSrc": "10600:25:10",
															"nodeType": "YulAssignment",
															"src": "10600:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10623:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10623:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10605:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10605:17:10"
																},
																"nativeSrc": "10605:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10605:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10600:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10600:1:10"
																}
															]
														},
														{
															"nativeSrc": "10634:25:10",
															"nodeType": "YulAssignment",
															"src": "10634:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10657:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10657:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10639:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10639:17:10"
																},
																"nativeSrc": "10639:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10639:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10634:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10634:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10681:22:10",
																"nodeType": "YulBlock",
																"src": "10681:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10683:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10683:16:10"
																			},
																			"nativeSrc": "10683:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10683:18:10"
																		},
																		"nativeSrc": "10683:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10683:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10678:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10678:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10671:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10671:6:10"
																},
																"nativeSrc": "10671:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10671:9:10"
															},
															"nativeSrc": "10668:35:10",
															"nodeType": "YulIf",
															"src": "10668:35:10"
														},
														{
															"nativeSrc": "10713:14:10",
															"nodeType": "YulAssignment",
															"src": "10713:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10722:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10722:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10725:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10725:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10718:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10718:3:10"
																},
																"nativeSrc": "10718:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10718:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10713:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10713:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10548:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10579:1:10",
														"nodeType": "YulTypedName",
														"src": "10579:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10582:1:10",
														"nodeType": "YulTypedName",
														"src": "10582:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10588:1:10",
														"nodeType": "YulTypedName",
														"src": "10588:1:10",
														"type": ""
													}
												],
												"src": "10548:185:10"
											},
											{
												"body": {
													"nativeSrc": "10852:34:10",
													"nodeType": "YulBlock",
													"src": "10852:34:10",
													"statements": [
														{
															"nativeSrc": "10862:18:10",
															"nodeType": "YulAssignment",
															"src": "10862:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "10877:3:10",
																"nodeType": "YulIdentifier",
																"src": "10877:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10862:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "10862:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10739:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10824:3:10",
														"nodeType": "YulTypedName",
														"src": "10824:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10829:6:10",
														"nodeType": "YulTypedName",
														"src": "10829:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10840:11:10",
														"nodeType": "YulTypedName",
														"src": "10840:11:10",
														"type": ""
													}
												],
												"src": "10739:147:10"
											},
											{
												"body": {
													"nativeSrc": "10998:8:10",
													"nodeType": "YulBlock",
													"src": "10998:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "10892:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10990:6:10",
														"nodeType": "YulTypedName",
														"src": "10990:6:10",
														"type": ""
													}
												],
												"src": "10892:114:10"
											},
											{
												"body": {
													"nativeSrc": "11175:235:10",
													"nodeType": "YulBlock",
													"src": "11175:235:10",
													"statements": [
														{
															"nativeSrc": "11185:90:10",
															"nodeType": "YulAssignment",
															"src": "11185:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11268:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11268:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11273:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11273:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11192:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "11192:75:10"
																},
																"nativeSrc": "11192:83:10",
																"nodeType": "YulFunctionCall",
																"src": "11192:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11185:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11185:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11373:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11373:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "11284:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11284:88:10"
																},
																"nativeSrc": "11284:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11284:93:10"
															},
															"nativeSrc": "11284:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11284:93:10"
														},
														{
															"nativeSrc": "11386:18:10",
															"nodeType": "YulAssignment",
															"src": "11386:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11397:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11402:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11402:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11393:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11393:3:10"
																},
																"nativeSrc": "11393:11:10",
																"nodeType": "YulFunctionCall",
																"src": "11393:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11386:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11386:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11012:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11163:3:10",
														"nodeType": "YulTypedName",
														"src": "11163:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11171:3:10",
														"nodeType": "YulTypedName",
														"src": "11171:3:10",
														"type": ""
													}
												],
												"src": "11012:398:10"
											},
											{
												"body": {
													"nativeSrc": "11604:191:10",
													"nodeType": "YulBlock",
													"src": "11604:191:10",
													"statements": [
														{
															"nativeSrc": "11615:154:10",
															"nodeType": "YulAssignment",
															"src": "11615:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11765:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11765:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11622:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "11622:141:10"
																},
																"nativeSrc": "11622:147:10",
																"nodeType": "YulFunctionCall",
																"src": "11622:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11615:3:10"
																}
															]
														},
														{
															"nativeSrc": "11779:10:10",
															"nodeType": "YulAssignment",
															"src": "11779:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "11786:3:10",
																"nodeType": "YulIdentifier",
																"src": "11786:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11779:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11779:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11416:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11591:3:10",
														"nodeType": "YulTypedName",
														"src": "11591:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11600:3:10",
														"nodeType": "YulTypedName",
														"src": "11600:3:10",
														"type": ""
													}
												],
												"src": "11416:379:10"
											},
											{
												"body": {
													"nativeSrc": "11859:40:10",
													"nodeType": "YulBlock",
													"src": "11859:40:10",
													"statements": [
														{
															"nativeSrc": "11870:22:10",
															"nodeType": "YulAssignment",
															"src": "11870:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11886:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11886:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11880:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11880:5:10"
																},
																"nativeSrc": "11880:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11880:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11870:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11870:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11801:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11842:5:10",
														"nodeType": "YulTypedName",
														"src": "11842:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11852:6:10",
														"nodeType": "YulTypedName",
														"src": "11852:6:10",
														"type": ""
													}
												],
												"src": "11801:98:10"
											},
											{
												"body": {
													"nativeSrc": "12000:73:10",
													"nodeType": "YulBlock",
													"src": "12000:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12017:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12017:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12022:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12022:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12010:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12010:6:10"
																},
																"nativeSrc": "12010:19:10",
																"nodeType": "YulFunctionCall",
																"src": "12010:19:10"
															},
															"nativeSrc": "12010:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "12010:19:10"
														},
														{
															"nativeSrc": "12038:29:10",
															"nodeType": "YulAssignment",
															"src": "12038:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12057:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12057:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12062:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12062:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12053:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12053:3:10"
																},
																"nativeSrc": "12053:14:10",
																"nodeType": "YulFunctionCall",
																"src": "12053:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12038:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "12038:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "11905:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11972:3:10",
														"nodeType": "YulTypedName",
														"src": "11972:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11977:6:10",
														"nodeType": "YulTypedName",
														"src": "11977:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11988:11:10",
														"nodeType": "YulTypedName",
														"src": "11988:11:10",
														"type": ""
													}
												],
												"src": "11905:168:10"
											},
											{
												"body": {
													"nativeSrc": "12169:283:10",
													"nodeType": "YulBlock",
													"src": "12169:283:10",
													"statements": [
														{
															"nativeSrc": "12179:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12179:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12225:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12225:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12193:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "12193:31:10"
																},
																"nativeSrc": "12193:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12193:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12183:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12183:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12240:77:10",
															"nodeType": "YulAssignment",
															"src": "12240:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12305:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12305:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12310:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12310:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "12247:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "12247:57:10"
																},
																"nativeSrc": "12247:70:10",
																"nodeType": "YulFunctionCall",
																"src": "12247:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12240:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12240:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12365:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12365:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12372:4:10",
																				"nodeType": "YulLiteral",
																				"src": "12372:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12361:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12361:3:10"
																		},
																		"nativeSrc": "12361:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12361:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12379:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12379:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12384:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12384:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12326:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "12326:34:10"
																},
																"nativeSrc": "12326:65:10",
																"nodeType": "YulFunctionCall",
																"src": "12326:65:10"
															},
															"nativeSrc": "12326:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "12326:65:10"
														},
														{
															"nativeSrc": "12400:46:10",
															"nodeType": "YulAssignment",
															"src": "12400:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12411:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12438:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12438:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "12416:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "12416:21:10"
																		},
																		"nativeSrc": "12416:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12416:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12407:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12407:3:10"
																},
																"nativeSrc": "12407:39:10",
																"nodeType": "YulFunctionCall",
																"src": "12407:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12400:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12079:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12150:5:10",
														"nodeType": "YulTypedName",
														"src": "12150:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12157:3:10",
														"nodeType": "YulTypedName",
														"src": "12157:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12165:3:10",
														"nodeType": "YulTypedName",
														"src": "12165:3:10",
														"type": ""
													}
												],
												"src": "12079:373:10"
											},
											{
												"body": {
													"nativeSrc": "12602:275:10",
													"nodeType": "YulBlock",
													"src": "12602:275:10",
													"statements": [
														{
															"nativeSrc": "12612:26:10",
															"nodeType": "YulAssignment",
															"src": "12612:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12624:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12624:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12635:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12635:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12620:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12620:3:10"
																},
																"nativeSrc": "12620:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12620:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12612:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12612:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12692:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12692:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12705:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12705:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12716:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12716:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12701:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12701:3:10"
																		},
																		"nativeSrc": "12701:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12701:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12648:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12648:43:10"
																},
																"nativeSrc": "12648:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12648:71:10"
															},
															"nativeSrc": "12648:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12648:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12740:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12740:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12736:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12736:3:10"
																		},
																		"nativeSrc": "12736:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12736:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12760:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12760:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12766:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12766:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12756:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12756:3:10"
																		},
																		"nativeSrc": "12756:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12756:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12729:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12729:6:10"
																},
																"nativeSrc": "12729:48:10",
																"nodeType": "YulFunctionCall",
																"src": "12729:48:10"
															},
															"nativeSrc": "12729:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "12729:48:10"
														},
														{
															"nativeSrc": "12786:84:10",
															"nodeType": "YulAssignment",
															"src": "12786:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12856:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12856:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12865:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12865:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "12794:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "12794:61:10"
																},
																"nativeSrc": "12794:76:10",
																"nodeType": "YulFunctionCall",
																"src": "12794:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12786:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12786:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12458:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12566:9:10",
														"nodeType": "YulTypedName",
														"src": "12566:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12578:6:10",
														"nodeType": "YulTypedName",
														"src": "12578:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12586:6:10",
														"nodeType": "YulTypedName",
														"src": "12586:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12597:4:10",
														"nodeType": "YulTypedName",
														"src": "12597:4:10",
														"type": ""
													}
												],
												"src": "12458:419:10"
											},
											{
												"body": {
													"nativeSrc": "12928:149:10",
													"nodeType": "YulBlock",
													"src": "12928:149:10",
													"statements": [
														{
															"nativeSrc": "12938:25:10",
															"nodeType": "YulAssignment",
															"src": "12938:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12961:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12961:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12943:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12943:17:10"
																},
																"nativeSrc": "12943:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12943:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12938:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12938:1:10"
																}
															]
														},
														{
															"nativeSrc": "12972:25:10",
															"nodeType": "YulAssignment",
															"src": "12972:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12995:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12995:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12977:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12977:17:10"
																},
																"nativeSrc": "12977:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12977:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12972:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12972:1:10"
																}
															]
														},
														{
															"nativeSrc": "13006:17:10",
															"nodeType": "YulAssignment",
															"src": "13006:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13018:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13018:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13021:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13021:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13014:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13014:3:10"
																},
																"nativeSrc": "13014:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13014:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13006:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13006:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13048:22:10",
																"nodeType": "YulBlock",
																"src": "13048:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13050:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13050:16:10"
																			},
																			"nativeSrc": "13050:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13050:18:10"
																		},
																		"nativeSrc": "13050:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13050:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13039:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13039:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13045:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13045:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13036:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13036:2:10"
																},
																"nativeSrc": "13036:11:10",
																"nodeType": "YulFunctionCall",
																"src": "13036:11:10"
															},
															"nativeSrc": "13033:37:10",
															"nodeType": "YulIf",
															"src": "13033:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12883:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12914:1:10",
														"nodeType": "YulTypedName",
														"src": "12914:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12917:1:10",
														"nodeType": "YulTypedName",
														"src": "12917:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12923:4:10",
														"nodeType": "YulTypedName",
														"src": "12923:4:10",
														"type": ""
													}
												],
												"src": "12883:194:10"
											},
											{
												"body": {
													"nativeSrc": "13209:206:10",
													"nodeType": "YulBlock",
													"src": "13209:206:10",
													"statements": [
														{
															"nativeSrc": "13219:26:10",
															"nodeType": "YulAssignment",
															"src": "13219:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13231:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13231:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13242:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13242:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13227:3:10"
																},
																"nativeSrc": "13227:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13227:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13219:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13219:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13308:3:10"
																		},
																		"nativeSrc": "13308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13255:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13255:43:10"
																},
																"nativeSrc": "13255:71:10",
																"nodeType": "YulFunctionCall",
																"src": "13255:71:10"
															},
															"nativeSrc": "13255:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "13255:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13380:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13380:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13393:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13393:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13404:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13404:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13389:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13389:3:10"
																		},
																		"nativeSrc": "13389:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13389:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13336:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13336:43:10"
																},
																"nativeSrc": "13336:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13336:72:10"
															},
															"nativeSrc": "13336:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13336:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13083:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13173:9:10",
														"nodeType": "YulTypedName",
														"src": "13173:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13185:6:10",
														"nodeType": "YulTypedName",
														"src": "13185:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13193:6:10",
														"nodeType": "YulTypedName",
														"src": "13193:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13204:4:10",
														"nodeType": "YulTypedName",
														"src": "13204:4:10",
														"type": ""
													}
												],
												"src": "13083:332:10"
											},
											{
												"body": {
													"nativeSrc": "13463:48:10",
													"nodeType": "YulBlock",
													"src": "13463:48:10",
													"statements": [
														{
															"nativeSrc": "13473:32:10",
															"nodeType": "YulAssignment",
															"src": "13473:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13498:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13498:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "13491:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13491:6:10"
																		},
																		"nativeSrc": "13491:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13491:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13484:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13484:6:10"
																},
																"nativeSrc": "13484:21:10",
																"nodeType": "YulFunctionCall",
																"src": "13484:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13473:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "13473:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "13421:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13445:5:10",
														"nodeType": "YulTypedName",
														"src": "13445:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13455:7:10",
														"nodeType": "YulTypedName",
														"src": "13455:7:10",
														"type": ""
													}
												],
												"src": "13421:90:10"
											},
											{
												"body": {
													"nativeSrc": "13557:76:10",
													"nodeType": "YulBlock",
													"src": "13557:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13611:16:10",
																"nodeType": "YulBlock",
																"src": "13611:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13620:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13620:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13623:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13623:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13613:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:10"
																			},
																			"nativeSrc": "13613:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13613:12:10"
																		},
																		"nativeSrc": "13613:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13613:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13580:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13580:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13602:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13602:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13587:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "13587:14:10"
																				},
																				"nativeSrc": "13587:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13587:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13577:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13577:2:10"
																		},
																		"nativeSrc": "13577:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13577:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13570:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13570:6:10"
																},
																"nativeSrc": "13570:40:10",
																"nodeType": "YulFunctionCall",
																"src": "13570:40:10"
															},
															"nativeSrc": "13567:60:10",
															"nodeType": "YulIf",
															"src": "13567:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13517:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13550:5:10",
														"nodeType": "YulTypedName",
														"src": "13550:5:10",
														"type": ""
													}
												],
												"src": "13517:116:10"
											},
											{
												"body": {
													"nativeSrc": "13699:77:10",
													"nodeType": "YulBlock",
													"src": "13699:77:10",
													"statements": [
														{
															"nativeSrc": "13709:22:10",
															"nodeType": "YulAssignment",
															"src": "13709:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13724:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13724:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13718:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13718:5:10"
																},
																"nativeSrc": "13718:13:10",
																"nodeType": "YulFunctionCall",
																"src": "13718:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13709:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13709:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13764:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13764:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13740:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "13740:23:10"
																},
																"nativeSrc": "13740:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13740:30:10"
															},
															"nativeSrc": "13740:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "13740:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13639:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13677:6:10",
														"nodeType": "YulTypedName",
														"src": "13677:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13685:3:10",
														"nodeType": "YulTypedName",
														"src": "13685:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13693:5:10",
														"nodeType": "YulTypedName",
														"src": "13693:5:10",
														"type": ""
													}
												],
												"src": "13639:137:10"
											},
											{
												"body": {
													"nativeSrc": "13856:271:10",
													"nodeType": "YulBlock",
													"src": "13856:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13902:83:10",
																"nodeType": "YulBlock",
																"src": "13902:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13904:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "13904:77:10"
																			},
																			"nativeSrc": "13904:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13904:79:10"
																		},
																		"nativeSrc": "13904:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13904:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13877:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13877:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13886:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13886:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13873:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13873:3:10"
																		},
																		"nativeSrc": "13873:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13873:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13898:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13898:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13869:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13869:3:10"
																},
																"nativeSrc": "13869:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13869:32:10"
															},
															"nativeSrc": "13866:119:10",
															"nodeType": "YulIf",
															"src": "13866:119:10"
														},
														{
															"nativeSrc": "13995:125:10",
															"nodeType": "YulBlock",
															"src": "13995:125:10",
															"statements": [
																{
																	"nativeSrc": "14010:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14010:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14024:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14024:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14014:6:10",
																			"nodeType": "YulTypedName",
																			"src": "14014:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14039:71:10",
																	"nodeType": "YulAssignment",
																	"src": "14039:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14082:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14082:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14093:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14093:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14078:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14078:3:10"
																				},
																				"nativeSrc": "14078:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14078:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14102:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14102:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14049:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "14049:28:10"
																		},
																		"nativeSrc": "14049:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14049:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14039:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "14039:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13782:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13826:9:10",
														"nodeType": "YulTypedName",
														"src": "13826:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13837:7:10",
														"nodeType": "YulTypedName",
														"src": "13837:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13849:6:10",
														"nodeType": "YulTypedName",
														"src": "13849:6:10",
														"type": ""
													}
												],
												"src": "13782:345:10"
											},
											{
												"body": {
													"nativeSrc": "14186:32:10",
													"nodeType": "YulBlock",
													"src": "14186:32:10",
													"statements": [
														{
															"nativeSrc": "14196:16:10",
															"nodeType": "YulAssignment",
															"src": "14196:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "14207:5:10",
																"nodeType": "YulIdentifier",
																"src": "14207:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14196:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14196:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "14133:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14168:5:10",
														"nodeType": "YulTypedName",
														"src": "14168:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14178:7:10",
														"nodeType": "YulTypedName",
														"src": "14178:7:10",
														"type": ""
													}
												],
												"src": "14133:85:10"
											},
											{
												"body": {
													"nativeSrc": "14268:57:10",
													"nodeType": "YulBlock",
													"src": "14268:57:10",
													"statements": [
														{
															"nativeSrc": "14278:41:10",
															"nodeType": "YulAssignment",
															"src": "14278:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14293:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14293:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14300:18:10",
																		"nodeType": "YulLiteral",
																		"src": "14300:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14289:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14289:3:10"
																},
																"nativeSrc": "14289:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14289:30:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14278:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14278:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "14224:101:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14250:5:10",
														"nodeType": "YulTypedName",
														"src": "14250:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14260:7:10",
														"nodeType": "YulTypedName",
														"src": "14260:7:10",
														"type": ""
													}
												],
												"src": "14224:101:10"
											},
											{
												"body": {
													"nativeSrc": "14363:28:10",
													"nodeType": "YulBlock",
													"src": "14363:28:10",
													"statements": [
														{
															"nativeSrc": "14373:12:10",
															"nodeType": "YulAssignment",
															"src": "14373:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "14380:5:10",
																"nodeType": "YulIdentifier",
																"src": "14380:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14373:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14373:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14331:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14349:5:10",
														"nodeType": "YulTypedName",
														"src": "14349:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14359:3:10",
														"nodeType": "YulTypedName",
														"src": "14359:3:10",
														"type": ""
													}
												],
												"src": "14331:60:10"
											},
											{
												"body": {
													"nativeSrc": "14464:89:10",
													"nodeType": "YulBlock",
													"src": "14464:89:10",
													"statements": [
														{
															"nativeSrc": "14474:73:10",
															"nodeType": "YulAssignment",
															"src": "14474:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14539:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "14539:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "14513:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "14513:25:10"
																				},
																				"nativeSrc": "14513:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14513:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14504:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "14504:8:10"
																		},
																		"nativeSrc": "14504:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14504:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "14487:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "14487:16:10"
																},
																"nativeSrc": "14487:60:10",
																"nodeType": "YulFunctionCall",
																"src": "14487:60:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14474:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "14474:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "14397:156:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14444:5:10",
														"nodeType": "YulTypedName",
														"src": "14444:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14454:9:10",
														"nodeType": "YulTypedName",
														"src": "14454:9:10",
														"type": ""
													}
												],
												"src": "14397:156:10"
											},
											{
												"body": {
													"nativeSrc": "14631:73:10",
													"nodeType": "YulBlock",
													"src": "14631:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14648:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14648:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14691:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14691:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "14653:37:10",
																			"nodeType": "YulIdentifier",
																			"src": "14653:37:10"
																		},
																		"nativeSrc": "14653:44:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14653:44:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14641:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14641:6:10"
																},
																"nativeSrc": "14641:57:10",
																"nodeType": "YulFunctionCall",
																"src": "14641:57:10"
															},
															"nativeSrc": "14641:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "14641:57:10"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "14559:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14619:5:10",
														"nodeType": "YulTypedName",
														"src": "14619:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14626:3:10",
														"nodeType": "YulTypedName",
														"src": "14626:3:10",
														"type": ""
													}
												],
												"src": "14559:145:10"
											},
											{
												"body": {
													"nativeSrc": "14815:131:10",
													"nodeType": "YulBlock",
													"src": "14815:131:10",
													"statements": [
														{
															"nativeSrc": "14825:26:10",
															"nodeType": "YulAssignment",
															"src": "14825:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14837:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14837:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14848:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14833:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:10"
																},
																"nativeSrc": "14833:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14833:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14825:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14912:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14912:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14925:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14925:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14936:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14936:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14921:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14921:3:10"
																		},
																		"nativeSrc": "14921:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14921:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "14861:50:10",
																	"nodeType": "YulIdentifier",
																	"src": "14861:50:10"
																},
																"nativeSrc": "14861:78:10",
																"nodeType": "YulFunctionCall",
																"src": "14861:78:10"
															},
															"nativeSrc": "14861:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "14861:78:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14710:236:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14787:9:10",
														"nodeType": "YulTypedName",
														"src": "14787:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14799:6:10",
														"nodeType": "YulTypedName",
														"src": "14799:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14810:4:10",
														"nodeType": "YulTypedName",
														"src": "14810:4:10",
														"type": ""
													}
												],
												"src": "14710:236:10"
											},
											{
												"body": {
													"nativeSrc": "14996:61:10",
													"nodeType": "YulBlock",
													"src": "14996:61:10",
													"statements": [
														{
															"nativeSrc": "15006:45:10",
															"nodeType": "YulAssignment",
															"src": "15006:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15021:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15021:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15028:22:10",
																		"nodeType": "YulLiteral",
																		"src": "15028:22:10",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15017:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15017:3:10"
																},
																"nativeSrc": "15017:34:10",
																"nodeType": "YulFunctionCall",
																"src": "15017:34:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15006:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "15006:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "14952:105:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14978:5:10",
														"nodeType": "YulTypedName",
														"src": "14978:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14988:7:10",
														"nodeType": "YulTypedName",
														"src": "14988:7:10",
														"type": ""
													}
												],
												"src": "14952:105:10"
											},
											{
												"body": {
													"nativeSrc": "15105:78:10",
													"nodeType": "YulBlock",
													"src": "15105:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "15161:16:10",
																"nodeType": "YulBlock",
																"src": "15161:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15170:1:10",
																					"nodeType": "YulLiteral",
																					"src": "15170:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15173:1:10",
																					"nodeType": "YulLiteral",
																					"src": "15173:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15163:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15163:6:10"
																			},
																			"nativeSrc": "15163:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15163:12:10"
																		},
																		"nativeSrc": "15163:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15163:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "15128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15152:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "15152:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "15135:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "15135:16:10"
																				},
																				"nativeSrc": "15135:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15135:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "15125:2:10"
																		},
																		"nativeSrc": "15125:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15125:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15118:6:10"
																},
																"nativeSrc": "15118:42:10",
																"nodeType": "YulFunctionCall",
																"src": "15118:42:10"
															},
															"nativeSrc": "15115:62:10",
															"nodeType": "YulIf",
															"src": "15115:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "15063:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15098:5:10",
														"nodeType": "YulTypedName",
														"src": "15098:5:10",
														"type": ""
													}
												],
												"src": "15063:120:10"
											},
											{
												"body": {
													"nativeSrc": "15251:79:10",
													"nodeType": "YulBlock",
													"src": "15251:79:10",
													"statements": [
														{
															"nativeSrc": "15261:22:10",
															"nodeType": "YulAssignment",
															"src": "15261:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15276:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15276:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15270:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15270:5:10"
																},
																"nativeSrc": "15270:13:10",
																"nodeType": "YulFunctionCall",
																"src": "15270:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15261:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15261:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15318:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15318:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "15292:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "15292:25:10"
																},
																"nativeSrc": "15292:32:10",
																"nodeType": "YulFunctionCall",
																"src": "15292:32:10"
															},
															"nativeSrc": "15292:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "15292:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "15189:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15229:6:10",
														"nodeType": "YulTypedName",
														"src": "15229:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15237:3:10",
														"nodeType": "YulTypedName",
														"src": "15237:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15245:5:10",
														"nodeType": "YulTypedName",
														"src": "15245:5:10",
														"type": ""
													}
												],
												"src": "15189:141:10"
											},
											{
												"body": {
													"nativeSrc": "15380:32:10",
													"nodeType": "YulBlock",
													"src": "15380:32:10",
													"statements": [
														{
															"nativeSrc": "15390:16:10",
															"nodeType": "YulAssignment",
															"src": "15390:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "15401:5:10",
																"nodeType": "YulIdentifier",
																"src": "15401:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15390:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "15390:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "15336:76:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15362:5:10",
														"nodeType": "YulTypedName",
														"src": "15362:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15372:7:10",
														"nodeType": "YulTypedName",
														"src": "15372:7:10",
														"type": ""
													}
												],
												"src": "15336:76:10"
											},
											{
												"body": {
													"nativeSrc": "15460:78:10",
													"nodeType": "YulBlock",
													"src": "15460:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "15516:16:10",
																"nodeType": "YulBlock",
																"src": "15516:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15525:1:10",
																					"nodeType": "YulLiteral",
																					"src": "15525:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15528:1:10",
																					"nodeType": "YulLiteral",
																					"src": "15528:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15518:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15518:6:10"
																			},
																			"nativeSrc": "15518:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15518:12:10"
																		},
																		"nativeSrc": "15518:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15518:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "15483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15507:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "15507:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "15490:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "15490:16:10"
																				},
																				"nativeSrc": "15490:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15490:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "15480:2:10"
																		},
																		"nativeSrc": "15480:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15480:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15473:6:10"
																},
																"nativeSrc": "15473:42:10",
																"nodeType": "YulFunctionCall",
																"src": "15473:42:10"
															},
															"nativeSrc": "15470:62:10",
															"nodeType": "YulIf",
															"src": "15470:62:10"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "15418:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15453:5:10",
														"nodeType": "YulTypedName",
														"src": "15453:5:10",
														"type": ""
													}
												],
												"src": "15418:120:10"
											},
											{
												"body": {
													"nativeSrc": "15606:79:10",
													"nodeType": "YulBlock",
													"src": "15606:79:10",
													"statements": [
														{
															"nativeSrc": "15616:22:10",
															"nodeType": "YulAssignment",
															"src": "15616:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15631:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15631:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15625:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15625:5:10"
																},
																"nativeSrc": "15625:13:10",
																"nodeType": "YulFunctionCall",
																"src": "15625:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15616:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15616:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15673:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15673:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "15647:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "15647:25:10"
																},
																"nativeSrc": "15647:32:10",
																"nodeType": "YulFunctionCall",
																"src": "15647:32:10"
															},
															"nativeSrc": "15647:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "15647:32:10"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "15544:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15584:6:10",
														"nodeType": "YulTypedName",
														"src": "15584:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15592:3:10",
														"nodeType": "YulTypedName",
														"src": "15592:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15600:5:10",
														"nodeType": "YulTypedName",
														"src": "15600:5:10",
														"type": ""
													}
												],
												"src": "15544:141:10"
											},
											{
												"body": {
													"nativeSrc": "15754:80:10",
													"nodeType": "YulBlock",
													"src": "15754:80:10",
													"statements": [
														{
															"nativeSrc": "15764:22:10",
															"nodeType": "YulAssignment",
															"src": "15764:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15779:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15779:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15773:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15773:5:10"
																},
																"nativeSrc": "15773:13:10",
																"nodeType": "YulFunctionCall",
																"src": "15773:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15764:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15764:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15822:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15822:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15795:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "15795:26:10"
																},
																"nativeSrc": "15795:33:10",
																"nodeType": "YulFunctionCall",
																"src": "15795:33:10"
															},
															"nativeSrc": "15795:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "15795:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "15691:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15732:6:10",
														"nodeType": "YulTypedName",
														"src": "15732:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15740:3:10",
														"nodeType": "YulTypedName",
														"src": "15740:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15748:5:10",
														"nodeType": "YulTypedName",
														"src": "15748:5:10",
														"type": ""
													}
												],
												"src": "15691:143:10"
											},
											{
												"body": {
													"nativeSrc": "15982:829:10",
													"nodeType": "YulBlock",
													"src": "15982:829:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "16029:83:10",
																"nodeType": "YulBlock",
																"src": "16029:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16031:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "16031:77:10"
																			},
																			"nativeSrc": "16031:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16031:79:10"
																		},
																		"nativeSrc": "16031:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16031:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16003:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "16003:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16012:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16012:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15999:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15999:3:10"
																		},
																		"nativeSrc": "15999:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15999:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16024:3:10",
																		"nodeType": "YulLiteral",
																		"src": "16024:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15995:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15995:3:10"
																},
																"nativeSrc": "15995:33:10",
																"nodeType": "YulFunctionCall",
																"src": "15995:33:10"
															},
															"nativeSrc": "15992:120:10",
															"nodeType": "YulIf",
															"src": "15992:120:10"
														},
														{
															"nativeSrc": "16122:127:10",
															"nodeType": "YulBlock",
															"src": "16122:127:10",
															"statements": [
																{
																	"nativeSrc": "16137:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16137:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16151:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16151:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16141:6:10",
																			"nodeType": "YulTypedName",
																			"src": "16141:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16166:73:10",
																	"nodeType": "YulAssignment",
																	"src": "16166:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16211:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "16211:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16222:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "16222:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16207:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "16207:3:10"
																				},
																				"nativeSrc": "16207:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16207:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16231:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "16231:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "16176:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "16176:30:10"
																		},
																		"nativeSrc": "16176:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16176:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16166:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "16166:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16259:128:10",
															"nodeType": "YulBlock",
															"src": "16259:128:10",
															"statements": [
																{
																	"nativeSrc": "16274:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16274:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16288:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16288:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16278:6:10",
																			"nodeType": "YulTypedName",
																			"src": "16278:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16304:73:10",
																	"nodeType": "YulAssignment",
																	"src": "16304:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16349:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "16349:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16360:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "16360:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16345:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "16345:3:10"
																				},
																				"nativeSrc": "16345:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16345:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16369:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "16369:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "16314:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "16314:30:10"
																		},
																		"nativeSrc": "16314:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16314:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16304:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "16304:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16397:129:10",
															"nodeType": "YulBlock",
															"src": "16397:129:10",
															"statements": [
																{
																	"nativeSrc": "16412:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16412:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16426:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16426:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16416:6:10",
																			"nodeType": "YulTypedName",
																			"src": "16416:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16442:74:10",
																	"nodeType": "YulAssignment",
																	"src": "16442:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16488:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "16488:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16499:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "16499:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16484:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "16484:3:10"
																				},
																				"nativeSrc": "16484:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16484:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16508:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "16508:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16452:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "16452:31:10"
																		},
																		"nativeSrc": "16452:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16452:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16442:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "16442:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16536:129:10",
															"nodeType": "YulBlock",
															"src": "16536:129:10",
															"statements": [
																{
																	"nativeSrc": "16551:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16551:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16565:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16565:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16555:6:10",
																			"nodeType": "YulTypedName",
																			"src": "16555:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16581:74:10",
																	"nodeType": "YulAssignment",
																	"src": "16581:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16627:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "16627:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16638:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "16638:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16623:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "16623:3:10"
																				},
																				"nativeSrc": "16623:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16623:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16647:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "16647:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16591:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "16591:31:10"
																		},
																		"nativeSrc": "16591:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16591:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16581:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "16581:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16675:129:10",
															"nodeType": "YulBlock",
															"src": "16675:129:10",
															"statements": [
																{
																	"nativeSrc": "16690:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16690:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16704:3:10",
																		"nodeType": "YulLiteral",
																		"src": "16704:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16694:6:10",
																			"nodeType": "YulTypedName",
																			"src": "16694:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16721:73:10",
																	"nodeType": "YulAssignment",
																	"src": "16721:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16766:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "16766:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16777:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "16777:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16762:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "16762:3:10"
																				},
																				"nativeSrc": "16762:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16762:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16786:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "16786:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "16731:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "16731:30:10"
																		},
																		"nativeSrc": "16731:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16731:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16721:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "16721:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "15840:971:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15920:9:10",
														"nodeType": "YulTypedName",
														"src": "15920:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15931:7:10",
														"nodeType": "YulTypedName",
														"src": "15931:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15943:6:10",
														"nodeType": "YulTypedName",
														"src": "15943:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15951:6:10",
														"nodeType": "YulTypedName",
														"src": "15951:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15959:6:10",
														"nodeType": "YulTypedName",
														"src": "15959:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15967:6:10",
														"nodeType": "YulTypedName",
														"src": "15967:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15975:6:10",
														"nodeType": "YulTypedName",
														"src": "15975:6:10",
														"type": ""
													}
												],
												"src": "15840:971:10"
											},
											{
												"body": {
													"nativeSrc": "16943:206:10",
													"nodeType": "YulBlock",
													"src": "16943:206:10",
													"statements": [
														{
															"nativeSrc": "16953:26:10",
															"nodeType": "YulAssignment",
															"src": "16953:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16965:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16965:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16976:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16976:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16961:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16961:3:10"
																},
																"nativeSrc": "16961:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16961:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16953:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16953:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17033:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17033:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17046:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17046:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17057:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17057:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17042:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17042:3:10"
																		},
																		"nativeSrc": "17042:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17042:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16989:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "16989:43:10"
																},
																"nativeSrc": "16989:71:10",
																"nodeType": "YulFunctionCall",
																"src": "16989:71:10"
															},
															"nativeSrc": "16989:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "16989:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17114:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17114:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17127:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17127:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17138:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17138:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17123:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17123:3:10"
																		},
																		"nativeSrc": "17123:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17123:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17070:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17070:43:10"
																},
																"nativeSrc": "17070:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17070:72:10"
															},
															"nativeSrc": "17070:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17070:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "16817:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16907:9:10",
														"nodeType": "YulTypedName",
														"src": "16907:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16919:6:10",
														"nodeType": "YulTypedName",
														"src": "16919:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16927:6:10",
														"nodeType": "YulTypedName",
														"src": "16927:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16938:4:10",
														"nodeType": "YulTypedName",
														"src": "16938:4:10",
														"type": ""
													}
												],
												"src": "16817:332:10"
											},
											{
												"body": {
													"nativeSrc": "17232:274:10",
													"nodeType": "YulBlock",
													"src": "17232:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "17278:83:10",
																"nodeType": "YulBlock",
																"src": "17278:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17280:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "17280:77:10"
																			},
																			"nativeSrc": "17280:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17280:79:10"
																		},
																		"nativeSrc": "17280:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17280:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17253:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17253:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17262:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17262:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17249:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17249:3:10"
																		},
																		"nativeSrc": "17249:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17249:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17274:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17274:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17245:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17245:3:10"
																},
																"nativeSrc": "17245:32:10",
																"nodeType": "YulFunctionCall",
																"src": "17245:32:10"
															},
															"nativeSrc": "17242:119:10",
															"nodeType": "YulIf",
															"src": "17242:119:10"
														},
														{
															"nativeSrc": "17371:128:10",
															"nodeType": "YulBlock",
															"src": "17371:128:10",
															"statements": [
																{
																	"nativeSrc": "17386:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17386:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17400:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17400:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17390:6:10",
																			"nodeType": "YulTypedName",
																			"src": "17390:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17415:74:10",
																	"nodeType": "YulAssignment",
																	"src": "17415:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17461:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "17461:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17472:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "17472:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17457:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "17457:3:10"
																				},
																				"nativeSrc": "17457:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17457:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17481:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17481:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17425:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "17425:31:10"
																		},
																		"nativeSrc": "17425:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17425:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17415:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "17415:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "17155:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17202:9:10",
														"nodeType": "YulTypedName",
														"src": "17202:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17213:7:10",
														"nodeType": "YulTypedName",
														"src": "17213:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17225:6:10",
														"nodeType": "YulTypedName",
														"src": "17225:6:10",
														"type": ""
													}
												],
												"src": "17155:351:10"
											},
											{
												"body": {
													"nativeSrc": "17666:288:10",
													"nodeType": "YulBlock",
													"src": "17666:288:10",
													"statements": [
														{
															"nativeSrc": "17676:26:10",
															"nodeType": "YulAssignment",
															"src": "17676:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17688:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17688:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17699:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17699:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17684:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17684:3:10"
																},
																"nativeSrc": "17684:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17684:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17676:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17676:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17756:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17756:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17769:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17769:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17780:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17780:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17765:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17765:3:10"
																		},
																		"nativeSrc": "17765:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17765:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17712:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17712:43:10"
																},
																"nativeSrc": "17712:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17712:71:10"
															},
															"nativeSrc": "17712:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17712:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17837:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17837:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17850:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17850:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17861:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17861:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17846:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17846:3:10"
																		},
																		"nativeSrc": "17846:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17846:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17793:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17793:43:10"
																},
																"nativeSrc": "17793:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17793:72:10"
															},
															"nativeSrc": "17793:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17793:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17919:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17919:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17932:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17932:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17943:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17943:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17928:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17928:3:10"
																		},
																		"nativeSrc": "17928:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17928:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17875:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17875:43:10"
																},
																"nativeSrc": "17875:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17875:72:10"
															},
															"nativeSrc": "17875:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17875:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17512:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17622:9:10",
														"nodeType": "YulTypedName",
														"src": "17622:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17634:6:10",
														"nodeType": "YulTypedName",
														"src": "17634:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17642:6:10",
														"nodeType": "YulTypedName",
														"src": "17642:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17650:6:10",
														"nodeType": "YulTypedName",
														"src": "17650:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17661:4:10",
														"nodeType": "YulTypedName",
														"src": "17661:4:10",
														"type": ""
													}
												],
												"src": "17512:442:10"
											},
											{
												"body": {
													"nativeSrc": "18212:383:10",
													"nodeType": "YulBlock",
													"src": "18212:383:10",
													"statements": [
														{
															"nativeSrc": "18223:112:10",
															"nodeType": "YulAssignment",
															"src": "18223:112:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18314:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18314:6:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "18322:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18322:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18331:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18331:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18230:83:10",
																	"nodeType": "YulIdentifier",
																	"src": "18230:83:10"
																},
																"nativeSrc": "18230:105:10",
																"nodeType": "YulFunctionCall",
																"src": "18230:105:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18223:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18223:3:10"
																}
															]
														},
														{
															"nativeSrc": "18345:102:10",
															"nodeType": "YulAssignment",
															"src": "18345:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18434:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18434:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18443:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18443:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18352:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "18352:81:10"
																},
																"nativeSrc": "18352:95:10",
																"nodeType": "YulFunctionCall",
																"src": "18352:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18345:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18345:3:10"
																}
															]
														},
														{
															"nativeSrc": "18457:112:10",
															"nodeType": "YulAssignment",
															"src": "18457:112:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18548:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18548:6:10"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "18556:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18556:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18565:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18565:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18464:83:10",
																	"nodeType": "YulIdentifier",
																	"src": "18464:83:10"
																},
																"nativeSrc": "18464:105:10",
																"nodeType": "YulFunctionCall",
																"src": "18464:105:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18457:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18457:3:10"
																}
															]
														},
														{
															"nativeSrc": "18579:10:10",
															"nodeType": "YulAssignment",
															"src": "18579:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "18586:3:10",
																"nodeType": "YulIdentifier",
																"src": "18586:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18579:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_calldata_ptr_t_string_memory_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17960:635:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18159:3:10",
														"nodeType": "YulTypedName",
														"src": "18159:3:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18165:6:10",
														"nodeType": "YulTypedName",
														"src": "18165:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18173:6:10",
														"nodeType": "YulTypedName",
														"src": "18173:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18181:6:10",
														"nodeType": "YulTypedName",
														"src": "18181:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18189:6:10",
														"nodeType": "YulTypedName",
														"src": "18189:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18197:6:10",
														"nodeType": "YulTypedName",
														"src": "18197:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18208:3:10",
														"nodeType": "YulTypedName",
														"src": "18208:3:10",
														"type": ""
													}
												],
												"src": "17960:635:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_packed_t_string_calldata_ptr_t_string_memory_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value4, value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3, value4,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fd575f3560e01c806382702ff411610094578063b4988fd011610063578063b4988fd01461028f578063f2fde38b146102b7578063fbd43caa146102df578063fc8b2653146102fb578063fee84d4e14610325576100fd565b806382702ff4146102115780638da5cb5b14610227578063a0ef91df14610251578063a2b40d1914610267576100fd565b806337ee4b47116100d057806337ee4b471461019f578063559aae74146101bb57806359e41286146101d1578063715018a6146101fb576100fd565b80631b0e17a314610101578063225068c21461011d57806325970115146101395780632dd398b514610175575b5f80fd5b61011b60048036038101906101169190611e8f565b61033b565b005b61013760048036038101906101329190611eda565b6104f9565b005b348015610144575f80fd5b5061015f600480360381019061015a9190611e8f565b6106fc565b60405161016c9190611f97565b60405180910390f35b348015610180575f80fd5b5061018961074e565b6040516101969190611fc8565b60405180910390f35b6101b960048036038101906101b49190611eda565b610790565b005b3480156101c6575f80fd5b506101cf61096f565b005b3480156101dc575f80fd5b506101e5610c21565b6040516101f29190611fc8565b60405180910390f35b348015610206575f80fd5b5061020f610c32565b005b34801561021c575f80fd5b50610225610c45565b005b348015610232575f80fd5b5061023b610e5d565b6040516102489190611f97565b60405180910390f35b34801561025c575f80fd5b50610265610e92565b005b348015610272575f80fd5b5061028d6004803603810190610288919061200b565b610fff565b005b34801561029a575f80fd5b506102b560048036038101906102b09190612060565b6110a2565b005b3480156102c2575f80fd5b506102dd60048036038101906102d891906120b0565b6112b3565b005b6102f960048036038101906102f49190611e8f565b611337565b005b348015610306575f80fd5b5061030f611519565b60405161031c9190611fc8565b60405180910390f35b348015610330575f80fd5b506103396115ee565b005b5f61034461074e565b905080341461038c5734816040517fbe7b9d4d0000000000000000000000000000000000000000000000000000000081526004016103839291906120db565b60405180910390fd5b82825f73ffffffffffffffffffffffffffffffffffffffff166103ad611741565b60010183836040516103c092919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461043b576040517fc5e8402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33610444611741565b600101868660405161045792919061213e565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a1286866040516104ea9291906121a2565b60405180910390a25050505050565b5f610502611768565b90505f61050d611741565b5f015490508082146105585781816040517f035a0e0000000000000000000000000000000000000000000000000000000000815260040161054f9291906120db565b60405180910390fd5b5f61056587878787611809565b90505f610570611768565b905061057b8161198b565b33610584611741565b600101836040516105959190612226565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806105e9611a2d565b5f015f8282546105f99190612269565b9250508190555080610609611a2d565b6001015f610615611741565b6001018b8b60405161062892919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461069d9190612269565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12836040516106ea91906122d4565b60405180910390a25050505050505050565b5f610705611741565b600101838360405161071892919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b5f610757611519565b670de0b6b3a7640000606461076a611741565b5f015461077791906122f4565b61078191906122f4565b61078b9190612362565b905090565b5f61079961074e565b90508034146107e15734816040517fbe7b9d4d0000000000000000000000000000000000000000000000000000000081526004016107d89291906120db565b60405180910390fd5b5f6107ee86868686611809565b9050336107f9611741565b6001018260405161080a9190612226565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503461085e611a54565b5f015f82825461086e9190612269565b925050819055503461087e611a54565b6001015f61088a611741565b600101898960405161089d92919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109129190612269565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a128260405161095f91906122d4565b60405180910390a2505050505050565b5f610978611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036109f957336040517fdc69dc160000000000000000000000000000000000000000000000000000000081526004016109f09190611f97565b60405180910390fd5b5f803373ffffffffffffffffffffffffffffffffffffffff16610a1a611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610a65906123bf565b5f6040518083038185875af1925050503d805f8114610a9f576040519150601f19603f3d011682016040523d82523d5f602084013e610aa4565b606091505b509150915081610aed5733816040517f7824688c000000000000000000000000000000000000000000000000000000008152600401610ae4929190612425565b60405180910390fd5b610af5611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b3c611a54565b5f015f828254610b4c9190612453565b925050819055505f610b5c611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6533610bc8611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610c15929190612486565b60405180910390a15050565b5f610c2a611741565b5f0154905090565b610c3a611a7b565b610c435f611b02565b565b5f610c4e611a2d565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610ccf57336040517fdc69dc16000000000000000000000000000000000000000000000000000000008152600401610cc69190611f97565b60405180910390fd5b5f610cd8611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d75929190612486565b6020604051808303815f875af1158015610d91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db591906124e2565b5080610dbf611a54565b5f015f828254610dcf9190612453565b925050819055505f610ddf611a54565b6001015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b653382604051610e52929190612486565b60405180910390a150565b5f80610e67611bd3565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610e9a611a7b565b5f610ea3611a54565b5f015447610eb19190612453565b90505f8103610efe57610ec2610e5d565b6040517fdc69dc16000000000000000000000000000000000000000000000000000000008152600401610ef59190611f97565b60405180910390fd5b5f80610f08610e5d565b73ffffffffffffffffffffffffffffffffffffffff1683604051610f2b906123bf565b5f6040518083038185875af1925050503d805f8114610f65576040519150601f19603f3d011682016040523d82523d5f602084013e610f6a565b606091505b509150915081610fba57610f7c610e5d565b816040517f7824688c000000000000000000000000000000000000000000000000000000008152600401610fb1929190612425565b60405180910390fd5b7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65610fe3610e5d565b84604051610ff2929190612486565b60405180910390a1505050565b611007611a7b565b805f81036110585780611018611741565b5f01546040517fd090dd0600000000000000000000000000000000000000000000000000000000815260040161104f9291906120db565b60405180910390fd5b81611061611741565b5f01819055507fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d622826040516110969190611fc8565b60405180910390a15050565b5f6110ab611bfa565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156110f35750825b90505f60018367ffffffffffffffff1614801561112657505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611134575080155b1561116b576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156111b8576001855f0160086101000a81548160ff0219169083151502179055505b876111c1611741565b5f01819055506111d033611c21565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156112a9575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516112a09190612562565b60405180910390a15b5050505050505050565b6112bb611a7b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361132b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113229190611f97565b60405180910390fd5b61133481611b02565b50565b5f611340611768565b90505f61134b611741565b5f015490508082146113965781816040517f035a0e0000000000000000000000000000000000000000000000000000000000815260040161138d9291906120db565b60405180910390fd5b83835f73ffffffffffffffffffffffffffffffffffffffff166113b7611741565b60010183836040516113ca92919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611445576040517fc5e8402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61144e611768565b90506114598161198b565b33611462611741565b600101888860405161147592919061213e565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a1288886040516115089291906121a2565b60405180910390a250505050505050565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611583573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115a79190612601565b5050509150505f8112156115e7576040517f6f4f5ab900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8091505090565b6115f6611a7b565b5f6115ff611a2d565b5f015461160a611c35565b6116149190612453565b90505f810361166157611625610e5d565b6040517fdc69dc160000000000000000000000000000000000000000000000000000000081526004016116589190611f97565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016116bd929190612486565b6020604051808303815f875af11580156116d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116fd91906124e2565b507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65611727610e5d565b82604051611736929190612486565b60405180910390a150565b5f7f34d79759018dd62b1c8d40a6535099f131828aa4665b939adf68c4556b516400905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016117c5929190612678565b602060405180830381865afa1580156117e0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611804919061269f565b905090565b60605f73ffffffffffffffffffffffffffffffffffffffff1661182a611741565b600101868660405161183d92919061213e565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118c55784846040517f30a58c070000000000000000000000000000000000000000000000000000000081526004016118bc9291906121a2565b60405180910390fd5b5f6118d284848888611cd4565b90505f73ffffffffffffffffffffffffffffffffffffffff166118f3611741565b600101826040516119049190612226565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461197f576040517fc5e8402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050949350505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016119e9939291906126ca565b6020604051808303815f875af1158015611a05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a2991906124e2565b5050565b5f7f64d6ff49462c7266e92c8aa47370a483b3bb1c9ff7216e1d88a62c1eb24ffb00905090565b5f7f249f20ee916056548cfe0204d9ea4281f252680318bb5252f87aa5a31ec81e00905090565b611a83611d3d565b73ffffffffffffffffffffffffffffffffffffffff16611aa1610e5d565b73ffffffffffffffffffffffffffffffffffffffff1614611b0057611ac4611d3d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611af79190611f97565b60405180910390fd5b565b5f611b0b611bd3565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611c29611d44565b611c3281611d84565b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611c909190611f97565b602060405180830381865afa158015611cab573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ccf919061269f565b905090565b606084846040518060400160405280600181526020017f2e000000000000000000000000000000000000000000000000000000000000008152508585604051602001611d249594939291906126ff565b6040516020818303038152906040529050949350505050565b5f33905090565b611d4c611e08565b611d82576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611d8c611d44565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dfc575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611df39190611f97565b60405180910390fd5b611e0581611b02565b50565b5f611e11611bfa565b5f0160089054906101000a900460ff16905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611e4f57611e4e611e2e565b5b8235905067ffffffffffffffff811115611e6c57611e6b611e32565b5b602083019150836001820283011115611e8857611e87611e36565b5b9250929050565b5f8060208385031215611ea557611ea4611e26565b5b5f83013567ffffffffffffffff811115611ec257611ec1611e2a565b5b611ece85828601611e3a565b92509250509250929050565b5f805f8060408587031215611ef257611ef1611e26565b5b5f85013567ffffffffffffffff811115611f0f57611f0e611e2a565b5b611f1b87828801611e3a565b9450945050602085013567ffffffffffffffff811115611f3e57611f3d611e2a565b5b611f4a87828801611e3a565b925092505092959194509250565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f8182611f58565b9050919050565b611f9181611f77565b82525050565b5f602082019050611faa5f830184611f88565b92915050565b5f819050919050565b611fc281611fb0565b82525050565b5f602082019050611fdb5f830184611fb9565b92915050565b611fea81611fb0565b8114611ff4575f80fd5b50565b5f8135905061200581611fe1565b92915050565b5f602082840312156120205761201f611e26565b5b5f61202d84828501611ff7565b91505092915050565b61203f81611f77565b8114612049575f80fd5b50565b5f8135905061205a81612036565b92915050565b5f805f6060848603121561207757612076611e26565b5b5f61208486828701611ff7565b93505060206120958682870161204c565b92505060406120a68682870161204c565b9150509250925092565b5f602082840312156120c5576120c4611e26565b5b5f6120d28482850161204c565b91505092915050565b5f6040820190506120ee5f830185611fb9565b6120fb6020830184611fb9565b9392505050565b5f81905092915050565b828183375f83830152505050565b5f6121258385612102565b935061213283858461210c565b82840190509392505050565b5f61214a82848661211a565b91508190509392505050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f6121818385612156565b935061218e83858461210c565b61219783612166565b840190509392505050565b5f6020820190508181035f8301526121bb818486612176565b90509392505050565b5f81519050919050565b5f5b838110156121eb5780820151818401526020810190506121d0565b5f8484015250505050565b5f612200826121c4565b61220a8185612102565b935061221a8185602086016121ce565b80840191505092915050565b5f61223182846121f6565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61227382611fb0565b915061227e83611fb0565b92508282019050808211156122965761229561223c565b5b92915050565b5f6122a6826121c4565b6122b08185612156565b93506122c08185602086016121ce565b6122c981612166565b840191505092915050565b5f6020820190508181035f8301526122ec818461229c565b905092915050565b5f6122fe82611fb0565b915061230983611fb0565b925082820261231781611fb0565b9150828204841483151761232e5761232d61223c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61236c82611fb0565b915061237783611fb0565b92508261238757612386612335565b5b828204905092915050565b5f81905092915050565b50565b5f6123aa5f83612392565b91506123b58261239c565b5f82019050919050565b5f6123c98261239f565b9150819050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123f7826123d3565b61240181856123dd565b93506124118185602086016121ce565b61241a81612166565b840191505092915050565b5f6040820190506124385f830185611f88565b818103602083015261244a81846123ed565b90509392505050565b5f61245d82611fb0565b915061246883611fb0565b92508282039050818111156124805761247f61223c565b5b92915050565b5f6040820190506124995f830185611f88565b6124a66020830184611fb9565b9392505050565b5f8115159050919050565b6124c1816124ad565b81146124cb575f80fd5b50565b5f815190506124dc816124b8565b92915050565b5f602082840312156124f7576124f6611e26565b5b5f612504848285016124ce565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61254c6125476125428461250d565b612529565b612516565b9050919050565b61255c81612532565b82525050565b5f6020820190506125755f830184612553565b92915050565b5f69ffffffffffffffffffff82169050919050565b6125998161257b565b81146125a3575f80fd5b50565b5f815190506125b481612590565b92915050565b5f819050919050565b6125cc816125ba565b81146125d6575f80fd5b50565b5f815190506125e7816125c3565b92915050565b5f815190506125fb81611fe1565b92915050565b5f805f805f60a0868803121561261a57612619611e26565b5b5f612627888289016125a6565b9550506020612638888289016125d9565b9450506040612649888289016125ed565b935050606061265a888289016125ed565b925050608061266b888289016125a6565b9150509295509295909350565b5f60408201905061268b5f830185611f88565b6126986020830184611f88565b9392505050565b5f602082840312156126b4576126b3611e26565b5b5f6126c1848285016125ed565b91505092915050565b5f6060820190506126dd5f830186611f88565b6126ea6020830185611f88565b6126f76040830184611fb9565b949350505050565b5f61270b82878961211a565b915061271782866121f6565b915061272482848661211a565b9150819050969550505050505056fea2646970667358221220a5088f83ab460b3b84be6cf5b8c8c54c1bfcc8da753e91aa8120dff2889f460064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82702FF4 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xB4988FD0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB4988FD0 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xFBD43CAA EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xFC8B2653 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xFEE84D4E EQ PUSH2 0x325 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x82702FF4 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA0EF91DF EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x267 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x37EE4B47 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x37EE4B47 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x559AAE74 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x59E41286 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FB JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x1B0E17A3 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x225068C2 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x25970115 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x2DD398B5 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1EDA JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1EDA JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0xC32 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0xC45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0xE92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x10A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x12B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x1337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x15EE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x344 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x38C JUMPI CALLVALUE DUP2 PUSH1 0x40 MLOAD PUSH32 0xBE7B9D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AD PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43B JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5E8402D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x444 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x457 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x4EA SWAP3 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x502 PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x50D PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD SWAP1 POP DUP1 DUP3 EQ PUSH2 0x558 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x35A0E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x565 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x570 PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH2 0x57B DUP2 PUSH2 0x198B JUMP JUMPDEST CALLER PUSH2 0x584 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH2 0x5E9 PUSH2 0x1A2D JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x609 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 PUSH2 0x615 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x628 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x705 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x718 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x757 PUSH2 0x1519 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH2 0x76A PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x799 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x7E1 JUMPI CALLVALUE DUP2 PUSH1 0x40 MLOAD PUSH32 0xBE7B9D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7EE DUP7 DUP7 DUP7 DUP7 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP CALLER PUSH2 0x7F9 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP3 PUSH1 0x40 MLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH2 0x85E PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH2 0x87E PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 PUSH2 0x88A PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP3 PUSH1 0x40 MLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x978 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x9F9 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1A PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xA65 SWAP1 PUSH2 0x23BF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xAED JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x7824688C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP3 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF5 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB3C PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xB5C PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 CALLER PUSH2 0xBC8 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xC15 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2A PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC3A PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xC43 PUSH0 PUSH2 0x1B02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xC4E PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xCCF JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xCD8 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST POP DUP1 PUSH2 0xDBF PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDCF SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xDDF PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xE52 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE67 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE9A PUSH2 0x1A7B JUMP JUMPDEST PUSH0 PUSH2 0xEA3 PUSH2 0x1A54 JUMP JUMPDEST PUSH0 ADD SLOAD SELFBALANCE PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xEFE JUMPI PUSH2 0xEC2 PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xF08 PUSH2 0xE5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xF2B SWAP1 PUSH2 0x23BF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xFBA JUMPI PUSH2 0xF7C PUSH2 0xE5D JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x7824688C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB1 SWAP3 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH2 0xFE3 PUSH2 0xE5D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH2 0xFF2 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x1A7B JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1058 JUMPI DUP1 PUSH2 0x1018 PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xD090DD0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x1061 PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xA6DC15BDB68DA224C66DB4B3838D9A2B205138E8CFF6774E57D0AF91E196D622 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1096 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10AB PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x10F3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1126 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1134 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP8 PUSH2 0x11C1 PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x11D0 CALLER PUSH2 0x1C21 JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x12A9 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12BB PUSH2 0x1A7B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x132B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1322 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1334 DUP2 PUSH2 0x1B02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1340 PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x134B PUSH2 0x1741 JUMP JUMPDEST PUSH0 ADD SLOAD SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1396 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x35A0E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138D SWAP3 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B7 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13CA SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5E8402D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x144E PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP PUSH2 0x1459 DUP2 PUSH2 0x198B JUMP JUMPDEST CALLER PUSH2 0x1462 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1475 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1508 SWAP3 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1583 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A7 SWAP2 SWAP1 PUSH2 0x2601 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SLT ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F4F5AB900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15F6 PUSH2 0x1A7B JUMP JUMPDEST PUSH0 PUSH2 0x15FF PUSH2 0x1A2D JUMP JUMPDEST PUSH0 ADD SLOAD PUSH2 0x160A PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1661 JUMPI PUSH2 0x1625 PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDC69DC1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1658 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BD SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST POP PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH2 0x1727 PUSH2 0xE5D JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x1736 SWAP3 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x34D79759018DD62B1C8D40A6535099F131828AA4665B939ADF68C4556B516400 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C5 SWAP3 SWAP2 SWAP1 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x182A PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x183D SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18C5 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x30A58C0700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP3 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x18D2 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18F3 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 ADD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x197F JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5E8402D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A05 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A29 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x64D6FF49462C7266E92C8AA47370A483B3BB1C9FF7216E1D88A62C1EB24FFB00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x249F20EE916056548CFE0204D9EA4281F252680318BB5252F87AA5A31EC81E00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A83 PUSH2 0x1D3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AA1 PUSH2 0xE5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B00 JUMPI PUSH2 0x1AC4 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF7 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1B0B PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C29 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x1C32 DUP2 PUSH2 0x1D84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C90 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CCF SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D24 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D4C PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1D82 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D8C PUSH2 0x1D44 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DFC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x1B02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E11 PUSH2 0x1BFA JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E4F JUMPI PUSH2 0x1E4E PUSH2 0x1E2E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1E32 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1E88 JUMPI PUSH2 0x1E87 PUSH2 0x1E36 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA5 JUMPI PUSH2 0x1EA4 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH2 0x1ECE DUP6 DUP3 DUP7 ADD PUSH2 0x1E3A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0E PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH2 0x1F1B DUP8 DUP3 DUP9 ADD PUSH2 0x1E3A JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH2 0x1F4A DUP8 DUP3 DUP9 ADD PUSH2 0x1E3A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F81 DUP3 PUSH2 0x1F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F91 DUP2 PUSH2 0x1F77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FAA PUSH0 DUP4 ADD DUP5 PUSH2 0x1F88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC2 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FDB PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEA DUP2 PUSH2 0x1FB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2005 DUP2 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2020 JUMPI PUSH2 0x201F PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202D DUP5 DUP3 DUP6 ADD PUSH2 0x1FF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x1F77 JUMP JUMPDEST DUP2 EQ PUSH2 0x2049 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205A DUP2 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2084 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2095 DUP7 DUP3 DUP8 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20A6 DUP7 DUP3 DUP8 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C4 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D2 DUP5 DUP3 DUP6 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20EE PUSH0 DUP4 ADD DUP6 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x20FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2125 DUP4 DUP6 PUSH2 0x2102 JUMP JUMPDEST SWAP4 POP PUSH2 0x2132 DUP4 DUP6 DUP5 PUSH2 0x210C JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214A DUP3 DUP5 DUP7 PUSH2 0x211A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2181 DUP4 DUP6 PUSH2 0x2156 JUMP JUMPDEST SWAP4 POP PUSH2 0x218E DUP4 DUP6 DUP5 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x2197 DUP4 PUSH2 0x2166 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BB DUP2 DUP5 DUP7 PUSH2 0x2176 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21D0 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2200 DUP3 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x220A DUP2 DUP6 PUSH2 0x2102 JUMP JUMPDEST SWAP4 POP PUSH2 0x221A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2231 DUP3 DUP5 PUSH2 0x21F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2273 DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x227E DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2295 PUSH2 0x223C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22A6 DUP3 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x22B0 DUP2 DUP6 PUSH2 0x2156 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x22C9 DUP2 PUSH2 0x2166 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EC DUP2 DUP5 PUSH2 0x229C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22FE DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2309 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2317 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x232E JUMPI PUSH2 0x232D PUSH2 0x223C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x236C DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2377 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2387 JUMPI PUSH2 0x2386 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x23AA PUSH0 DUP4 PUSH2 0x2392 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B5 DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23C9 DUP3 PUSH2 0x239F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23F7 DUP3 PUSH2 0x23D3 JUMP JUMPDEST PUSH2 0x2401 DUP2 DUP6 PUSH2 0x23DD JUMP JUMPDEST SWAP4 POP PUSH2 0x2411 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x241A DUP2 PUSH2 0x2166 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2438 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x244A DUP2 DUP5 PUSH2 0x23ED JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x245D DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2468 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x247F PUSH2 0x223C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2499 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x24A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C1 DUP2 PUSH2 0x24AD JUMP JUMPDEST DUP2 EQ PUSH2 0x24CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24DC DUP2 PUSH2 0x24B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F7 JUMPI PUSH2 0x24F6 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2504 DUP5 DUP3 DUP6 ADD PUSH2 0x24CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x254C PUSH2 0x2547 PUSH2 0x2542 DUP5 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255C DUP2 PUSH2 0x2532 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2575 PUSH0 DUP4 ADD DUP5 PUSH2 0x2553 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2599 DUP2 PUSH2 0x257B JUMP JUMPDEST DUP2 EQ PUSH2 0x25A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25B4 DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25CC DUP2 PUSH2 0x25BA JUMP JUMPDEST DUP2 EQ PUSH2 0x25D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E7 DUP2 PUSH2 0x25C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25FB DUP2 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2627 DUP9 DUP3 DUP10 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2638 DUP9 DUP3 DUP10 ADD PUSH2 0x25D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2649 DUP9 DUP3 DUP10 ADD PUSH2 0x25ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x265A DUP9 DUP3 DUP10 ADD PUSH2 0x25ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x266B DUP9 DUP3 DUP10 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x268B PUSH0 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x2698 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F88 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B4 JUMPI PUSH2 0x26B3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26C1 DUP5 DUP3 DUP6 ADD PUSH2 0x25ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26DD PUSH0 DUP4 ADD DUP7 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x26EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x26F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x270B DUP3 DUP8 DUP10 PUSH2 0x211A JUMP JUMPDEST SWAP2 POP PUSH2 0x2717 DUP3 DUP7 PUSH2 0x21F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2724 DUP3 DUP5 DUP7 PUSH2 0x211A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 ADDMOD DUP16 DUP4 0xAB CHAINID SIGNEXTEND EXTCODESIZE DUP5 0xBE PUSH13 0xF5B8C8C54C1BFCC8DA753E91AA DUP2 KECCAK256 0xDF CALLCODE DUP9 SWAP16 CHAINID STOP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "592:16695:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9960:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9211:659;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8239:168;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7768:208;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8636:569;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12556:696;;;;;;;;;;;;;:::i;:::-;;8036:157;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:1;;;;;;;;;;;;;:::i;:::-;;13605:513:8;;;;;;;;;;;;;:::i;:::-;;2441:144:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11177:495:8;;;;;;;;;;;;;:::i;:::-;;10788:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7377:331;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10317:349:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15389:280;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11843:362;;;;;;;;;;;;;:::i;:::-;;9960:266;6178:16;6197:27;:25;:27::i;:::-;6178:46;;6252:8;6239:9;:21;6235:179;;6337:9;6380:8;6283:120;;;;;;;;;;;;:::i;:::-;;;;;;;;6235:179;10094:6:::1;;7150:1;7100:52;;:19;:17;:19::i;:::-;:30;;7131:6;;7100:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:52;;;7096:110;;7175:20;;;;;;;;;;;;;;7096:110;10157:10:::2;10116:19;:17;:19::i;:::-;:30;;10147:6;;10116:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;10208:10;10183:36;;;10200:6;;10183:36;;;;;;;:::i;:::-;;;;;;;;6423:1:::1;;6168:263:::0;9960:266;;:::o;9211:659::-;6580:17;6600:18;:16;:18::i;:::-;6580:38;;6628:26;6657:19;:17;:19::i;:::-;:50;;;6628:79;;6735:18;6722:9;:31;6718:196;;6828:9;6870:18;6776:127;;;;;;;;;;;;:::i;:::-;;;;;;;;6718:196;9370:20:::1;9393:85;9431:12;;9457:11;;9393:24;:85::i;:::-;9370:108;;9488:17;9508:18;:16;:18::i;:::-;9488:38;;9537:23;9550:9;9537:12;:23::i;:::-;9612:10;9571:19;:17;:19::i;:::-;:30;;9602:6;9571:38;;;;;;:::i;:::-;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;9672:9;9633:21;:19;:21::i;:::-;:35;;;:48;;;;;;;:::i;:::-;;;;;;;;9802:9;9691:21;:19;:21::i;:::-;:39;;:107;9744:19;:17;:19::i;:::-;:30;;9775:12;;9744:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9691:107;;;;;;;;;;;;;;;;:120;;;;;;;:::i;:::-;;;;;;;;9852:10;9827:36;;;9844:6;9827:36;;;;;;:::i;:::-;;;;;;;;9360:510;;6570:361:::0;;9211:659;;;;:::o;8239:168::-;8332:7;8362:19;:17;:19::i;:::-;:30;;8393:6;;8362:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8355:45;;8239:168;;;;:::o;7768:208::-;7850:7;7940:29;:27;:29::i;:::-;7929:7;7921:5;7881:19;:17;:19::i;:::-;:37;;;:45;;;;:::i;:::-;:55;;;;:::i;:::-;7880:89;;;;:::i;:::-;7873:96;;7768:208;:::o;8636:569::-;6178:16;6197:27;:25;:27::i;:::-;6178:46;;6252:8;6239:9;:21;6235:179;;6337:9;6380:8;6283:120;;;;;;;;;;;;:::i;:::-;;;;;;;;6235:179;8795:20:::1;8818:85;8856:12;;8882:11;;8818:24;:85::i;:::-;8795:108;;8955:10;8914:19;:17;:19::i;:::-;:30;;8945:6;8914:38;;;;;;:::i;:::-;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;9011:9;8976:17;:15;:17::i;:::-;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;9137:9;9030:17;:15;:17::i;:::-;:35;;:103;9079:19;:17;:19::i;:::-;:30;;9110:12;;9079:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9030:103;;;;;;;;;;;;;;;;:116;;;;;;;:::i;:::-;;;;;;;;9187:10;9162:36;;;9179:6;9162:36;;;;;;:::i;:::-;;;;;;;;8785:420;6168:263:::0;8636:569;;;;:::o;12556:696::-;12657:1;12606:17;:15;:17::i;:::-;:35;;:47;12642:10;12606:47;;;;;;;;;;;;;;;;:52;12602:119;;12699:10;12681:29;;;;;;;;;;;:::i;:::-;;;;;;;;12602:119;12732:9;12743:17;12772:10;12764:24;;12809:17;:15;:17::i;:::-;:35;;:47;12845:10;12809:47;;;;;;;;;;;;;;;;12764:106;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12731:139;;;;12886:4;12881:77;;12930:10;12942:4;12913:34;;;;;;;;;;;;:::i;:::-;;;;;;;;12881:77;13003:17;:15;:17::i;:::-;:48;;:60;13052:10;13003:60;;;;;;;;;;;;;;;;12968:17;:15;:17::i;:::-;:31;;;:95;;;;;;;:::i;:::-;;;;;;;;13123:1;13073:17;:15;:17::i;:::-;:35;;:47;13109:10;13073:47;;;;;;;;;;;;;;;:51;;;;13140:105;13164:10;13188:17;:15;:17::i;:::-;:35;;:47;13224:10;13188:47;;;;;;;;;;;;;;;;13140:105;;;;;;;:::i;:::-;;;;;;;;12592:660;;12556:696::o;8036:157::-;8119:7;8149:19;:17;:19::i;:::-;:37;;;8142:44;;8036:157;:::o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;13605:513:8:-;13711:1;13656:21;:19;:21::i;:::-;:39;;:51;13696:10;13656:51;;;;;;;;;;;;;;;;:56;13652:123;;13753:10;13735:29;;;;;;;;;;;:::i;:::-;;;;;;;;13652:123;13785:19;13807:17;:15;:17::i;:::-;:35;;:47;13843:10;13807:47;;;;;;;;;;;;;;;;13785:69;;13865:9;;;;;;;;;;;:18;;;13884:10;13896:11;13865:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13954:11;13919:17;:15;:17::i;:::-;:31;;;:46;;;;;;;:::i;:::-;;;;;;;;14025:1;13975:17;:15;:17::i;:::-;:35;;:47;14011:10;13975:47;;;;;;;;;;;;;;;:51;;;;14042:69;14066:10;14090:11;14042:69;;;;;;;:::i;:::-;;;;;;;;13642:476;13605:513::o;2441:144:1:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;11177:495:8:-;2334:13:1;:11;:13::i;:::-;11227:23:8::1;11289:17;:15;:17::i;:::-;:31;;;11253:21;:67;;;;:::i;:::-;11227:93;;11354:1;11335:15;:20:::0;11331:84:::1;;11396:7;:5;:7::i;:::-;11378:26;;;;;;;;;;;:::i;:::-;;;;;;;;11331:84;11426:9;11437:17:::0;11466:7:::1;:5;:7::i;:::-;11458:21;;11500:15;11458:71;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11425:104;;;;11545:4;11540:74;;11589:7;:5;:7::i;:::-;11598:4;11572:31;;;;;;;;;;;;:::i;:::-;;;;;;;;11540:74;11629:36;11640:7;:5;:7::i;:::-;11649:15;11629:36;;;;;;;:::i;:::-;;;;;;;;11217:455;;;11177:495::o:0;10788:219::-;2334:13:1;:11;:13::i;:::-;10890:8:8::1;5870:1;5861:5;:10:::0;5857:155:::1;;5927:5;5950:19;:17;:19::i;:::-;:37;;;5894:107;;;;;;;;;;;;:::i;:::-;;;;;;;;5857:155;10954:8:::2;10914:19;:17;:19::i;:::-;:37;;:48;;;;10978:22;10991:8;10978:22;;;;;;:::i;:::-;;;;;;;;2357:1:1::1;10788:219:8::0;:::o;7377:331::-;4158:30:2;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;7558:12:8::1;7518:19;:17;:19::i;:::-;:37;;:52;;;;7580:26;7595:10;7580:14;:26::i;:::-;7650:10;7616:9;::::0;:45:::1;;;;;;;;;;;;;;;;;;7690:10;7671:9;;:30;;;;;;;;;;;;;;;;;;5070:14:2::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;7377:331:8;;;:::o;3405:215:1:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;10317:349:8:-;6580:17;6600:18;:16;:18::i;:::-;6580:38;;6628:26;6657:19;:17;:19::i;:::-;:50;;;6628:79;;6735:18;6722:9;:31;6718:196;;6828:9;6870:18;6776:127;;;;;;;;;;;;:::i;:::-;;;;;;;;6718:196;10451:6:::1;;7150:1;7100:52;;:19;:17;:19::i;:::-;:30;;7131:6;;7100:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:52;;;7096:110;;7175:20;;;;;;;;;;;;;;7096:110;10473:17:::2;10493:18;:16;:18::i;:::-;10473:38;;10522:23;10535:9;10522:12;:23::i;:::-;10597:10;10556:19;:17;:19::i;:::-;:30;;10587:6;;10556:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;10648:10;10623:36;;;10640:6;;10623:36;;;;;;;:::i;:::-;;;;;;;;10463:203;6923:1:::1;;6570:361:::0;;10317:349;;:::o;15389:280::-;15474:7;15500:12;15522:9;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15497:52;;;;;;15572:1;15564:5;:9;15560:71;;;15596:24;;;;;;;;;;;;;;15560:71;15656:5;15641:21;;;15389:280;:::o;11843:362::-;2334:13:1;:11;:13::i;:::-;11894:23:8::1;11959:21;:19;:21::i;:::-;:35;;;11920:24;:22;:24::i;:::-;:74;;;;:::i;:::-;11894:100;;12028:1;12009:15;:20:::0;12005:84:::1;;12070:7;:5;:7::i;:::-;12052:26;;;;;;;;;;;:::i;:::-;;;;;;;;12005:84;12099:9;;;;;;;;;;;:18;;;12118:10;12130:15;12099:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12162:36;12173:7;:5;:7::i;:::-;12182:15;12162:36;;;;;;;:::i;:::-;;;;;;;;11884:321;11843:362::o:0;14826:186::-;14901:23;14973;14963:33;;14826:186;:::o;15745:129::-;15795:7;15821:9;;;;;;;;;;;:19;;;15841:10;15861:4;15821:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15814:53;;15745:129;:::o;16265:575::-;16402:13;16500:1;16444:58;;:19;:17;:19::i;:::-;:30;;16475:12;;16444:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:58;;;16427:152;;16555:12;;16534:34;;;;;;;;;;;;:::i;:::-;;;;;;;;16427:152;16589:20;16612:77;16642:11;;16667:12;;16612:16;:77::i;:::-;16589:100;;16754:1;16704:52;;:19;:17;:19::i;:::-;:30;;16735:6;16704:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:52;;;16700:110;;16779:20;;;;;;;;;;;;;;16700:110;16827:6;16820:13;;;16265:575;;;;;;:::o;16925:172::-;16984:9;;;;;;;;;;;:22;;;17020:10;17052:4;17071:9;16984:106;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16925:172;:::o;16012:193::-;16089:25;16163:26;16153:36;;16012:193;:::o;15145:180::-;15218:21;15288;15278:31;;15145:180;:::o;2658:162:1:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:2:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:1:-;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;17163:122:8:-;17218:7;17244:9;;;;;;;;;;;:19;;;17272:4;17244:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17237:41;;17163:122;:::o;14362:329::-;14491:20;14586:11;;14615:15;;;;;;;;;;;;;;;;;14648:12;;14552:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14523:161;;14362:329;;;;;;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;7084:141:2:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:1:-;6931:20:2;:18;:20::i;:::-;2100:1:1::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8487:120:2:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;717:553;775:8;785:6;835:3;828:4;820:6;816:17;812:27;802:122;;843:79;;:::i;:::-;802:122;956:6;943:20;933:30;;986:18;978:6;975:30;972:117;;;1008:79;;:::i;:::-;972:117;1122:4;1114:6;1110:17;1098:29;;1176:3;1168:4;1160:6;1156:17;1146:8;1142:32;1139:41;1136:128;;;1183:79;;:::i;:::-;1136:128;717:553;;;;;:::o;1276:529::-;1347:6;1355;1404:2;1392:9;1383:7;1379:23;1375:32;1372:119;;;1410:79;;:::i;:::-;1372:119;1558:1;1547:9;1543:17;1530:31;1588:18;1580:6;1577:30;1574:117;;;1610:79;;:::i;:::-;1574:117;1723:65;1780:7;1771:6;1760:9;1756:22;1723:65;:::i;:::-;1705:83;;;;1501:297;1276:529;;;;;:::o;1811:874::-;1903:6;1911;1919;1927;1976:2;1964:9;1955:7;1951:23;1947:32;1944:119;;;1982:79;;:::i;:::-;1944:119;2130:1;2119:9;2115:17;2102:31;2160:18;2152:6;2149:30;2146:117;;;2182:79;;:::i;:::-;2146:117;2295:65;2352:7;2343:6;2332:9;2328:22;2295:65;:::i;:::-;2277:83;;;;2073:297;2437:2;2426:9;2422:18;2409:32;2468:18;2460:6;2457:30;2454:117;;;2490:79;;:::i;:::-;2454:117;2603:65;2660:7;2651:6;2640:9;2636:22;2603:65;:::i;:::-;2585:83;;;;2380:298;1811:874;;;;;;;:::o;2691:126::-;2728:7;2768:42;2761:5;2757:54;2746:65;;2691:126;;;:::o;2823:96::-;2860:7;2889:24;2907:5;2889:24;:::i;:::-;2878:35;;2823:96;;;:::o;2925:118::-;3012:24;3030:5;3012:24;:::i;:::-;3007:3;3000:37;2925:118;;:::o;3049:222::-;3142:4;3180:2;3169:9;3165:18;3157:26;;3193:71;3261:1;3250:9;3246:17;3237:6;3193:71;:::i;:::-;3049:222;;;;:::o;3277:77::-;3314:7;3343:5;3332:16;;3277:77;;;:::o;3360:118::-;3447:24;3465:5;3447:24;:::i;:::-;3442:3;3435:37;3360:118;;:::o;3484:222::-;3577:4;3615:2;3604:9;3600:18;3592:26;;3628:71;3696:1;3685:9;3681:17;3672:6;3628:71;:::i;:::-;3484:222;;;;:::o;3712:122::-;3785:24;3803:5;3785:24;:::i;:::-;3778:5;3775:35;3765:63;;3824:1;3821;3814:12;3765:63;3712:122;:::o;3840:139::-;3886:5;3924:6;3911:20;3902:29;;3940:33;3967:5;3940:33;:::i;:::-;3840:139;;;;:::o;3985:329::-;4044:6;4093:2;4081:9;4072:7;4068:23;4064:32;4061:119;;;4099:79;;:::i;:::-;4061:119;4219:1;4244:53;4289:7;4280:6;4269:9;4265:22;4244:53;:::i;:::-;4234:63;;4190:117;3985:329;;;;:::o;4320:122::-;4393:24;4411:5;4393:24;:::i;:::-;4386:5;4383:35;4373:63;;4432:1;4429;4422:12;4373:63;4320:122;:::o;4448:139::-;4494:5;4532:6;4519:20;4510:29;;4548:33;4575:5;4548:33;:::i;:::-;4448:139;;;;:::o;4593:619::-;4670:6;4678;4686;4735:2;4723:9;4714:7;4710:23;4706:32;4703:119;;;4741:79;;:::i;:::-;4703:119;4861:1;4886:53;4931:7;4922:6;4911:9;4907:22;4886:53;:::i;:::-;4876:63;;4832:117;4988:2;5014:53;5059:7;5050:6;5039:9;5035:22;5014:53;:::i;:::-;5004:63;;4959:118;5116:2;5142:53;5187:7;5178:6;5167:9;5163:22;5142:53;:::i;:::-;5132:63;;5087:118;4593:619;;;;;:::o;5218:329::-;5277:6;5326:2;5314:9;5305:7;5301:23;5297:32;5294:119;;;5332:79;;:::i;:::-;5294:119;5452:1;5477:53;5522:7;5513:6;5502:9;5498:22;5477:53;:::i;:::-;5467:63;;5423:117;5218:329;;;;:::o;5553:332::-;5674:4;5712:2;5701:9;5697:18;5689:26;;5725:71;5793:1;5782:9;5778:17;5769:6;5725:71;:::i;:::-;5806:72;5874:2;5863:9;5859:18;5850:6;5806:72;:::i;:::-;5553:332;;;;;:::o;5891:148::-;5993:11;6030:3;6015:18;;5891:148;;;;:::o;6045:146::-;6142:6;6137:3;6132;6119:30;6183:1;6174:6;6169:3;6165:16;6158:27;6045:146;;;:::o;6221:330::-;6337:3;6358:89;6440:6;6435:3;6358:89;:::i;:::-;6351:96;;6457:56;6506:6;6501:3;6494:5;6457:56;:::i;:::-;6538:6;6533:3;6529:16;6522:23;;6221:330;;;;;:::o;6557:295::-;6699:3;6721:105;6822:3;6813:6;6805;6721:105;:::i;:::-;6714:112;;6843:3;6836:10;;6557:295;;;;;:::o;6858:169::-;6942:11;6976:6;6971:3;6964:19;7016:4;7011:3;7007:14;6992:29;;6858:169;;;;:::o;7033:102::-;7074:6;7125:2;7121:7;7116:2;7109:5;7105:14;7101:28;7091:38;;7033:102;;;:::o;7165:317::-;7263:3;7284:71;7348:6;7343:3;7284:71;:::i;:::-;7277:78;;7365:56;7414:6;7409:3;7402:5;7365:56;:::i;:::-;7446:29;7468:6;7446:29;:::i;:::-;7441:3;7437:39;7430:46;;7165:317;;;;;:::o;7488:333::-;7611:4;7649:2;7638:9;7634:18;7626:26;;7698:9;7692:4;7688:20;7684:1;7673:9;7669:17;7662:47;7726:88;7809:4;7800:6;7792;7726:88;:::i;:::-;7718:96;;7488:333;;;;;:::o;7827:99::-;7879:6;7913:5;7907:12;7897:22;;7827:99;;;:::o;7932:246::-;8013:1;8023:113;8037:6;8034:1;8031:13;8023:113;;;8122:1;8117:3;8113:11;8107:18;8103:1;8098:3;8094:11;8087:39;8059:2;8056:1;8052:10;8047:15;;8023:113;;;8170:1;8161:6;8156:3;8152:16;8145:27;7994:184;7932:246;;;:::o;8184:390::-;8290:3;8318:39;8351:5;8318:39;:::i;:::-;8373:89;8455:6;8450:3;8373:89;:::i;:::-;8366:96;;8471:65;8529:6;8524:3;8517:4;8510:5;8506:16;8471:65;:::i;:::-;8561:6;8556:3;8552:16;8545:23;;8294:280;8184:390;;;;:::o;8580:275::-;8712:3;8734:95;8825:3;8816:6;8734:95;:::i;:::-;8727:102;;8846:3;8839:10;;8580:275;;;;:::o;8861:180::-;8909:77;8906:1;8899:88;9006:4;9003:1;8996:15;9030:4;9027:1;9020:15;9047:191;9087:3;9106:20;9124:1;9106:20;:::i;:::-;9101:25;;9140:20;9158:1;9140:20;:::i;:::-;9135:25;;9183:1;9180;9176:9;9169:16;;9204:3;9201:1;9198:10;9195:36;;;9211:18;;:::i;:::-;9195:36;9047:191;;;;:::o;9244:377::-;9332:3;9360:39;9393:5;9360:39;:::i;:::-;9415:71;9479:6;9474:3;9415:71;:::i;:::-;9408:78;;9495:65;9553:6;9548:3;9541:4;9534:5;9530:16;9495:65;:::i;:::-;9585:29;9607:6;9585:29;:::i;:::-;9580:3;9576:39;9569:46;;9336:285;9244:377;;;;:::o;9627:313::-;9740:4;9778:2;9767:9;9763:18;9755:26;;9827:9;9821:4;9817:20;9813:1;9802:9;9798:17;9791:47;9855:78;9928:4;9919:6;9855:78;:::i;:::-;9847:86;;9627:313;;;;:::o;9946:410::-;9986:7;10009:20;10027:1;10009:20;:::i;:::-;10004:25;;10043:20;10061:1;10043:20;:::i;:::-;10038:25;;10098:1;10095;10091:9;10120:30;10138:11;10120:30;:::i;:::-;10109:41;;10299:1;10290:7;10286:15;10283:1;10280:22;10260:1;10253:9;10233:83;10210:139;;10329:18;;:::i;:::-;10210:139;9994:362;9946:410;;;;:::o;10362:180::-;10410:77;10407:1;10400:88;10507:4;10504:1;10497:15;10531:4;10528:1;10521:15;10548:185;10588:1;10605:20;10623:1;10605:20;:::i;:::-;10600:25;;10639:20;10657:1;10639:20;:::i;:::-;10634:25;;10678:1;10668:35;;10683:18;;:::i;:::-;10668:35;10725:1;10722;10718:9;10713:14;;10548:185;;;;:::o;10739:147::-;10840:11;10877:3;10862:18;;10739:147;;;;:::o;10892:114::-;;:::o;11012:398::-;11171:3;11192:83;11273:1;11268:3;11192:83;:::i;:::-;11185:90;;11284:93;11373:3;11284:93;:::i;:::-;11402:1;11397:3;11393:11;11386:18;;11012:398;;;:::o;11416:379::-;11600:3;11622:147;11765:3;11622:147;:::i;:::-;11615:154;;11786:3;11779:10;;11416:379;;;:::o;11801:98::-;11852:6;11886:5;11880:12;11870:22;;11801:98;;;:::o;11905:168::-;11988:11;12022:6;12017:3;12010:19;12062:4;12057:3;12053:14;12038:29;;11905:168;;;;:::o;12079:373::-;12165:3;12193:38;12225:5;12193:38;:::i;:::-;12247:70;12310:6;12305:3;12247:70;:::i;:::-;12240:77;;12326:65;12384:6;12379:3;12372:4;12365:5;12361:16;12326:65;:::i;:::-;12416:29;12438:6;12416:29;:::i;:::-;12411:3;12407:39;12400:46;;12169:283;12079:373;;;;:::o;12458:419::-;12597:4;12635:2;12624:9;12620:18;12612:26;;12648:71;12716:1;12705:9;12701:17;12692:6;12648:71;:::i;:::-;12766:9;12760:4;12756:20;12751:2;12740:9;12736:18;12729:48;12794:76;12865:4;12856:6;12794:76;:::i;:::-;12786:84;;12458:419;;;;;:::o;12883:194::-;12923:4;12943:20;12961:1;12943:20;:::i;:::-;12938:25;;12977:20;12995:1;12977:20;:::i;:::-;12972:25;;13021:1;13018;13014:9;13006:17;;13045:1;13039:4;13036:11;13033:37;;;13050:18;;:::i;:::-;13033:37;12883:194;;;;:::o;13083:332::-;13204:4;13242:2;13231:9;13227:18;13219:26;;13255:71;13323:1;13312:9;13308:17;13299:6;13255:71;:::i;:::-;13336:72;13404:2;13393:9;13389:18;13380:6;13336:72;:::i;:::-;13083:332;;;;;:::o;13421:90::-;13455:7;13498:5;13491:13;13484:21;13473:32;;13421:90;;;:::o;13517:116::-;13587:21;13602:5;13587:21;:::i;:::-;13580:5;13577:32;13567:60;;13623:1;13620;13613:12;13567:60;13517:116;:::o;13639:137::-;13693:5;13724:6;13718:13;13709:22;;13740:30;13764:5;13740:30;:::i;:::-;13639:137;;;;:::o;13782:345::-;13849:6;13898:2;13886:9;13877:7;13873:23;13869:32;13866:119;;;13904:79;;:::i;:::-;13866:119;14024:1;14049:61;14102:7;14093:6;14082:9;14078:22;14049:61;:::i;:::-;14039:71;;13995:125;13782:345;;;;:::o;14133:85::-;14178:7;14207:5;14196:16;;14133:85;;;:::o;14224:101::-;14260:7;14300:18;14293:5;14289:30;14278:41;;14224:101;;;:::o;14331:60::-;14359:3;14380:5;14373:12;;14331:60;;;:::o;14397:156::-;14454:9;14487:60;14504:42;14513:32;14539:5;14513:32;:::i;:::-;14504:42;:::i;:::-;14487:60;:::i;:::-;14474:73;;14397:156;;;:::o;14559:145::-;14653:44;14691:5;14653:44;:::i;:::-;14648:3;14641:57;14559:145;;:::o;14710:236::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14861:78;14936:1;14925:9;14921:17;14912:6;14861:78;:::i;:::-;14710:236;;;;:::o;14952:105::-;14988:7;15028:22;15021:5;15017:34;15006:45;;14952:105;;;:::o;15063:120::-;15135:23;15152:5;15135:23;:::i;:::-;15128:5;15125:34;15115:62;;15173:1;15170;15163:12;15115:62;15063:120;:::o;15189:141::-;15245:5;15276:6;15270:13;15261:22;;15292:32;15318:5;15292:32;:::i;:::-;15189:141;;;;:::o;15336:76::-;15372:7;15401:5;15390:16;;15336:76;;;:::o;15418:120::-;15490:23;15507:5;15490:23;:::i;:::-;15483:5;15480:34;15470:62;;15528:1;15525;15518:12;15470:62;15418:120;:::o;15544:141::-;15600:5;15631:6;15625:13;15616:22;;15647:32;15673:5;15647:32;:::i;:::-;15544:141;;;;:::o;15691:143::-;15748:5;15779:6;15773:13;15764:22;;15795:33;15822:5;15795:33;:::i;:::-;15691:143;;;;:::o;15840:971::-;15943:6;15951;15959;15967;15975;16024:3;16012:9;16003:7;15999:23;15995:33;15992:120;;;16031:79;;:::i;:::-;15992:120;16151:1;16176:63;16231:7;16222:6;16211:9;16207:22;16176:63;:::i;:::-;16166:73;;16122:127;16288:2;16314:63;16369:7;16360:6;16349:9;16345:22;16314:63;:::i;:::-;16304:73;;16259:128;16426:2;16452:64;16508:7;16499:6;16488:9;16484:22;16452:64;:::i;:::-;16442:74;;16397:129;16565:2;16591:64;16647:7;16638:6;16627:9;16623:22;16591:64;:::i;:::-;16581:74;;16536:129;16704:3;16731:63;16786:7;16777:6;16766:9;16762:22;16731:63;:::i;:::-;16721:73;;16675:129;15840:971;;;;;;;;:::o;16817:332::-;16938:4;16976:2;16965:9;16961:18;16953:26;;16989:71;17057:1;17046:9;17042:17;17033:6;16989:71;:::i;:::-;17070:72;17138:2;17127:9;17123:18;17114:6;17070:72;:::i;:::-;16817:332;;;;;:::o;17155:351::-;17225:6;17274:2;17262:9;17253:7;17249:23;17245:32;17242:119;;;17280:79;;:::i;:::-;17242:119;17400:1;17425:64;17481:7;17472:6;17461:9;17457:22;17425:64;:::i;:::-;17415:74;;17371:128;17155:351;;;;:::o;17512:442::-;17661:4;17699:2;17688:9;17684:18;17676:26;;17712:71;17780:1;17769:9;17765:17;17756:6;17712:71;:::i;:::-;17793:72;17861:2;17850:9;17846:18;17837:6;17793:72;:::i;:::-;17875;17943:2;17932:9;17928:18;17919:6;17875:72;:::i;:::-;17512:442;;;;;;:::o;17960:635::-;18208:3;18230:105;18331:3;18322:6;18314;18230:105;:::i;:::-;18223:112;;18352:95;18443:3;18434:6;18352:95;:::i;:::-;18345:102;;18464:105;18565:3;18556:6;18548;18464:105;:::i;:::-;18457:112;;18586:3;18579:10;;17960:635;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2017800",
								"executionCost": "2140",
								"totalCost": "2019940"
							},
							"external": {
								"_getEthToUsdPriceFromOracle()": "infinite",
								"buyChildDomainViaEth(string,string)": "infinite",
								"buyChildDomainViaUsdc(string,string)": "infinite",
								"buyDomainViaEth(string)": "infinite",
								"buyDomainViaUsdc(string)": "infinite",
								"changePrice(uint256)": "infinite",
								"getDomainOwner(string)": "infinite",
								"getRegistrationPriceInEth()": "infinite",
								"getRegistrationPriceInUsdc()": "2538",
								"initialize(uint256,address,address)": "infinite",
								"owner()": "2612",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawDomainEth()": "infinite",
								"withdrawDomainUsdc()": "infinite",
								"withdrawEth()": "infinite",
								"withdrawUsdc()": "infinite"
							},
							"internal": {
								"_getDomainStorage()": "22",
								"_getFundStorage()": "22",
								"_getUsdcFundStorage()": "22",
								"createAndCheckFullDomain(string calldata,string calldata)": "infinite",
								"createFullDomain(string calldata,string calldata)": "infinite",
								"getUsdcAllowance()": "infinite",
								"getUsdcContractBalance()": "infinite",
								"transferUsdc(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 17287,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5088f83ab460b3b84be6cf5b8c8c54c1bfcc8da753e91aa8120dff2889f460064736f6c63430008180033",
									".code": [
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "82702FF4"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "B4988FD0"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "B4988FD0"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "FBD43CAA"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "FC8B2653"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "FEE84D4E"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "82702FF4"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "A0EF91DF"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "A2B40D19"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "37EE4B47"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "37EE4B47"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "559AAE74"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "59E41286"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "1B0E17A3"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "225068C2"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "25970115"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "2DD398B5"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 17287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9960,
											"end": 10226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 9960,
											"end": 10226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 9211,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 9211,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8239,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 8239,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 8239,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7768,
											"end": 7976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 8636,
											"end": 9205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 8636,
											"end": 9205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 12556,
											"end": 13252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 8036,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 13605,
											"end": 14118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 11177,
											"end": 11672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 10788,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 10788,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 7377,
											"end": 7708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7377,
											"end": 7708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10317,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 10317,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 15389,
											"end": 15669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15389,
											"end": 15669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 11843,
											"end": 12205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6197,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6197,
											"end": 6224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6224,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6197,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6260,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6248,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6260,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6380,
											"end": 6388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "BE7B9D4D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6283,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10094,
											"end": 10100,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10094,
											"end": 10100,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7150,
											"end": 7151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7100,
											"end": 7117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 7100,
											"end": 7119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7100,
											"end": 7119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7100,
											"end": 7130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 7100,
											"end": 7138,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C5E8402D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10167,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10135,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 10116,
											"end": 10133,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 10116,
											"end": 10135,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10135,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 10116,
											"end": 10135,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10146,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10116,
											"end": 10146,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10153,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10153,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 10116,
											"end": 10154,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10167,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10208,
											"end": 10218,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12"
										},
										{
											"begin": 10200,
											"end": 10206,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10200,
											"end": 10206,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 10183,
											"end": 10219,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10219,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6423,
											"end": 6424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6423,
											"end": 6424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 10226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 6600,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 6600,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6657,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6657,
											"end": 6676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6707,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6731,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6753,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6837,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "35A0E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6776,
											"end": 6903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9370,
											"end": 9390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 9431,
											"end": 9443,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9443,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9468,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9468,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 9393,
											"end": 9478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 9393,
											"end": 9478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9370,
											"end": 9478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9370,
											"end": 9478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9488,
											"end": 9505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 9508,
											"end": 9524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 9508,
											"end": 9526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 9508,
											"end": 9526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9488,
											"end": 9526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9488,
											"end": 9526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 9550,
											"end": 9559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9549,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 9537,
											"end": 9560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 9537,
											"end": 9560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 9622,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 9571,
											"end": 9588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 9571,
											"end": 9590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 9571,
											"end": 9590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9571,
											"end": 9601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9602,
											"end": 9608,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 9571,
											"end": 9609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9672,
											"end": 9681,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9633,
											"end": 9652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 9633,
											"end": 9654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9633,
											"end": 9654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 9633,
											"end": 9681,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9802,
											"end": 9811,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 9691,
											"end": 9710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 9691,
											"end": 9712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 9691,
											"end": 9712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9691,
											"end": 9730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9744,
											"end": 9763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 9744,
											"end": 9761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 9744,
											"end": 9763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 9744,
											"end": 9763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9744,
											"end": 9774,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9775,
											"end": 9787,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 9775,
											"end": 9787,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 9744,
											"end": 9788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9744,
											"end": 9788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 9691,
											"end": 9811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9811,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9862,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12"
										},
										{
											"begin": 9844,
											"end": 9850,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9827,
											"end": 9863,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9863,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 8362,
											"end": 8379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 8362,
											"end": 8381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8381,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 8362,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8392,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8392,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 8362,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7850,
											"end": 7857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7940,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 7940,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7940,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7940,
											"end": 7969,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 7940,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7921,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 7881,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 7881,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7918,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7881,
											"end": 7926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 7881,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7926,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7881,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7881,
											"end": 7936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 7881,
											"end": 7936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7936,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7881,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7880,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7880,
											"end": 7969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7880,
											"end": 7969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7880,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 7880,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7880,
											"end": 7969,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7880,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7873,
											"end": 7969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7873,
											"end": 7969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6197,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6197,
											"end": 6224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6224,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6197,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6260,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6248,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6260,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6380,
											"end": 6388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "BE7B9D4D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6283,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6403,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 6235,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8795,
											"end": 8815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8856,
											"end": 8868,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8868,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8882,
											"end": 8893,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8882,
											"end": 8893,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 8818,
											"end": 8903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8818,
											"end": 8903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8795,
											"end": 8903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8795,
											"end": 8903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8955,
											"end": 8965,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8914,
											"end": 8931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 8914,
											"end": 8933,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8914,
											"end": 8933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8914,
											"end": 8944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8945,
											"end": 8951,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8914,
											"end": 8952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9011,
											"end": 9020,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 8993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8976,
											"end": 8991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 8976,
											"end": 8993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 8993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8976,
											"end": 8993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8976,
											"end": 9007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8976,
											"end": 9020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9146,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 9030,
											"end": 9045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 9030,
											"end": 9047,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9047,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 9030,
											"end": 9047,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9030,
											"end": 9065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 9079,
											"end": 9096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 9079,
											"end": 9098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 9079,
											"end": 9098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9079,
											"end": 9109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9110,
											"end": 9122,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9110,
											"end": 9122,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 9079,
											"end": 9123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9079,
											"end": 9123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 9030,
											"end": 9146,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9197,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12"
										},
										{
											"begin": 9179,
											"end": 9185,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9162,
											"end": 9198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9198,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 9205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 9205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 12556,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12657,
											"end": 12658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12606,
											"end": 12623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 12606,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 12606,
											"end": 12623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12623,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 12606,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12641,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12606,
											"end": 12641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12642,
											"end": 12652,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12658,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12602,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 12602,
											"end": 12721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12699,
											"end": 12709,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "PUSH",
											"source": 8,
											"value": "DC69DC1600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 12681,
											"end": 12710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12710,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12602,
											"end": 12721,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 12602,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12732,
											"end": 12741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12743,
											"end": 12760,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12772,
											"end": 12782,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12788,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12764,
											"end": 12788,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 12809,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 12809,
											"end": 12826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12826,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 12809,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12844,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12809,
											"end": 12844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12845,
											"end": 12855,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12856,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 12764,
											"end": 12870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12886,
											"end": 12890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12881,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 12881,
											"end": 12958,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 12940,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 12946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "PUSH",
											"source": 8,
											"value": "7824688C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 12913,
											"end": 12947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12881,
											"end": 12958,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 12881,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 13003,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 13003,
											"end": 13020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13020,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 13003,
											"end": 13020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13051,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13003,
											"end": 13051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13052,
											"end": 13062,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13063,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 12985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 12968,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 12968,
											"end": 12985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 12985,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 12968,
											"end": 12985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 12999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 12999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 12999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 12968,
											"end": 13063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13123,
											"end": 13124,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 13073,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 13073,
											"end": 13090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13090,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 13073,
											"end": 13090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13108,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13073,
											"end": 13108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13109,
											"end": 13119,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13120,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13124,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13124,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 13073,
											"end": 13124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "PUSH",
											"source": 8,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 13164,
											"end": 13174,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 13188,
											"end": 13203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 13188,
											"end": 13205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13205,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 13188,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13223,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13188,
											"end": 13223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13224,
											"end": 13234,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13235,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 13140,
											"end": 13245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13245,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 12592,
											"end": 13252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12592,
											"end": 13252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 13252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 8149,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 8149,
											"end": 8168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8149,
											"end": 8168,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 8149,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8149,
											"end": 8186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8149,
											"end": 8186,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8142,
											"end": 8186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8142,
											"end": 8186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 13605,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13656,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 13656,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 13656,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13677,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 13656,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13695,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13656,
											"end": 13695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13696,
											"end": 13706,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13712,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 13652,
											"end": 13775,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13753,
											"end": 13763,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "PUSH",
											"source": 8,
											"value": "DC69DC1600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 13735,
											"end": 13764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13775,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 13652,
											"end": 13775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 13807,
											"end": 13822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 13807,
											"end": 13824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13824,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 13807,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13842,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13807,
											"end": 13842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13843,
											"end": 13853,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 13884,
											"end": 13894,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13896,
											"end": 13907,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 13865,
											"end": 13908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 13865,
											"end": 13908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13865,
											"end": 13908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13954,
											"end": 13965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 13919,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 13919,
											"end": 13936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13936,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 13919,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13919,
											"end": 13950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 13919,
											"end": 13965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14025,
											"end": 14026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13975,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 13975,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 13975,
											"end": 13992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 13992,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 13975,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14010,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13975,
											"end": 14010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14021,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13975,
											"end": 14022,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14026,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 13975,
											"end": 14026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "PUSH",
											"source": 8,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 14066,
											"end": 14076,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 14042,
											"end": 14111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14111,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 13642,
											"end": 14118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 11177,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 11289,
											"end": 11304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 11289,
											"end": 11306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 11289,
											"end": 11306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11274,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 11253,
											"end": 11320,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 11253,
											"end": 11320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 11253,
											"end": 11320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11227,
											"end": 11320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11227,
											"end": 11320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11354,
											"end": 11355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11335,
											"end": 11350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11335,
											"end": 11355,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 11331,
											"end": 11415,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 11396,
											"end": 11401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 11396,
											"end": 11403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 11396,
											"end": 11403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DC69DC1600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 11378,
											"end": 11404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11404,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 11331,
											"end": 11415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11426,
											"end": 11435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11437,
											"end": 11454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11466,
											"end": 11473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 11466,
											"end": 11471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 11466,
											"end": 11473,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11466,
											"end": 11473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 11466,
											"end": 11473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11458,
											"end": 11479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11500,
											"end": 11515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 11458,
											"end": 11529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11425,
											"end": 11529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11425,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11425,
											"end": 11529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11425,
											"end": 11529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 11540,
											"end": 11614,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 11589,
											"end": 11594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 11589,
											"end": 11596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 11589,
											"end": 11596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11598,
											"end": 11602,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7824688C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 11572,
											"end": 11603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11603,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 11540,
											"end": 11614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 11640,
											"end": 11647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 11640,
											"end": 11645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 11640,
											"end": 11647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11640,
											"end": 11647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 11640,
											"end": 11647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11649,
											"end": 11664,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 11629,
											"end": 11665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11665,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 11217,
											"end": 11672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11217,
											"end": 11672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11217,
											"end": 11672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11177,
											"end": 11672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 5871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5857,
											"end": 6012,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5950,
											"end": 5969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5950,
											"end": 5967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5950,
											"end": 5969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5950,
											"end": 5969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5950,
											"end": 5969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5950,
											"end": 5987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5950,
											"end": 5987,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D090DD0600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5894,
											"end": 6001,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6001,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5857,
											"end": 6012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10962,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10933,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 10914,
											"end": 10931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 10914,
											"end": 10933,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10933,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 10914,
											"end": 10933,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10951,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10951,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10962,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10962,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10962,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A6DC15BDB68DA224C66DB4B3838D9A2B205138E8CFF6774E57D0AF91E196D622"
										},
										{
											"begin": 10991,
											"end": 10999,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10978,
											"end": 11000,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11000,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 11007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7558,
											"end": 7570,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7518,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 7518,
											"end": 7537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7518,
											"end": 7537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7555,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7570,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7595,
											"end": 7605,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7580,
											"end": 7606,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7580,
											"end": 7606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7660,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7671,
											"end": 7680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7701,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6600,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 6600,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6657,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6657,
											"end": 6676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6707,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6731,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6753,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6837,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "35A0E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6776,
											"end": 6903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6903,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10451,
											"end": 10457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10451,
											"end": 10457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7150,
											"end": 7151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 7100,
											"end": 7117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 7100,
											"end": 7119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 7100,
											"end": 7119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7100,
											"end": 7130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 7100,
											"end": 7138,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7152,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C5E8402D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7195,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7096,
											"end": 7206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10490,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10493,
											"end": 10511,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10493,
											"end": 10509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 10493,
											"end": 10511,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10493,
											"end": 10511,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10493,
											"end": 10511,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10511,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10522,
											"end": 10545,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10535,
											"end": 10544,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10522,
											"end": 10534,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 10522,
											"end": 10545,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10522,
											"end": 10545,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10522,
											"end": 10545,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10607,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10575,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 10556,
											"end": 10573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 10556,
											"end": 10575,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10575,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 10556,
											"end": 10575,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10586,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10556,
											"end": 10586,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10587,
											"end": 10593,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10587,
											"end": 10593,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 10556,
											"end": 10594,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10607,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10658,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12"
										},
										{
											"begin": 10640,
											"end": 10646,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10646,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 10623,
											"end": 10659,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10659,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 10463,
											"end": 10666,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6923,
											"end": 6924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6923,
											"end": 6924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15474,
											"end": 15481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15500,
											"end": 15512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15547,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15522,
											"end": 15547,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15547,
											"name": "PUSH",
											"source": 8,
											"value": "FEAF968C"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 15522,
											"end": 15549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 15522,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15497,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15497,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15497,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15497,
											"end": 15549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15497,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15497,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15572,
											"end": 15573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15564,
											"end": 15569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15564,
											"end": 15573,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 15560,
											"end": 15631,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15560,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 15560,
											"end": 15631,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "PUSH",
											"source": 8,
											"value": "6F4F5AB900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15560,
											"end": 15631,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 15560,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15656,
											"end": 15661,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15641,
											"end": 15662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15641,
											"end": 15662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15641,
											"end": 15662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 11843,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11894,
											"end": 11917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11959,
											"end": 11978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 11959,
											"end": 11980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11959,
											"end": 11980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11959,
											"end": 11980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11959,
											"end": 11994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11959,
											"end": 11994,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11920,
											"end": 11942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 11920,
											"end": 11944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11920,
											"end": 11944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 11920,
											"end": 11994,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 11920,
											"end": 11994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 11920,
											"end": 11994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11894,
											"end": 11994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11894,
											"end": 11994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12009,
											"end": 12024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12029,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12005,
											"end": 12089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 12005,
											"end": 12089,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 12070,
											"end": 12075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 12070,
											"end": 12077,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 12070,
											"end": 12077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DC69DC1600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 12052,
											"end": 12078,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12078,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12005,
											"end": 12089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 12005,
											"end": 12089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12099,
											"end": 12108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12099,
											"end": 12117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 12118,
											"end": 12128,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12130,
											"end": 12145,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 12099,
											"end": 12146,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 12099,
											"end": 12146,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 12173,
											"end": 12180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 12173,
											"end": 12178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 12173,
											"end": 12180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12173,
											"end": 12180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 12173,
											"end": 12180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12197,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 12162,
											"end": 12198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12198,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 11884,
											"end": 12205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 15012,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 14826,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14901,
											"end": 14924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14973,
											"end": 14996,
											"name": "PUSH",
											"source": 8,
											"value": "34D79759018DD62B1C8D40A6535099F131828AA4665B939ADF68C4556B516400"
										},
										{
											"begin": 14963,
											"end": 14996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14963,
											"end": 14996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 15012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 15012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15745,
											"end": 15874,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 15745,
											"end": 15874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15795,
											"end": 15802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15840,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15821,
											"end": 15840,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15840,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 15841,
											"end": 15851,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 15861,
											"end": 15865,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 15821,
											"end": 15867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 15821,
											"end": 15867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 15821,
											"end": 15867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 15867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 15867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15745,
											"end": 15874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15745,
											"end": 15874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16402,
											"end": 16415,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16500,
											"end": 16501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16444,
											"end": 16502,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16444,
											"end": 16502,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 16444,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 16444,
											"end": 16463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16463,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 16444,
											"end": 16463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16474,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16444,
											"end": 16474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16475,
											"end": 16487,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16475,
											"end": 16487,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 16444,
											"end": 16488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16444,
											"end": 16488,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16502,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16444,
											"end": 16502,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16502,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16427,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 16427,
											"end": 16579,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16567,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16567,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "PUSH",
											"source": 8,
											"value": "30A58C0700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 16534,
											"end": 16568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16568,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16427,
											"end": 16579,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 16427,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16589,
											"end": 16609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 16642,
											"end": 16653,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 16653,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16667,
											"end": 16679,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16667,
											"end": 16679,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16612,
											"end": 16628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 16612,
											"end": 16689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16612,
											"end": 16689,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 16612,
											"end": 16689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16589,
											"end": 16689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16589,
											"end": 16689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16754,
											"end": 16755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16704,
											"end": 16756,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16704,
											"end": 16756,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 16704,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 16704,
											"end": 16723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16723,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 16704,
											"end": 16723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16734,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16704,
											"end": 16734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16735,
											"end": 16741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 16704,
											"end": 16742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16704,
											"end": 16742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16756,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16704,
											"end": 16756,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16756,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 16700,
											"end": 16810,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "PUSH",
											"source": 8,
											"value": "C5E8402D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16810,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 16700,
											"end": 16810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16827,
											"end": 16833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16820,
											"end": 16833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16820,
											"end": 16833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16820,
											"end": 16833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16925,
											"end": 17097,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 16925,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 16993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17006,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 17006,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17006,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 17052,
											"end": 17056,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 17071,
											"end": 17080,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 16984,
											"end": 17090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 16984,
											"end": 17090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16925,
											"end": 17097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16925,
											"end": 17097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16012,
											"end": 16205,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 16012,
											"end": 16205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16089,
											"end": 16114,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16163,
											"end": 16189,
											"name": "PUSH",
											"source": 8,
											"value": "64D6FF49462C7266E92C8AA47370A483B3BB1C9FF7216E1D88A62C1EB24FFB00"
										},
										{
											"begin": 16153,
											"end": 16189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16153,
											"end": 16189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16012,
											"end": 16205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16012,
											"end": 16205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15145,
											"end": 15325,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 15145,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15218,
											"end": 15239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15288,
											"end": 15309,
											"name": "PUSH",
											"source": 8,
											"value": "249F20EE916056548CFE0204D9EA4281F252680318BB5252F87AA5A31EC81E00"
										},
										{
											"begin": 15278,
											"end": 15309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15145,
											"end": 15325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15145,
											"end": 15325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17163,
											"end": 17285,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 17163,
											"end": 17285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17218,
											"end": 17225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17244,
											"end": 17253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17263,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17244,
											"end": 17263,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17263,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 17272,
											"end": 17276,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 17244,
											"end": 17278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 17244,
											"end": 17278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 17244,
											"end": 17278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17237,
											"end": 17278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17237,
											"end": 17278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17163,
											"end": 17285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17163,
											"end": 17285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14491,
											"end": 14511,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14586,
											"end": 14597,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14586,
											"end": 14597,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "PUSH",
											"source": 8,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14648,
											"end": 14660,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14648,
											"end": 14660,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 14552,
											"end": 14674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14552,
											"end": 14674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14523,
											"end": 14684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14523,
											"end": 14684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 775,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 835,
											"end": 838,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 828,
											"end": 832,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 816,
											"end": 833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 812,
											"end": 839,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 802,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 843,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 802,
											"end": 924,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 943,
											"end": 963,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 933,
											"end": 963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 975,
											"end": 1005,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1008,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1160,
											"end": 1166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1173,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1154,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1142,
											"end": 1174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1180,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1183,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 717,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1347,
											"end": 1353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1402,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 1410,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1543,
											"end": 1560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 1610,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1769,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1723,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 1973,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 1974,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1979,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1944,
											"end": 2063,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1944,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1944,
											"end": 2063,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 1982,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1982,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1944,
											"end": 2063,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1944,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2133,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2149,
											"end": 2179,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2146,
											"end": 2263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2182,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2182,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2261,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2182,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2146,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2295,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2360,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2295,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2360,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2360,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2435,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2486,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2487,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2571,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 2454,
											"end": 2571,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2490,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2490,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2569,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2490,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2571,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 2454,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2603,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2651,
											"end": 2657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2649,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2603,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2603,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2603,
											"end": 2668,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2603,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2668,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2668,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2810,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2757,
											"end": 2811,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2919,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 2823,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2907,
											"end": 2912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 2889,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2919,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 3043,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 2925,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 3012,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3036,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 3012,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 3043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 3043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 3043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3271,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3049,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3193,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3264,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3193,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3271,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3354,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3277,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3348,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3478,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 3360,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3465,
											"end": 3470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3447,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3447,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3435,
											"end": 3472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3696,
											"end": 3697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3681,
											"end": 3698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 3628,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3834,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 3712,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3785,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3809,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3785,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3775,
											"end": 3810,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3765,
											"end": 3828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3828,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3765,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3979,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 3840,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3902,
											"end": 3931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3902,
											"end": 3931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3967,
											"end": 3972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 3940,
											"end": 3973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3979,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3979,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4314,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3985,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4091,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4096,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4099,
											"end": 4178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4289,
											"end": 4296,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4244,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4442,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4320,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4411,
											"end": 4416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4393,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4418,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 4373,
											"end": 4436,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4436,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 4373,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4587,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4448,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4494,
											"end": 4499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4548,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4548,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4548,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4548,
											"end": 4581,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4548,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4587,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5212,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4593,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4737,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4723,
											"end": 4732,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4733,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4738,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4822,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 4703,
											"end": 4822,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4741,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4741,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4820,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4741,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4822,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 4703,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4886,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4931,
											"end": 4938,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4886,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4886,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4886,
											"end": 4939,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4886,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4939,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5014,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5067,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5014,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5116,
											"end": 5118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 5187,
											"end": 5194,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5176,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5163,
											"end": 5185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5142,
											"end": 5195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5195,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 5142,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5132,
											"end": 5195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5132,
											"end": 5195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5547,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 5218,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5312,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5297,
											"end": 5329,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5413,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5294,
											"end": 5413,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 5332,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5332,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5411,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 5332,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5413,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5294,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5522,
											"end": 5529,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5511,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5477,
											"end": 5530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5530,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5477,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5547,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5885,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 5553,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5714,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5793,
											"end": 5794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5791,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5775,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5725,
											"end": 5796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5796,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5725,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5874,
											"end": 5876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5863,
											"end": 5872,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5859,
											"end": 5877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5856,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5806,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5878,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5806,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5885,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5885,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6039,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5891,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6004,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6039,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6039,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6191,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6045,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6135,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6149,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6165,
											"end": 6181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6158,
											"end": 6185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6551,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6221,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 6440,
											"end": 6446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6438,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6358,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6358,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6358,
											"end": 6447,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 6358,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6447,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 6506,
											"end": 6512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6494,
											"end": 6499,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6457,
											"end": 6513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6513,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 6457,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6533,
											"end": 6536,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6529,
											"end": 6545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6551,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6551,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6852,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 6557,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 6822,
											"end": 6825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6805,
											"end": 6811,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6721,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6826,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 6721,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6714,
											"end": 6826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6714,
											"end": 6826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 6846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 6846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6852,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6852,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 7027,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6858,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6942,
											"end": 6953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6971,
											"end": 6974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6964,
											"end": 6983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7016,
											"end": 7020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7011,
											"end": 7014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 7027,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 7027,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 7027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 7027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 7027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7135,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7033,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7127,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7121,
											"end": 7128,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7109,
											"end": 7114,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7101,
											"end": 7129,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7482,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 7165,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 7348,
											"end": 7354,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7346,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 7284,
											"end": 7355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7355,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 7284,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7355,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7365,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 7414,
											"end": 7420,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7412,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7407,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7365,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 7365,
											"end": 7421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7365,
											"end": 7421,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 7365,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7446,
											"end": 7475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7475,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 7446,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7444,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7437,
											"end": 7476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7482,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7482,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7821,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7488,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7688,
											"end": 7708,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7684,
											"end": 7685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7673,
											"end": 7682,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 7686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7662,
											"end": 7709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7800,
											"end": 7806,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7798,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 7726,
											"end": 7814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7814,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 7726,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7821,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7821,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7926,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7827,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7879,
											"end": 7885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7919,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 8178,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7932,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8034,
											"end": 8035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8031,
											"end": 8044,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8122,
											"end": 8123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8098,
											"end": 8101,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8094,
											"end": 8105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8061,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8056,
											"end": 8057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 8023,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8167,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8156,
											"end": 8159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8152,
											"end": 8168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 8178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 8178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 8178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 8178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8574,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 8184,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 8293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8318,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 8318,
											"end": 8357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8318,
											"end": 8357,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 8318,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 8455,
											"end": 8461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8450,
											"end": 8453,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 8373,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8462,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 8373,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8462,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8366,
											"end": 8462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 8529,
											"end": 8535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8521,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8510,
											"end": 8515,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8506,
											"end": 8522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 8471,
											"end": 8536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8536,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 8471,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8545,
											"end": 8568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8545,
											"end": 8568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8574,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8855,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8580,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8712,
											"end": 8715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8816,
											"end": 8822,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8734,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 8734,
											"end": 8829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8734,
											"end": 8829,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 8734,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8861,
											"end": 9041,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 8861,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8986,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8906,
											"end": 8907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9010,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9003,
											"end": 9004,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9030,
											"end": 9034,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9027,
											"end": 9028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9035,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9238,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 9047,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 9124,
											"end": 9125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 9106,
											"end": 9126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9126,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 9106,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 9158,
											"end": 9159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 9140,
											"end": 9160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9160,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 9140,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9160,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9180,
											"end": 9181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9207,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9208,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9195,
											"end": 9231,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9195,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 9195,
											"end": 9231,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 9211,
											"end": 9229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9195,
											"end": 9231,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 9195,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9238,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9244,
											"end": 9621,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 9244,
											"end": 9621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 9393,
											"end": 9398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9360,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 9360,
											"end": 9399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9360,
											"end": 9399,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 9360,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9415,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 9479,
											"end": 9485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9477,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9415,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 9415,
											"end": 9486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9415,
											"end": 9486,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 9415,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9486,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9548,
											"end": 9551,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9541,
											"end": 9545,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9534,
											"end": 9539,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9530,
											"end": 9546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 9495,
											"end": 9560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9560,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 9495,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 9607,
											"end": 9613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 9585,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9614,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 9585,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9580,
											"end": 9583,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9244,
											"end": 9621,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9244,
											"end": 9621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9244,
											"end": 9621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9244,
											"end": 9621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9244,
											"end": 9621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9940,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 9627,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9740,
											"end": 9744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9780,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9763,
											"end": 9781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9755,
											"end": 9781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9755,
											"end": 9781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9821,
											"end": 9825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9817,
											"end": 9837,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9791,
											"end": 9838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9855,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9928,
											"end": 9932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9919,
											"end": 9925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9855,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 9855,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9855,
											"end": 9933,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9855,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9940,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10356,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 9946,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9986,
											"end": 9993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 10027,
											"end": 10028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10009,
											"end": 10029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 10061,
											"end": 10062,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10043,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10063,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10100,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 10138,
											"end": 10149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10120,
											"end": 10150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10150,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 10120,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10109,
											"end": 10150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10109,
											"end": 10150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10290,
											"end": 10297,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10286,
											"end": 10301,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10302,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10261,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10253,
											"end": 10262,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10233,
											"end": 10316,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 10210,
											"end": 10349,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 10329,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 10329,
											"end": 10347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10347,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 10329,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10349,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 10210,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10542,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 10362,
											"end": 10542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 10487,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10400,
											"end": 10488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10511,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10504,
											"end": 10505,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10497,
											"end": 10512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10535,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10528,
											"end": 10529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10521,
											"end": 10536,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10733,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 10548,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10588,
											"end": 10589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10605,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10605,
											"end": 10625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10625,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 10605,
											"end": 10625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10625,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10639,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 10657,
											"end": 10658,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10639,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10639,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10639,
											"end": 10659,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 10639,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10634,
											"end": 10659,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10634,
											"end": 10659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10678,
											"end": 10679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10668,
											"end": 10703,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 10683,
											"end": 10701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10703,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10668,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10722,
											"end": 10723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10713,
											"end": 10727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10713,
											"end": 10727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10733,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10886,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10739,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10877,
											"end": 10880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10886,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10886,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 11006,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 10892,
											"end": 11006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 11006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 11006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11012,
											"end": 11410,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 11012,
											"end": 11410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11171,
											"end": 11174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 11273,
											"end": 11274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11268,
											"end": 11271,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 11192,
											"end": 11275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 11192,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11185,
											"end": 11275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11185,
											"end": 11275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 11373,
											"end": 11376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 11284,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11377,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 11284,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11402,
											"end": 11403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11393,
											"end": 11404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11012,
											"end": 11410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11012,
											"end": 11410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11012,
											"end": 11410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11012,
											"end": 11410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11795,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 11416,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11600,
											"end": 11603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 11765,
											"end": 11768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11622,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 11622,
											"end": 11769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11622,
											"end": 11769,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 11622,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11615,
											"end": 11769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11615,
											"end": 11769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 11789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 11789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11899,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 11801,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11886,
											"end": 11891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11880,
											"end": 11892,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11870,
											"end": 11892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11870,
											"end": 11892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11905,
											"end": 12073,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 11905,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11988,
											"end": 11999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12022,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12010,
											"end": 12029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12062,
											"end": 12066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12057,
											"end": 12060,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12053,
											"end": 12067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12038,
											"end": 12067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12038,
											"end": 12067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11905,
											"end": 12073,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11905,
											"end": 12073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11905,
											"end": 12073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11905,
											"end": 12073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11905,
											"end": 12073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12452,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 12079,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 12225,
											"end": 12230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12193,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 12193,
											"end": 12231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12193,
											"end": 12231,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 12193,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 12310,
											"end": 12316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12305,
											"end": 12308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 12247,
											"end": 12317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12317,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 12247,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12240,
											"end": 12317,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12240,
											"end": 12317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12326,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12382,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12372,
											"end": 12376,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12365,
											"end": 12370,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12361,
											"end": 12377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12326,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 12326,
											"end": 12391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12326,
											"end": 12391,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 12326,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 12438,
											"end": 12444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12416,
											"end": 12445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12445,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 12416,
											"end": 12445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12411,
											"end": 12414,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12400,
											"end": 12446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12400,
											"end": 12446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12169,
											"end": 12452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12452,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12877,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 12458,
											"end": 12877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12635,
											"end": 12637,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12624,
											"end": 12633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12648,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 12716,
											"end": 12717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12705,
											"end": 12714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 12718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12692,
											"end": 12698,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12648,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12648,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12648,
											"end": 12719,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 12648,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12766,
											"end": 12775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 12776,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12751,
											"end": 12753,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12740,
											"end": 12749,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12794,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 12865,
											"end": 12869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12856,
											"end": 12862,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12794,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 12794,
											"end": 12870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12794,
											"end": 12870,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 12794,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12786,
											"end": 12870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12786,
											"end": 12870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12877,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12877,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 13077,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 12883,
											"end": 13077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12923,
											"end": 12927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12943,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 12961,
											"end": 12962,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12943,
											"end": 12963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12963,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 12943,
											"end": 12963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 12963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 12963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12977,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 12995,
											"end": 12996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12977,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12977,
											"end": 12997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12977,
											"end": 12997,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 12977,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13021,
											"end": 13022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13018,
											"end": 13019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13014,
											"end": 13023,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13006,
											"end": 13023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13006,
											"end": 13023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13046,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13047,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13033,
											"end": 13070,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13033,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 13033,
											"end": 13070,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 13050,
											"end": 13068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13033,
											"end": 13070,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 13033,
											"end": 13070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 13077,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 13077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 13077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 13077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 13077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13083,
											"end": 13415,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 13083,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13204,
											"end": 13208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13242,
											"end": 13244,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13231,
											"end": 13240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13227,
											"end": 13245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13219,
											"end": 13245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13219,
											"end": 13245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 13323,
											"end": 13324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13308,
											"end": 13325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13305,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 13255,
											"end": 13326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13326,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 13255,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13336,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 13404,
											"end": 13406,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13402,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13389,
											"end": 13407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13380,
											"end": 13386,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13336,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 13336,
											"end": 13408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13336,
											"end": 13408,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 13336,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13083,
											"end": 13415,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13083,
											"end": 13415,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13083,
											"end": 13415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13083,
											"end": 13415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13083,
											"end": 13415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13083,
											"end": 13415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13511,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13421,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13455,
											"end": 13462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13498,
											"end": 13503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13491,
											"end": 13504,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13505,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13473,
											"end": 13505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13473,
											"end": 13505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13517,
											"end": 13633,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 13517,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13587,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 13602,
											"end": 13607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13587,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13587,
											"end": 13608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13587,
											"end": 13608,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 13587,
											"end": 13608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13577,
											"end": 13609,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 13567,
											"end": 13627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13623,
											"end": 13624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13620,
											"end": 13621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13613,
											"end": 13625,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13627,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 13567,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13517,
											"end": 13633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13517,
											"end": 13633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13639,
											"end": 13776,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 13639,
											"end": 13776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13718,
											"end": 13731,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13740,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 13764,
											"end": 13769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13740,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 13740,
											"end": 13770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13740,
											"end": 13770,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 13740,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13639,
											"end": 13776,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13639,
											"end": 13776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13639,
											"end": 13776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13639,
											"end": 13776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13639,
											"end": 13776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 14127,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 13782,
											"end": 14127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13849,
											"end": 13855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13898,
											"end": 13900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13886,
											"end": 13895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13877,
											"end": 13884,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13873,
											"end": 13896,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13901,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13985,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 13866,
											"end": 13985,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13904,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 13904,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 13904,
											"end": 13983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13904,
											"end": 13983,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 13904,
											"end": 13983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13985,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 13866,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14024,
											"end": 14025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14049,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 14102,
											"end": 14109,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14093,
											"end": 14099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14082,
											"end": 14091,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14049,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 14049,
											"end": 14110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14049,
											"end": 14110,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 14049,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 14127,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 14127,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 14127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 14127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 14127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14133,
											"end": 14218,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 14133,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14178,
											"end": 14185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14133,
											"end": 14218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14133,
											"end": 14218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14133,
											"end": 14218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14133,
											"end": 14218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14325,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 14224,
											"end": 14325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14260,
											"end": 14267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14300,
											"end": 14318,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14293,
											"end": 14298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14289,
											"end": 14319,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14278,
											"end": 14319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14278,
											"end": 14319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14325,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14391,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14331,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14359,
											"end": 14362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14380,
											"end": 14385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14373,
											"end": 14385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14373,
											"end": 14385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14391,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14553,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14397,
											"end": 14553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14487,
											"end": 14547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 14504,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 14513,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 14539,
											"end": 14544,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14513,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 14513,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14513,
											"end": 14545,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 14513,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14504,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14504,
											"end": 14546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14504,
											"end": 14546,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 14504,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14487,
											"end": 14547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 14487,
											"end": 14547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14487,
											"end": 14547,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 14487,
											"end": 14547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14474,
											"end": 14547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14474,
											"end": 14547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14704,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14559,
											"end": 14704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14653,
											"end": 14697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 14691,
											"end": 14696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14653,
											"end": 14697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14653,
											"end": 14697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14653,
											"end": 14697,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 14653,
											"end": 14697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14648,
											"end": 14651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14641,
											"end": 14698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14946,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 14710,
											"end": 14946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 14936,
											"end": 14937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 14934,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14921,
											"end": 14938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14912,
											"end": 14918,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14861,
											"end": 14939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14939,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 14861,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14946,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14952,
											"end": 15057,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 14952,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 14995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15050,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15021,
											"end": 15026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15051,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15006,
											"end": 15051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15006,
											"end": 15051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14952,
											"end": 15057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14952,
											"end": 15057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14952,
											"end": 15057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14952,
											"end": 15057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15183,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 15063,
											"end": 15183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15135,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 15152,
											"end": 15157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15135,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 15135,
											"end": 15158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15135,
											"end": 15158,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 15135,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15128,
											"end": 15133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15125,
											"end": 15159,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15115,
											"end": 15177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 15115,
											"end": 15177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15170,
											"end": 15171,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15163,
											"end": 15175,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15115,
											"end": 15177,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 15115,
											"end": 15177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15330,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 15189,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15245,
											"end": 15250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15276,
											"end": 15282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15270,
											"end": 15283,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15283,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15292,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 15318,
											"end": 15323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15292,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 15292,
											"end": 15324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15292,
											"end": 15324,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 15292,
											"end": 15324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15330,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15330,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15412,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15336,
											"end": 15412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15372,
											"end": 15379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15401,
											"end": 15406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 15406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 15406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15538,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 15418,
											"end": 15538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 15507,
											"end": 15512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15490,
											"end": 15513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15513,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 15490,
											"end": 15513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15483,
											"end": 15488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15480,
											"end": 15514,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15470,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 15470,
											"end": 15532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15525,
											"end": 15526,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15518,
											"end": 15530,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15470,
											"end": 15532,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 15470,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15685,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 15544,
											"end": 15685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15600,
											"end": 15605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15631,
											"end": 15637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15625,
											"end": 15638,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15616,
											"end": 15638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15616,
											"end": 15638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 15673,
											"end": 15678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 15647,
											"end": 15679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 15679,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 15647,
											"end": 15679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15691,
											"end": 15834,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 15691,
											"end": 15834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15748,
											"end": 15753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15773,
											"end": 15786,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 15786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 15786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15795,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 15822,
											"end": 15827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15795,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 15795,
											"end": 15828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15795,
											"end": 15828,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 15795,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15691,
											"end": 15834,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15691,
											"end": 15834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15691,
											"end": 15834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15691,
											"end": 15834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15691,
											"end": 15834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 15949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15951,
											"end": 15957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15959,
											"end": 15965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15973,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15975,
											"end": 15981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16024,
											"end": 16027,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 16012,
											"end": 16021,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16003,
											"end": 16010,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15999,
											"end": 16022,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15995,
											"end": 16028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15992,
											"end": 16112,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15992,
											"end": 16112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 15992,
											"end": 16112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16031,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 16031,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 16031,
											"end": 16110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16031,
											"end": 16110,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 16031,
											"end": 16110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15992,
											"end": 16112,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 15992,
											"end": 16112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16151,
											"end": 16152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16176,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 16231,
											"end": 16238,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16211,
											"end": 16220,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16176,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16176,
											"end": 16239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16176,
											"end": 16239,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 16176,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16166,
											"end": 16239,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 16166,
											"end": 16239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16122,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16288,
											"end": 16290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16314,
											"end": 16377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 16369,
											"end": 16376,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16360,
											"end": 16366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16358,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16345,
											"end": 16367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16314,
											"end": 16377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 16314,
											"end": 16377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16314,
											"end": 16377,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 16314,
											"end": 16377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16304,
											"end": 16377,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 16304,
											"end": 16377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16426,
											"end": 16428,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16452,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 16508,
											"end": 16515,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16499,
											"end": 16505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16488,
											"end": 16497,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16452,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 16452,
											"end": 16516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16452,
											"end": 16516,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 16452,
											"end": 16516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16442,
											"end": 16516,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16442,
											"end": 16516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16397,
											"end": 16526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16565,
											"end": 16567,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16591,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 16647,
											"end": 16654,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 16644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16627,
											"end": 16636,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16623,
											"end": 16645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16591,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 16591,
											"end": 16655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16591,
											"end": 16655,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 16591,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 16655,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 16655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16536,
											"end": 16665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16704,
											"end": 16707,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16731,
											"end": 16794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 16786,
											"end": 16793,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16777,
											"end": 16783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16766,
											"end": 16775,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16762,
											"end": 16784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16731,
											"end": 16794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16731,
											"end": 16794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16731,
											"end": 16794,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 16731,
											"end": 16794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16721,
											"end": 16794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16721,
											"end": 16794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15840,
											"end": 16811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 17149,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 16817,
											"end": 17149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16938,
											"end": 16942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16976,
											"end": 16978,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16965,
											"end": 16974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16961,
											"end": 16979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16953,
											"end": 16979,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16953,
											"end": 16979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 17057,
											"end": 17058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17046,
											"end": 17055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17042,
											"end": 17059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17033,
											"end": 17039,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 16989,
											"end": 17060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 17060,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 16989,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17070,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 17138,
											"end": 17140,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17127,
											"end": 17136,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17114,
											"end": 17120,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17070,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 17070,
											"end": 17142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17070,
											"end": 17142,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 17070,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 17149,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 17149,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 17149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 17149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 17149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 17149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17506,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 17155,
											"end": 17506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17225,
											"end": 17231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17274,
											"end": 17276,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17262,
											"end": 17271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17253,
											"end": 17260,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17249,
											"end": 17272,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17245,
											"end": 17277,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 17242,
											"end": 17361,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17242,
											"end": 17361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 17242,
											"end": 17361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17280,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 17280,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 17280,
											"end": 17359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17280,
											"end": 17359,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 17280,
											"end": 17359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17242,
											"end": 17361,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 17242,
											"end": 17361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17400,
											"end": 17401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17425,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 17481,
											"end": 17488,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17472,
											"end": 17478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17461,
											"end": 17470,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17425,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 17425,
											"end": 17489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17425,
											"end": 17489,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 17425,
											"end": 17489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17415,
											"end": 17489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17415,
											"end": 17489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17371,
											"end": 17499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17506,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17506,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17661,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17699,
											"end": 17701,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17688,
											"end": 17697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17684,
											"end": 17702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17676,
											"end": 17702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17676,
											"end": 17702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 17780,
											"end": 17781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17769,
											"end": 17778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17765,
											"end": 17782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17756,
											"end": 17762,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 17712,
											"end": 17783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17783,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 17712,
											"end": 17783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17793,
											"end": 17865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 17861,
											"end": 17863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17850,
											"end": 17859,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17846,
											"end": 17864,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17837,
											"end": 17843,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17793,
											"end": 17865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 17793,
											"end": 17865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17793,
											"end": 17865,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 17793,
											"end": 17865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17875,
											"end": 17947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 17943,
											"end": 17945,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17932,
											"end": 17941,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 17946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17919,
											"end": 17925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17875,
											"end": 17947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 17875,
											"end": 17947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17875,
											"end": 17947,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 17875,
											"end": 17947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18208,
											"end": 18211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18230,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 18331,
											"end": 18334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18322,
											"end": 18328,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18314,
											"end": 18320,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 18230,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 18230,
											"end": 18335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18230,
											"end": 18335,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 18230,
											"end": 18335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18223,
											"end": 18335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18223,
											"end": 18335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18352,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 18443,
											"end": 18446,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18434,
											"end": 18440,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18352,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 18352,
											"end": 18447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18352,
											"end": 18447,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 18352,
											"end": 18447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18345,
											"end": 18447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18345,
											"end": 18447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18464,
											"end": 18569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 18565,
											"end": 18568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18556,
											"end": 18562,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18548,
											"end": 18554,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18464,
											"end": 18569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 18464,
											"end": 18569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18464,
											"end": 18569,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 18464,
											"end": 18569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18457,
											"end": 18569,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18457,
											"end": 18569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18586,
											"end": 18589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/DomainRegistry.sol",
								"contracts/interfaces/IDomainRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_getEthToUsdPriceFromOracle()": "fc8b2653",
							"buyChildDomainViaEth(string,string)": "37ee4b47",
							"buyChildDomainViaUsdc(string,string)": "225068c2",
							"buyDomainViaEth(string)": "1b0e17a3",
							"buyDomainViaUsdc(string)": "fbd43caa",
							"changePrice(uint256)": "a2b40d19",
							"getDomainOwner(string)": "25970115",
							"getRegistrationPriceInEth()": "2dd398b5",
							"getRegistrationPriceInUsdc()": "59e41286",
							"initialize(uint256,address,address)": "b4988fd0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdrawDomainEth()": "559aae74",
							"withdrawDomainUsdc()": "82702ff4",
							"withdrawEth()": "a0ef91df",
							"withdrawUsdc()": "fee84d4e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DomainAlreadyTaken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reciever\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"FailedToWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"incomingUsdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectingUsdc\",\"type\":\"uint256\"}],\"name\":\"IncorrectUsdcAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"incomingValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectingValue\",\"type\":\"uint256\"}],\"name\":\"IncorrectValueAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPriceFromOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"incomingDomain\",\"type\":\"string\"}],\"name\":\"ParentDomainNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"incomingValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectingValue\",\"type\":\"uint256\"}],\"name\":\"PriceEqualsZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"DomainRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reciever\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_getEthToUsdPriceFromOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"parentDomain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"childDomain\",\"type\":\"string\"}],\"name\":\"buyChildDomainViaEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"parentDomain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"childDomain\",\"type\":\"string\"}],\"name\":\"buyChildDomainViaUsdc\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"buyDomainViaEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"buyDomainViaUsdc\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"getDomainOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistrationPriceInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistrationPriceInUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_pricefeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDomainEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDomainUsdc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUsdc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Vadym Sushkov\",\"errors\":{\"DomainAlreadyTaken()\":[{\"details\":\"Error thrown when attempting to register a domain that already exists.\"}],\"FailedToWithdraw(address,bytes)\":[{\"details\":\"Error thrown when the withdrawal operation fails.\",\"params\":{\"data\":\"The error data.\"}}],\"IncorrectUsdcAmount(uint256,uint256)\":[{\"details\":\"Error thrown when the usdc provided is not equal to the expected amount of usdc.\",\"params\":{\"expectingUsdc\":\"The expected udc amount.\",\"incomingUsdc\":\"The value provided.\"}}],\"IncorrectValueAmount(uint256,uint256)\":[{\"details\":\"Error thrown when the value provided is not equal to the expected value.\",\"params\":{\"expectingValue\":\"The expected value.\",\"incomingValue\":\"The value provided.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidPriceFromOracle()\":[{\"details\":\"Error thrown when price from oracle is incorrect.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"NothingToWithdraw(address)\":[{\"details\":\"Error thrown when there is nothing to withdraw from the contract.\",\"params\":{\"requester\":\"The address of requester who request withdraw funds.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ParentDomainNotFound(string)\":[{\"details\":\"Error thrown when the parent domain is not found.\",\"params\":{\"incomingDomain\":\"The domain for which the parent domain is not found.\"}}],\"PriceEqualsZero(uint256,uint256)\":[{\"details\":\"Error thrown when the provided price equals to zero.\",\"params\":{\"expectingValue\":\"The expected value.\",\"incomingValue\":\"The value that caused the error.\"}}]},\"events\":{\"DomainRegistered(string,address)\":{\"details\":\"Event emitted when a domain is registered.\",\"params\":{\"controller\":\"The address of the controller of the domain.\",\"domain\":\"The domain name.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"PriceChanged(uint256)\":{\"details\":\"Event emitted when the price for domain registration is changed.\",\"params\":{\"newPrice\":\"The new price of the domain registration.\"}},\"Withdrawal(address,uint256)\":{\"details\":\"Event emitted when funds are withdrawn from the contract.\",\"params\":{\"amount\":\"The amount of funds withdrawn.\"}}},\"kind\":\"dev\",\"methods\":{\"_getEthToUsdPriceFromOracle()\":{\"details\":\"Returns current Eth/Usd price\"},\"buyChildDomainViaEth(string,string)\":{\"details\":\"Allows buying a child domain under a parent domain.\",\"params\":{\"childDomain\":\"The name of the child domain.\",\"parentDomain\":\"The parent domain under which to register the child domain.\"}},\"buyDomainViaEth(string)\":{\"details\":\"Buying a domain via eth\",\"params\":{\"domain\":\"The domain\"}},\"buyDomainViaUsdc(string)\":{\"details\":\"Buying a domain via usdc\",\"params\":{\"domain\":\"The domain\"}},\"changePrice(uint256)\":{\"details\":\"Change price for domain registration\",\"params\":{\"newPrice\":\"The new price of the domain\"}},\"initialize(uint256,address,address)\":{\"details\":\"Sets owner of the contract and price for domain registration\",\"params\":{\"initialPrice\":\"Sets default price for domains\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawDomainEth()\":{\"details\":\"Allows domain owners to withdraw their eth funds from the contract.\"},\"withdrawDomainUsdc()\":{\"details\":\"Allows domain owners to withdraw their usdc funds from the contract.\"},\"withdrawEth()\":{\"details\":\"Withdraw eth to the owner of the contract\"},\"withdrawUsdc()\":{\"details\":\"Withdraw usdc to the owner of the contract\"}},\"stateVariables\":{\"domainSeparator\":{\"details\":\"Separator used to concatenate domain names.\"},\"priceFeed\":{\"details\":\"Contract to get the latest price ETH/USD.\"},\"usdcToken\":{\"details\":\"Contract to interact with usdc token.\"}},\"title\":\"Domain Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdrawDomainEth()\":{\"notice\":\"This function allows domain owners to withdraw the eth funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts.\"},\"withdrawDomainUsdc()\":{\"notice\":\"This function allows domain owners to withdraw the usdc funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts.\"},\"withdrawEth()\":{\"notice\":\"Checks if the contract balance is not empty and then makes withdraw to \\\"owner\\\"\"},\"withdrawUsdc()\":{\"notice\":\"Checks if the contract balance is not empty and then makes withdraw to \\\"owner\\\"\"}},\"notice\":\"This contract allows registration and management of domains.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DomainRegistry.sol\":\"DomainRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/DomainRegistry.sol\":{\"keccak256\":\"0x3384eb304f0101f2536c507b002b7c3e584dbe04699269f60aae5bcbf4be275b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f230f39ce765472c5dae569533a274e2e60774e9be95ac24532804f7f716ecc\",\"dweb:/ipfs/QmSGnscxEFk2X61mGa8PMP8zxmM5bMqd1oEMUBJb7YtK6h\"]},\"contracts/interfaces/IDomainRegistry.sol\":{\"keccak256\":\"0x113a92e187502c1bc85503ceb99460064c6e22fa35d9d2bfb90a042c68763ebc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0b24722bf56c55c1602f51ce0d84a40907ebc8481f78a0318a09271abad8d4\",\"dweb:/ipfs/QmV5W8yDMUNbPTNMPpNbGFYRjCmZBgLstiseXqTQC5N83A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1263,
								"contract": "contracts/DomainRegistry.sol:DomainRegistry",
								"label": "priceFeed",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1267,
								"contract": "contracts/DomainRegistry.sol:DomainRegistry",
								"label": "usdcToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)618"
							}
						],
						"types": {
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)618": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"withdrawDomainEth()": {
								"notice": "This function allows domain owners to withdraw the eth funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts."
							},
							"withdrawDomainUsdc()": {
								"notice": "This function allows domain owners to withdraw the usdc funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts."
							},
							"withdrawEth()": {
								"notice": "Checks if the contract balance is not empty and then makes withdraw to \"owner\""
							},
							"withdrawUsdc()": {
								"notice": "Checks if the contract balance is not empty and then makes withdraw to \"owner\""
							}
						},
						"notice": "This contract allows registration and management of domains.",
						"version": 1
					}
				}
			},
			"contracts/interfaces/IDomainRegistry.sol": {
				"IDomainRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "parentDomain",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "childDomain",
									"type": "string"
								}
							],
							"name": "buyChildDomainViaEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domain",
									"type": "string"
								}
							],
							"name": "buyDomainViaEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domain",
									"type": "string"
								}
							],
							"name": "buyDomainViaUsdc",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "changePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDomainEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDomainUsdc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawUsdc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"buyChildDomainViaEth(string,string)": {
								"details": "Allows buying a child domain under a parent domain.",
								"params": {
									"childDomain": "The name of the child domain.",
									"parentDomain": "The parent domain under which to register the child domain."
								}
							},
							"buyDomainViaEth(string)": {
								"details": "Buying a domain via eth",
								"params": {
									"domain": "The domain"
								}
							},
							"buyDomainViaUsdc(string)": {
								"details": "Buying a domain via usdc",
								"params": {
									"domain": "The domain"
								}
							},
							"changePrice(uint256)": {
								"details": "Change price for domain registration",
								"params": {
									"newPrice": "The new price of the domain"
								}
							},
							"withdrawDomainEth()": {
								"details": "Allows domain owners to withdraw their eth funds from the contract."
							},
							"withdrawDomainUsdc()": {
								"details": "Allows domain owners to withdraw their usdc funds from the contract."
							},
							"withdrawEth()": {
								"details": "Withdraw eth to the owner of the contract"
							},
							"withdrawUsdc()": {
								"details": "Withdraw usdc to the owner of the contract"
							}
						},
						"title": "Domain Registry Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyChildDomainViaEth(string,string)": "37ee4b47",
							"buyDomainViaEth(string)": "1b0e17a3",
							"buyDomainViaUsdc(string)": "fbd43caa",
							"changePrice(uint256)": "a2b40d19",
							"withdrawDomainEth()": "559aae74",
							"withdrawDomainUsdc()": "82702ff4",
							"withdrawEth()": "a0ef91df",
							"withdrawUsdc()": "fee84d4e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"parentDomain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"childDomain\",\"type\":\"string\"}],\"name\":\"buyChildDomainViaEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"buyDomainViaEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"buyDomainViaUsdc\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDomainEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDomainUsdc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUsdc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyChildDomainViaEth(string,string)\":{\"details\":\"Allows buying a child domain under a parent domain.\",\"params\":{\"childDomain\":\"The name of the child domain.\",\"parentDomain\":\"The parent domain under which to register the child domain.\"}},\"buyDomainViaEth(string)\":{\"details\":\"Buying a domain via eth\",\"params\":{\"domain\":\"The domain\"}},\"buyDomainViaUsdc(string)\":{\"details\":\"Buying a domain via usdc\",\"params\":{\"domain\":\"The domain\"}},\"changePrice(uint256)\":{\"details\":\"Change price for domain registration\",\"params\":{\"newPrice\":\"The new price of the domain\"}},\"withdrawDomainEth()\":{\"details\":\"Allows domain owners to withdraw their eth funds from the contract.\"},\"withdrawDomainUsdc()\":{\"details\":\"Allows domain owners to withdraw their usdc funds from the contract.\"},\"withdrawEth()\":{\"details\":\"Withdraw eth to the owner of the contract\"},\"withdrawUsdc()\":{\"details\":\"Withdraw usdc to the owner of the contract\"}},\"title\":\"Domain Registry Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdrawDomainEth()\":{\"notice\":\"This function allows domain owners to withdraw the eth funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts.\"},\"withdrawDomainUsdc()\":{\"notice\":\"This function allows domain owners to withdraw the usdc funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts.\"},\"withdrawEth()\":{\"notice\":\"Checks if the contract balance is not empty and then makes withdraw to \\\"owner\\\"\"},\"withdrawUsdc()\":{\"notice\":\"Checks if the contract balance is not empty and then makes withdraw to \\\"owner\\\"\"}},\"notice\":\"This interface defines the methods required for interacting with a domain registry contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDomainRegistry.sol\":\"IDomainRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDomainRegistry.sol\":{\"keccak256\":\"0x113a92e187502c1bc85503ceb99460064c6e22fa35d9d2bfb90a042c68763ebc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0b24722bf56c55c1602f51ce0d84a40907ebc8481f78a0318a09271abad8d4\",\"dweb:/ipfs/QmV5W8yDMUNbPTNMPpNbGFYRjCmZBgLstiseXqTQC5N83A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"withdrawDomainEth()": {
								"notice": "This function allows domain owners to withdraw the eth funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts."
							},
							"withdrawDomainUsdc()": {
								"notice": "This function allows domain owners to withdraw the usdc funds deposited for their domains.Only the domain owner can invoke this function.If the domain owner has no funds deposited, the function reverts."
							},
							"withdrawEth()": {
								"notice": "Checks if the contract balance is not empty and then makes withdraw to \"owner\""
							},
							"withdrawUsdc()": {
								"notice": "Checks if the contract balance is not empty and then makes withdraw to \"owner\""
							}
						},
						"notice": "This interface defines the methods required for interacting with a domain registry contract.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							540
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						]
					},
					"id": 241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 541,
							"src": "128:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 540,
										"src": "136:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 495,
							"src": "196:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "204:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 53,
										"name": "Initializable",
										"nameLocations": [
											"789:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "789:13:1"
									},
									"id": 54,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:1"
								},
								{
									"baseName": {
										"id": 55,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 540,
										"src": "804:18:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240,
								540,
								494
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 60,
									"members": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "931:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 58,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:1",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "899:53:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 63,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "1069:116:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 61,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1270:81:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:1",
													"nodeType": "YulBlock",
													"src": "1289:56:1",
													"statements": [
														{
															"nativeSrc": "1303:32:1",
															"nodeType": "YulAssignment",
															"src": "1303:32:1",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:1",
																"nodeType": "YulIdentifier",
																"src": "1313:22:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 67,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 63,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:1",
														"valueSize": 1
													}
												],
												"id": 69,
												"nodeType": "InlineAssembly",
												"src": "1280:65:1"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1244:24:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 66,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 65,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 60,
														"src": "1244:14:1"
													},
													"referencedDeclaration": 60,
													"src": "1244:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:1"
									},
									"scope": 240,
									"src": "1192:159:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 76,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1480:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:1"
									},
									"src": "1447:50:1"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 81,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:1"
									},
									"src": "1590:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 87,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:1"
									},
									"src": "1637:84:1"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1919:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1929:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "1902:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1871:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:1"
									},
									"scope": 240,
									"src": "1847:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2062:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2076:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 108,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "2072:95:1",
												"trueBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "2104:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 113,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2125:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 119,
															"nodeType": "RevertStatement",
															"src": "2118:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2195:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:1"
											}
										]
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 104,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2045:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2014:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:1"
									},
									"scope": 240,
									"src": "1980:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 130,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:1"
											},
											{
												"id": 133,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 135,
									"name": "onlyOwner",
									"nameLocation": "2312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:1"
									},
									"src": "2303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2496:89:1",
										"statements": [
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "2506:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 142,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 141,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "2506:14:1"
															},
															"referencedDeclaration": 60,
															"src": "2506:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 144,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "2533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:1"
											},
											{
												"expression": {
													"expression": {
														"id": 147,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "2570:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 140,
												"id": 149,
												"nodeType": "Return",
												"src": "2563:15:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:1"
									},
									"scope": 240,
									"src": "2441:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2703:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 155,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2717:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 157,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "2728:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2713:101:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2742:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 161,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "2790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 160,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2763:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2756:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:1"
									},
									"scope": 240,
									"src": "2658:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "3209:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 174,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3219:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 171,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3199:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:1"
									},
									"scope": 240,
									"src": "3155:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "3475:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3489:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 191,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "3485:91:1",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3513:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 197,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 196,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "3534:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 202,
															"nodeType": "RevertStatement",
															"src": "3527:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 205,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3585:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "3465:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3432:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:1"
									},
									"scope": 240,
									"src": "3405:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3837:185:1",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3847:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 217,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 216,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 60,
																"src": "3847:14:1"
															},
															"referencedDeclaration": 60,
															"src": "3847:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 219,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "3874:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$60_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:1"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3904:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"expression": {
														"id": 224,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 59,
													"src": "3923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:1"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 227,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$60_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:1",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 59,
														"src": "3941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 234,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3996:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3975:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "EmitStatement",
												"src": "3970:45:1"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3802:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:1"
									},
									"scope": 240,
									"src": "3774:248:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 241,
							"src": "749:3275:1",
							"usedErrors": [
								76,
								81,
								257,
								260
							],
							"usedEvents": [
								87,
								265
							]
						}
					],
					"src": "102:3923:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							494
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "Initializable",
							"nameLocation": "2367:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:2",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 251,
									"members": [
										{
											"constant": false,
											"id": 247,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2813:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 246,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 251,
											"src": "2950:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 249,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:2",
									"nodeType": "StructDefinition",
									"scope": 494,
									"src": "2685:290:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 494,
									"src": "3098:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 252,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:2",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 257,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:2"
									},
									"src": "3285:30:2"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:2",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 260,
									"name": "NotInitializing",
									"nameLocation": "3389:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"src": "3383:24:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 265,
									"name": "Initialized",
									"nameLocation": "3514:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3526:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 262,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:2"
									},
									"src": "3508:34:2"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4092:1081:2",
										"statements": [
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4158:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 269,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 268,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "4158:20:2"
															},
															"referencedDeclaration": 251,
															"src": "4158:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 271,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4191:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:2"
											},
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 274,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:2",
													"subExpression": {
														"expression": {
															"id": 276,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4302:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "4302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:2"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4327:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 280,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"expression": {
														"id": 282,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "4348:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "4348:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:2"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4706:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 287,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4726:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 290,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "4746:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:2"
											},
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4770:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 295,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4790:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 300,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$494",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:2",
														"subExpression": {
															"id": 308,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4856:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:2",
														"subExpression": {
															"id": 310,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4873:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "4851:91:2",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "4887:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 313,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "4908:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 315,
															"nodeType": "RevertStatement",
															"src": "4901:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 318,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4951:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "4951:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:2"
											},
											{
												"condition": {
													"id": 324,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "4983:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "IfStatement",
												"src": "4979:67:2",
												"trueBody": {
													"id": 331,
													"nodeType": "Block",
													"src": "4999:47:2",
													"statements": [
														{
															"expression": {
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 325,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5013:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 330,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:2"
														}
													]
												}
											},
											{
												"id": 333,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:2"
											},
											{
												"condition": {
													"id": 334,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "5070:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "IfStatement",
												"src": "5066:101:2",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "5086:81:2",
													"statements": [
														{
															"expression": {
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 335,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "5100:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 341,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5142:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 344,
															"nodeType": "EmitStatement",
															"src": "5137:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 348,
									"name": "initializer",
									"nameLocation": "4078:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:2"
									},
									"src": "4069:1104:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "6291:392:2",
										"statements": [
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "6357:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 354,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 353,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "6357:20:2"
															},
															"referencedDeclaration": 251,
															"src": "6357:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 356,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "6390:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 359,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6431:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6431:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 361,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6450:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:2",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 247,
															"src": "6450:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 363,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "6427:105:2",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "6477:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "6498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 368,
															"nodeType": "RevertStatement",
															"src": "6491:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 371,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6541:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "6541:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "6558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:2"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 377,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6575:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6575:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:2"
											},
											{
												"id": 383,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:2"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 384,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6618:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "6618:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 391,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 390,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "6656:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "EmitStatement",
												"src": "6651:25:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 395,
									"name": "reinitializer",
									"nameLocation": "6261:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6275:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 350,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:2"
									},
									"src": "6252:431:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "6921:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "6931:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:2"
											},
											{
												"id": 401,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:2"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 403,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:2"
									},
									"src": "6893:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7136:89:2",
										"statements": [
											{
												"condition": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 407,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7151:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7146:73:2",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "7170:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 410,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "7191:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "RevertStatement",
															"src": "7184:24:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:2",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:2"
									},
									"scope": 494,
									"src": "7084:141:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "7760:373:2",
										"statements": [
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "7826:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 421,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 420,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "7826:20:2"
															},
															"referencedDeclaration": 251,
															"src": "7826:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7859:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:2"
											},
											{
												"condition": {
													"expression": {
														"id": 426,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "7900:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "7900:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "7896:76:2",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "7917:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 428,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 430,
															"nodeType": "RevertStatement",
															"src": "7931:30:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 433,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "7985:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 435,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "7981:146:2",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "8021:106:2",
													"statements": [
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 441,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "8035:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:2",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "8035:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 445,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 444,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 454,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 453,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 452,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 451,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "8087:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 458,
															"nodeType": "EmitStatement",
															"src": "8082:34:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:2"
									},
									"scope": 494,
									"src": "7711:422:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "8308:63:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 468,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8325:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "8325:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 467,
												"id": 471,
												"nodeType": "Return",
												"src": "8318:46:2"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 465,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:2"
									},
									"scope": 494,
									"src": "8243:128:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "8543:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 479,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8560:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$251_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 250,
													"src": "8560:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 482,
												"nodeType": "Return",
												"src": "8553:47:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "8537:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:2"
									},
									"scope": 494,
									"src": "8487:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8827:80:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:2",
													"nodeType": "YulBlock",
													"src": "8846:55:2",
													"statements": [
														{
															"nativeSrc": "8860:31:2",
															"nodeType": "YulAssignment",
															"src": "8860:31:2",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:2",
																"nodeType": "YulIdentifier",
																"src": "8870:21:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:2",
														"valueSize": 1
													}
												],
												"id": 491,
												"nodeType": "InlineAssembly",
												"src": "8837:64:2"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:2",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8795:30:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 251,
														"src": "8795:20:2"
													},
													"referencedDeclaration": 251,
													"src": "8795:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$251_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:2"
									},
									"scope": 494,
									"src": "8737:170:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 495,
							"src": "2349:6560:2",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "113:8797:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							540
						],
						"Initializable": [
							494
						]
					},
					"id": 541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 495,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 500,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "728:13:3"
									},
									"id": 501,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 499,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 540,
							"linearizedBaseContracts": [
								540,
								494
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 504,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 503,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 540,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 509,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 540,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 518,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 520,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 540,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 527,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 526,
												"id": 529,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 540,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 535,
												"id": 537,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 540,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 541,
							"src": "688:505:3",
							"usedErrors": [
								257,
								260
							],
							"usedEvents": [
								265
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							618
						]
					},
					"id": 619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 542,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 543,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 618,
							"linearizedBaseContracts": [
								618
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 552,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 561,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 618,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 618,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 618,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 618,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 602,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 618,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 618,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 619,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								552,
								561
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							654
						]
					},
					"id": 655,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 620,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 621,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 654,
							"linearizedBaseContracts": [
								654
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 631,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 633,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 654,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 654,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 650,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 654,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 655,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1197
						],
						"IERC20": [
							618
						],
						"IERC20Permit": [
							654
						],
						"SafeERC20": [
							944
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 656,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 658,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 619,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 657,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 618,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 655,
							"src": "179:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 659,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 654,
										"src": "187:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1198,
							"src": "240:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 661,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1197,
										"src": "248:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 663,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 666,
									"libraryName": {
										"id": 664,
										"name": "Address",
										"nameLocations": [
											"781:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1197,
										"src": "781:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:6",
									"typeName": {
										"id": 665,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:6",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 671,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 680,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 692,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 695,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$618",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 585,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 697,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 698,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 699,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 693,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 691,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$618_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$618",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 682,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 618,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 944,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 718,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 721,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$618",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 617,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 723,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 724,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 726,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 719,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 717,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$618_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$618",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 706,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 618,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 944,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 748,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$944",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$944",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 746,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 744,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 595,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$618_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$618",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 734,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 733,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 618,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 944,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 803,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															774
														],
														"declarations": [
															{
																"constant": false,
																"id": 774,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 803,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 773,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 783,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 779,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$944",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$944",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 777,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 781,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 775,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$618",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 595,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 785,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 794,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 793,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 788,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 789,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 774,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 790,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 770,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 787,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 796,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$618",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 797,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 799,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$618",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 795,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$618_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$618",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 764,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 618,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 944,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 816,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 820,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$618",
																	"typeString": "contract IERC20"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 605,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 822,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 824,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 818,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 828,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$618",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 829,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$618",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 827,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$618_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 833,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$618",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 836,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 809,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$618",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 605,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 838,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 811,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 839,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 840,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 834,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$618",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 832,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$618_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 845,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$618",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 846,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$618",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 844,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$618_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$618",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 808,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 807,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 618,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 944,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "4129:559:6",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "4478:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 861,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "4532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 865,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "4512:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$618",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$618",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1018,
														"src": "4504:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 871,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "4551:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 877,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "4589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 878,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 880,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 875,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "4547:135:6",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "4610:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 887,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 856,
																				"src": "4664:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$618",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$618",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "4631:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "4624:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$618",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "4088:6:6"
													},
													"referencedDeclaration": 618,
													"src": "4088:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4102:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:6"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:6"
									},
									"scope": 944,
									"src": "4059:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "5278:489:6",
										"statements": [
											{
												"assignments": [
													906,
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "5574:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 905,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "5588:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"id": 914,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "5635:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 911,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "5623:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$618",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$618",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 909,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 917,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 918,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "5669:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 924,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "5706:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 925,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 927,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 922,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 930,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 934,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 898,
																			"src": "5738:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$618",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$618",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 932,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 904,
												"id": 941,
												"nodeType": "Return",
												"src": "5650:110:6"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "5222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$618",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 896,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "5222:6:6"
													},
													"referencedDeclaration": 618,
													"src": "5222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "5236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:6"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "5272:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 902,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:6"
									},
									"scope": 944,
									"src": "5189:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 945,
							"src": "751:5018:6",
							"usedErrors": [
								671,
								680
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1197
						]
					},
					"id": 1198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 946,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1197,
							"linearizedBaseContracts": [
								1197
							],
							"name": "Address",
							"nameLocation": "203:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:7",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 952,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "349:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:7"
									},
									"src": "316:50:7"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 957,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "475:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:7"
									},
									"src": "452:39:7"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:7",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 960,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:7"
									},
									"src": "591:24:7"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "1602:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 970,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1197",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1197",
																		"typeString": "library Address"
																	}
																],
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 968,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 973,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1640:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "1612:109:7",
												"trueBody": {
													"id": 982,
													"nodeType": "Block",
													"src": "1648:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 978,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1197",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1197",
																					"typeString": "library Address"
																				}
																			],
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 976,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 975,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "1669:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 981,
															"nodeType": "RevertStatement",
															"src": "1662:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													985,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1000,
														"src": "1732:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 984,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 986,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "1750:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 988,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "1772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:7"
											},
											{
												"condition": {
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:7",
													"subExpression": {
														"id": 993,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "1798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "1793:63:7",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "1807:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 995,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "1828:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 997,
															"nodeType": "RevertStatement",
															"src": "1821:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1550:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1577:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:7"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:7"
									},
									"scope": 1197,
									"src": "1531:331:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "2794:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "2833:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "2841:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1011,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2811:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1010,
												"id": 1016,
												"nodeType": "Return",
												"src": "2804:45:7"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2743:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2780:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:7"
									},
									"scope": 1197,
									"src": "2705:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "3293:279:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1032,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1197",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1197",
																		"typeString": "library Address"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1030,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1035,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "3331:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "3303:108:7",
												"trueBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "3338:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1040,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1197",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1197",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1038,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1037,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "3359:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1043,
															"nodeType": "RevertStatement",
															"src": "3352:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1047,
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "3421:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1046,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "3435:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1048,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"arguments": [
														{
															"id": 1054,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "3488:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1050,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "3462:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1052,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "3481:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1058,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "3537:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "3545:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1060,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "3554:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1057,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "3510:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1062,
												"nodeType": "Return",
												"src": "3503:62:7"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3227:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:7"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3279:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:7"
									},
									"scope": 1197,
									"src": "3180:392:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "3811:154:7",
										"statements": [
											{
												"assignments": [
													1075,
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "3822:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1074,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "3836:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1076,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"arguments": [
														{
															"id": 1080,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "3881:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1078,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3863:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3930:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1086,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "3947:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1083,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "3903:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1088,
												"nodeType": "Return",
												"src": "3896:62:7"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3739:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3755:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3797:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:7"
									},
									"scope": 1197,
									"src": "3711:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "4203:156:7",
										"statements": [
											{
												"assignments": [
													1101,
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "4214:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1100,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "4228:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1102,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "4275:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1110,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "4324:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "4332:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1112,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "4341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1109,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "4297:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1114,
												"nodeType": "Return",
												"src": "4290:62:7"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "4136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "4152:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "4189:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:7"
									},
									"scope": 1197,
									"src": "4106:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "4783:424:7",
										"statements": [
											{
												"condition": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:7",
													"subExpression": {
														"id": 1128,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "4798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "4857:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1135,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "5045:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1139,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1119,
																				"src": "5071:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1150,
															"nodeType": "IfStatement",
															"src": "5041:119:7",
															"trueBody": {
																"id": 1149,
																"nodeType": "Block",
																"src": "5096:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1119,
																					"src": "5138:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1145,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "5121:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1148,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1151,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "5180:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1127,
															"id": 1152,
															"nodeType": "Return",
															"src": "5173:17:7"
														}
													]
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "4793:408:7",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "4807:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1131,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "4829:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1130,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "4821:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "4670:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "4694:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "4716:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:7"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "4769:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:7"
									},
									"scope": 1197,
									"src": "4625:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "5509:122:7",
										"statements": [
											{
												"condition": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:7",
													"subExpression": {
														"id": 1166,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "5524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "5583:42:7",
													"statements": [
														{
															"expression": {
																"id": 1173,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "5604:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1165,
															"id": 1174,
															"nodeType": "Return",
															"src": "5597:17:7"
														}
													]
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "5519:106:7",
												"trueBody": {
													"id": 1172,
													"nodeType": "Block",
													"src": "5533:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1169,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "5555:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1168,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "5547:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1171,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "5433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "5447:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:7"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "5495:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:7"
									},
									"scope": 1197,
									"src": "5407:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "5798:461:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1184,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "5874:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "6204:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1190,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "6225:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1192,
															"nodeType": "RevertStatement",
															"src": "6218:24:7"
														}
													]
												},
												"id": 1194,
												"nodeType": "IfStatement",
												"src": "5870:383:7",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "5897:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:7",
																"nodeType": "YulBlock",
																"src": "6055:133:7",
																"statements": [
																	{
																		"nativeSrc": "6073:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:7"
																			},
																			"nativeSrc": "6096:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:7",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:7",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:7"
																					},
																					"nativeSrc": "6137:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:7"
																			},
																			"nativeSrc": "6130:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:7"
																		},
																		"nativeSrc": "6130:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1181,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1181,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:7",
																	"valueSize": 1
																}
															],
															"id": 1188,
															"nodeType": "InlineAssembly",
															"src": "6046:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5760:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:7"
									},
									"scope": 1197,
									"src": "5743:516:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1198,
							"src": "195:6066:7",
							"usedErrors": [
								952,
								957,
								960
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:7"
				},
				"id": 7
			},
			"contracts/DomainRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/DomainRegistry.sol",
					"exportedSymbols": {
						"Address": [
							1197
						],
						"AggregatorV3Interface": [
							45
						],
						"ContextUpgradeable": [
							540
						],
						"DomainRegistry": [
							2114
						],
						"IDomainRegistry": [
							2160
						],
						"IERC20": [
							618
						],
						"IERC20Permit": [
							654
						],
						"Initializable": [
							494
						],
						"OwnableUpgradeable": [
							240
						],
						"SafeERC20": [
							944
						]
					},
					"id": 2115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1199,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "contracts/interfaces/IDomainRegistry.sol",
							"file": "./interfaces/IDomainRegistry.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 2161,
							"src": "58:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 241,
							"src": "101:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 495,
							"src": "177:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 1203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 46,
							"src": "253:83:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 619,
							"src": "337:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 945,
							"src": "394:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1207,
										"name": "Initializable",
										"nameLocations": [
											"623:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "623:13:8"
									},
									"id": 1208,
									"nodeType": "InheritanceSpecifier",
									"src": "623:13:8"
								},
								{
									"baseName": {
										"id": 1209,
										"name": "IDomainRegistry",
										"nameLocations": [
											"642:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2160,
										"src": "642:15:8"
									},
									"id": 1210,
									"nodeType": "InheritanceSpecifier",
									"src": "642:15:8"
								},
								{
									"baseName": {
										"id": 1211,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"663:18:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 240,
										"src": "663:18:8"
									},
									"id": 1212,
									"nodeType": "InheritanceSpecifier",
									"src": "663:18:8"
								}
							],
							"canonicalName": "DomainRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1206,
								"nodeType": "StructuredDocumentation",
								"src": "461:130:8",
								"text": " @title Domain Registry\n @author Vadym Sushkov\n @notice This contract allows registration and management of domains."
							},
							"fullyImplemented": true,
							"id": 2114,
							"linearizedBaseContracts": [
								2114,
								240,
								540,
								2160,
								494
							],
							"name": "DomainRegistry",
							"nameLocation": "601:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1216,
									"libraryName": {
										"id": 1213,
										"name": "SafeERC20",
										"nameLocations": [
											"694:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "694:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "688:27:8",
									"typeName": {
										"id": 1215,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1214,
											"name": "IERC20",
											"nameLocations": [
												"708:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 618,
											"src": "708:6:8"
										},
										"referencedDeclaration": 618,
										"src": "708:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$618",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "DomainRegistry.DomainStorage",
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "721:58:8",
										"text": "@custom:storage-location erc7201:domainRegistry.domain"
									},
									"id": 1226,
									"members": [
										{
											"constant": false,
											"id": 1220,
											"mutability": "mutable",
											"name": "registrationPrice",
											"nameLocation": "947:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1226,
											"src": "939:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1225,
											"mutability": "mutable",
											"name": "domainList",
											"nameLocation": "1140:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1226,
											"src": "1113:37:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
												"typeString": "mapping(string => address)"
											},
											"typeName": {
												"id": 1224,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1121:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"nodeType": "Mapping",
												"src": "1113:26:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
													"typeString": "mapping(string => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DomainStorage",
									"nameLocation": "791:13:8",
									"nodeType": "StructDefinition",
									"scope": 2114,
									"src": "784:373:8",
									"visibility": "public"
								},
								{
									"canonicalName": "DomainRegistry.FundStorage",
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "1164:56:8",
										"text": "@custom:storage-location erc7201:domainRegistry.fund"
									},
									"id": 1236,
									"members": [
										{
											"constant": false,
											"id": 1230,
											"mutability": "mutable",
											"name": "frozenBalance",
											"nameLocation": "1446:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1236,
											"src": "1438:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1229,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1438:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1235,
											"mutability": "mutable",
											"name": "domainOwnersFunds",
											"nameLocation": "1664:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1236,
											"src": "1636:45:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1234,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1636:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FundStorage",
									"nameLocation": "1232:11:8",
									"nodeType": "StructDefinition",
									"scope": 2114,
									"src": "1225:463:8",
									"visibility": "public"
								},
								{
									"canonicalName": "DomainRegistry.UsdcFundStorage",
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "1694:60:8",
										"text": "@custom:storage-location erc7201:domainRegistry.usdcFund"
									},
									"id": 1246,
									"members": [
										{
											"constant": false,
											"id": 1240,
											"mutability": "mutable",
											"name": "frozenBalance",
											"nameLocation": "1984:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1246,
											"src": "1976:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1976:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1245,
											"mutability": "mutable",
											"name": "domainOwnersFunds",
											"nameLocation": "2202:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1246,
											"src": "2174:45:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1244,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2174:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UsdcFundStorage",
									"nameLocation": "1766:15:8",
									"nodeType": "StructDefinition",
									"scope": 2114,
									"src": "1759:467:8",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1249,
									"mutability": "constant",
									"name": "DOMAIN_STORAGE_LOCATION",
									"nameLocation": "2362:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "2337:125:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1247,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2337:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833346437393735393031386464363262316338643430613635333530393966313331383238616134363635623933396164663638633435353662353136343030",
										"id": 1248,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2396:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_23901184808554484060483172718868665239784335760876636197302590389742591894528_by_1",
											"typeString": "int_const 2390...(69 digits omitted)...4528"
										},
										"value": "0x34d79759018dd62b1c8d40a6535099f131828aa4665b939adf68c4556b516400"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1252,
									"mutability": "constant",
									"name": "FUND_STORAGE_LOCATION",
									"nameLocation": "2597:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "2572:123:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1250,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2572:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307832343966323065653931363035363534386366653032303464396561343238316632353236383033313862623532353266383761613561333165633831653030",
										"id": 1251,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2629:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16564418519957670298458855307886515763198751399586996422588185369484794011136_by_1",
											"typeString": "int_const 1656...(69 digits omitted)...1136"
										},
										"value": "0x249f20ee916056548cfe0204d9ea4281f252680318bb5252f87aa5a31ec81e00"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1255,
									"mutability": "constant",
									"name": "USDC_FUND_STORAGE_LOCATION",
									"nameLocation": "2834:26:8",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "2809:128:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1253,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2809:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836346436666634393436326337323636653932633861613437333730613438336233626231633966663732313665316438386136326331656232346666623030",
										"id": 1254,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2871:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_45611152050973896183474111038626069815352731958307229792658047790191150627584_by_1",
											"typeString": "int_const 4561...(69 digits omitted)...7584"
										},
										"value": "0x64d6ff49462c7266e92c8aa47370a483b3bb1c9ff7216e1d88a62c1eb24ffb00"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "2944:67:8",
										"text": " @dev Separator used to concatenate domain names."
									},
									"id": 1259,
									"mutability": "constant",
									"name": "domainSeparator",
									"nameLocation": "3040:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "3016:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1257,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3016:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2e",
										"id": 1258,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3058:3:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
											"typeString": "literal_string \".\""
										},
										"value": "."
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3068:65:8",
										"text": " @dev Contract to get the latest price ETH/USD."
									},
									"id": 1263,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "3168:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "3138:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1262,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1261,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"3138:21:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "3138:21:8"
										},
										"referencedDeclaration": 45,
										"src": "3138:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "3184:61:8",
										"text": " @dev Contract to interact with usdc token."
									},
									"id": 1267,
									"mutability": "mutable",
									"name": "usdcToken",
									"nameLocation": "3265:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "3250:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$618",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1266,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1265,
											"name": "IERC20",
											"nameLocations": [
												"3250:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 618,
											"src": "3250:6:8"
										},
										"referencedDeclaration": 618,
										"src": "3250:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$618",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "3281:174:8",
										"text": " @dev Event emitted when a domain is registered.\n @param domain The domain name.\n @param controller The address of the controller of the domain."
									},
									"eventSelector": "70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12",
									"id": 1274,
									"name": "DomainRegistered",
									"nameLocation": "3466:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"indexed": false,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "3490:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "3483:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3483:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": true,
												"mutability": "mutable",
												"name": "controller",
												"nameLocation": "3514:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "3498:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3498:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:43:8"
									},
									"src": "3460:66:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "3532:133:8",
										"text": " @dev Event emitted when funds are withdrawn from the contract.\n @param amount The amount of funds withdrawn."
									},
									"eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
									"id": 1281,
									"name": "Withdrawal",
									"nameLocation": "3676:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "reciever",
												"nameLocation": "3695:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3687:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3687:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3713:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3705:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3686:34:8"
									},
									"src": "3670:51:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "3727:153:8",
										"text": " @dev Event emitted when the price for domain registration is changed.\n @param newPrice The new price of the domain registration."
									},
									"eventSelector": "a6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d622",
									"id": 1286,
									"name": "PriceChanged",
									"nameLocation": "3891:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "3912:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3904:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:18:8"
									},
									"src": "3885:37:8"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "3928:73:8",
										"text": " @dev Error thrown when price from oracle is incorrect."
									},
									"errorSelector": "6f4f5ab9",
									"id": 1289,
									"name": "InvalidPriceFromOracle",
									"nameLocation": "4012:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4034:2:8"
									},
									"src": "4006:31:8"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "4043:186:8",
										"text": " @dev Error thrown when the provided price equals to zero.\n @param incomingValue The value that caused the error.\n @param expectingValue The expected value."
									},
									"errorSelector": "d090dd06",
									"id": 1296,
									"name": "PriceEqualsZero",
									"nameLocation": "4240:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "incomingValue",
												"nameLocation": "4273:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4265:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "expectingValue",
												"nameLocation": "4304:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4296:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4255:69:8"
									},
									"src": "4234:91:8"
								},
								{
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "4331:79:8",
										"text": "@dev Error thrown when attempting to register a domain that already exists."
									},
									"errorSelector": "c5e8402d",
									"id": 1299,
									"name": "DomainAlreadyTaken",
									"nameLocation": "4421:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4439:2:8"
									},
									"src": "4415:27:8"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "4448:193:8",
										"text": " @dev Error thrown when the value provided is not equal to the expected value.\n @param incomingValue The value provided.\n @param expectingValue The expected value."
									},
									"errorSelector": "be7b9d4d",
									"id": 1306,
									"name": "IncorrectValueAmount",
									"nameLocation": "4652:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "incomingValue",
												"nameLocation": "4690:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "4682:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4682:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "expectingValue",
												"nameLocation": "4721:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "4713:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4672:69:8"
									},
									"src": "4646:96:8"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "4748:166:8",
										"text": " @dev Error thrown when there is nothing to withdraw from the contract.\n @param requester The address of requester who request withdraw funds."
									},
									"errorSelector": "dc69dc16",
									"id": 1311,
									"name": "NothingToWithdraw",
									"nameLocation": "4925:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "4951:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4943:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:19:8"
									},
									"src": "4919:43:8"
								},
								{
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "4968:108:8",
										"text": " @dev Error thrown when the withdrawal operation fails.\n @param data The error data."
									},
									"errorSelector": "7824688c",
									"id": 1318,
									"name": "FailedToWithdraw",
									"nameLocation": "5087:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "reciever",
												"nameLocation": "5112:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "5104:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5128:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "5122:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5122:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5103:30:8"
									},
									"src": "5081:53:8"
								},
								{
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "5140:155:8",
										"text": " @dev Error thrown when the parent domain is not found.\n @param incomingDomain The domain for which the parent domain is not found."
									},
									"errorSelector": "30a58c07",
									"id": 1323,
									"name": "ParentDomainNotFound",
									"nameLocation": "5306:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "incomingDomain",
												"nameLocation": "5334:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5327:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5327:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5326:23:8"
									},
									"src": "5300:50:8"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "5356:204:8",
										"text": " @dev Error thrown when the usdc provided is not equal to the expected amount of usdc.\n @param incomingUsdc The value provided.\n @param expectingUsdc The expected udc amount."
									},
									"errorSelector": "035a0e00",
									"id": 1330,
									"name": "IncorrectUsdcAmount",
									"nameLocation": "5571:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "incomingUsdc",
												"nameLocation": "5608:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5600:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5600:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "expectingUsdc",
												"nameLocation": "5638:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5630:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:67:8"
									},
									"src": "5565:93:8"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "5847:182:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1335,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "5861:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5870:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5861:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "IfStatement",
												"src": "5857:155:8",
												"trueBody": {
													"id": 1345,
													"nodeType": "Block",
													"src": "5873:139:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1339,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1333,
																		"src": "5927:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1340,
																				"name": "_getDomainStorage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1967,
																				"src": "5950:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																					"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																				}
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5950:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																				"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																			}
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5970:17:8",
																		"memberName": "registrationPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1220,
																		"src": "5950:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1338,
																	"name": "PriceEqualsZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "5894:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5894:107:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1344,
															"nodeType": "RevertStatement",
															"src": "5887:114:8"
														}
													]
												}
											},
											{
												"id": 1347,
												"nodeType": "PlaceholderStatement",
												"src": "6021:1:8"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5664:134:8",
										"text": " @dev Modifier to ensure that the provided price is greater than zero.\n @param price The price value to check."
									},
									"id": 1349,
									"name": "priceBiggerThanZero",
									"nameLocation": "5812:19:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "5840:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5832:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:15:8"
									},
									"src": "5803:226:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "6168:263:8",
										"statements": [
											{
												"assignments": [
													1353
												],
												"declarations": [
													{
														"constant": false,
														"id": 1353,
														"mutability": "mutable",
														"name": "ethPrice",
														"nameLocation": "6186:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "6178:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6178:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1354,
														"name": "getRegistrationPriceInEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "6197:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6197:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6178:46:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1357,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6239:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6243:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6239:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1359,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "6252:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6239:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "6235:179:8",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "6262:152:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1362,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6337:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6341:5:8",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "6337:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1364,
																		"name": "ethPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "6380:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1361,
																	"name": "IncorrectValueAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "6283:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"6322:13:8",
																	"6364:14:8"
																],
																"names": [
																	"incomingValue",
																	"expectingValue"
																],
																"nodeType": "FunctionCall",
																"src": "6283:120:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1366,
															"nodeType": "RevertStatement",
															"src": "6276:127:8"
														}
													]
												}
											},
											{
												"id": 1369,
												"nodeType": "PlaceholderStatement",
												"src": "6423:1:8"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "6035:96:8",
										"text": " @dev Modifier to ensure that the eth sent is equal to the registration price."
									},
									"id": 1371,
									"name": "incorrectValueAmount",
									"nameLocation": "6145:20:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6165:2:8"
									},
									"src": "6136:295:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "6570:361:8",
										"statements": [
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "6588:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "6580:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6580:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1378,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1376,
														"name": "getUsdcAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "6600:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6600:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6580:38:8"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "_registrationPrice",
														"nameLocation": "6636:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "6628:26:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6628:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1381,
															"name": "_getDomainStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "6657:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6657:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
															"typeString": "struct DomainRegistry.DomainStorage storage pointer"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6690:17:8",
													"memberName": "registrationPrice",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1220,
													"src": "6657:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6628:79:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1385,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "6722:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1386,
														"name": "_registrationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "6735:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6722:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "6718:196:8",
												"trueBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "6755:159:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1389,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "6828:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1390,
																		"name": "_registrationPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "6870:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1388,
																	"name": "IncorrectUsdcAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "6776:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"6814:12:8",
																	"6855:13:8"
																],
																"names": [
																	"incomingUsdc",
																	"expectingUsdc"
																],
																"nodeType": "FunctionCall",
																"src": "6776:127:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1392,
															"nodeType": "RevertStatement",
															"src": "6769:134:8"
														}
													]
												}
											},
											{
												"id": 1395,
												"nodeType": "PlaceholderStatement",
												"src": "6923:1:8"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "6437:97:8",
										"text": " @dev Modifier to ensure that the usdc sent is equal to the registration price."
									},
									"id": 1397,
									"name": "incorrectUsdcAmount",
									"nameLocation": "6548:19:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6567:2:8"
									},
									"src": "6539:392:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "7086:138:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1402,
																	"name": "_getDomainStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "7100:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7100:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																	"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7120:10:8",
															"memberName": "domainList",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1225,
															"src": "7100:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 1406,
														"indexExpression": {
															"id": 1405,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "7131:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7100:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7150:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7142:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1407,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7142:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7142:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7100:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1416,
												"nodeType": "IfStatement",
												"src": "7096:110:8",
												"trueBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "7154:52:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1412,
																	"name": "DomainAlreadyTaken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "7175:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7175:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1414,
															"nodeType": "RevertStatement",
															"src": "7168:27:8"
														}
													]
												}
											},
											{
												"id": 1417,
												"nodeType": "PlaceholderStatement",
												"src": "7216:1:8"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "6937:96:8",
										"text": " @dev Modifier to ensure that the requested domain is available to registrate."
									},
									"id": 1419,
									"name": "existingDomain",
									"nameLocation": "7047:14:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "7078:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "7062:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7062:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7061:24:8"
									},
									"src": "7038:186:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "7508:200:8",
										"statements": [
											{
												"expression": {
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1431,
																"name": "_getDomainStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "7518:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7518:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																"typeString": "struct DomainRegistry.DomainStorage storage pointer"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7538:17:8",
														"memberName": "registrationPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "7518:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1434,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "7558:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7518:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "7518:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7595:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7599:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7595:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1437,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "7580:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7580:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "7580:26:8"
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1442,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "7616:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1444,
																"name": "_pricefeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "7650:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1443,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "7628:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7628:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "7616:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "7616:45:8"
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1448,
														"name": "usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "7671:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$618",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1450,
																"name": "_usdcToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "7690:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1449,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "7683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$618_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7683:18:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$618",
															"typeString": "contract IERC20"
														}
													},
													"src": "7671:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$618",
														"typeString": "contract IERC20"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "7671:30:8"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "7230:142:8",
										"text": " @dev Sets owner of the contract and price for domain registration\n @param initialPrice Sets default price for domains"
									},
									"functionSelector": "b4988fd0",
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1428,
												"name": "initializer",
												"nameLocations": [
													"7496:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "7496:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7496:11:8"
										}
									],
									"name": "initialize",
									"nameLocation": "7386:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "initialPrice",
												"nameLocation": "7414:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "7406:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "_pricefeed",
												"nameLocation": "7444:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "7436:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_usdcToken",
												"nameLocation": "7472:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "7464:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7396:92:8"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7508:0:8"
									},
									"scope": 2114,
									"src": "7377:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "7863:113:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1460,
																				"name": "_getDomainStorage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1967,
																				"src": "7881:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																					"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																				}
																			},
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7881:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																				"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																			}
																		},
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7901:17:8",
																		"memberName": "registrationPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1220,
																		"src": "7881:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7921:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7925:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "7921:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	},
																	"src": "7881:45:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7929:7:8",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "7881:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1469,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7880:57:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1470,
															"name": "_getEthToUsdPriceFromOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "7940:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7940:29:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7880:89:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1459,
												"id": 1473,
												"nodeType": "Return",
												"src": "7873:96:8"
											}
										]
									},
									"functionSelector": "2dd398b5",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRegistrationPriceInEth",
									"nameLocation": "7777:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7802:2:8"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "7850:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7850:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7849:9:8"
									},
									"scope": 2114,
									"src": "7768:208:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "8132:61:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1480,
															"name": "_getDomainStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "8149:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8149:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
															"typeString": "struct DomainRegistry.DomainStorage storage pointer"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8169:17:8",
													"memberName": "registrationPrice",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1220,
													"src": "8149:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1483,
												"nodeType": "Return",
												"src": "8142:44:8"
											}
										]
									},
									"functionSelector": "59e41286",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRegistrationPriceInUsdc",
									"nameLocation": "8045:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8071:2:8"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "8119:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8119:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8118:9:8"
									},
									"scope": 2114,
									"src": "8036:157:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "8345:62:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1492,
																"name": "_getDomainStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "8362:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8362:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																"typeString": "struct DomainRegistry.DomainStorage storage pointer"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8382:10:8",
														"memberName": "domainList",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1225,
														"src": "8362:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
															"typeString": "mapping(string memory => address)"
														}
													},
													"id": 1496,
													"indexExpression": {
														"id": 1495,
														"name": "domain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "8393:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8362:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1497,
												"nodeType": "Return",
												"src": "8355:45:8"
											}
										]
									},
									"functionSelector": "25970115",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDomainOwner",
									"nameLocation": "8248:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "8279:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "8263:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8263:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8262:24:8"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "8332:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8332:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8331:9:8"
									},
									"scope": 2114,
									"src": "8239:168:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2151
									],
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "8785:420:8",
										"statements": [
											{
												"assignments": [
													1510
												],
												"declarations": [
													{
														"constant": false,
														"id": 1510,
														"mutability": "mutable",
														"name": "domain",
														"nameLocation": "8809:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "8795:20:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1509,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8795:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"arguments": [
														{
															"id": 1512,
															"name": "parentDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "8856:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 1513,
															"name": "childDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "8882:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1511,
														"name": "createAndCheckFullDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "8818:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string calldata,string calldata) view returns (string memory)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8818:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8795:108:8"
											},
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1516,
																	"name": "_getDomainStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "8914:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8914:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																	"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8934:10:8",
															"memberName": "domainList",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1225,
															"src": "8914:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 1520,
														"indexExpression": {
															"id": 1519,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "8945:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8914:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1521,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8955:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8959:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8955:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8914:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "8914:51:8"
											},
											{
												"expression": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1525,
																"name": "_getFundStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "8976:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8976:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																"typeString": "struct DomainRegistry.FundStorage storage pointer"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8994:13:8",
														"memberName": "frozenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1230,
														"src": "8976:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9011:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9015:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "9011:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8976:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "8976:44:8"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1532,
																	"name": "_getFundStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "9030:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9030:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																	"typeString": "struct DomainRegistry.FundStorage storage pointer"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9048:17:8",
															"memberName": "domainOwnersFunds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1235,
															"src": "9030:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1540,
														"indexExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1535,
																		"name": "_getDomainStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "9079:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																			"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9079:19:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																		"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9099:10:8",
																"memberName": "domainList",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1225,
																"src": "9079:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																	"typeString": "mapping(string memory => address)"
																}
															},
															"id": 1539,
															"indexExpression": {
																"id": 1538,
																"name": "parentDomain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "9110:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9079:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9030:103:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1541,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9137:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9141:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "9137:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9030:116:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "9030:116:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1546,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "9179:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1547,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9187:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9191:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9187:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1545,
														"name": "DomainRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "9162:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "EmitStatement",
												"src": "9157:41:8"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "8413:218:8",
										"text": " @dev Allows buying a child domain under a parent domain.\n @param parentDomain The parent domain under which to register the child domain.\n @param childDomain The name of the child domain."
									},
									"functionSelector": "37ee4b47",
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1506,
												"name": "incorrectValueAmount",
												"nameLocations": [
													"8764:20:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "8764:20:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8764:20:8"
										}
									],
									"name": "buyChildDomainViaEth",
									"nameLocation": "8645:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "parentDomain",
												"nameLocation": "8691:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "8675:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8675:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "childDomain",
												"nameLocation": "8729:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "8713:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8713:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:81:8"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8785:0:8"
									},
									"scope": 2114,
									"src": "8636:569:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "9360:510:8",
										"statements": [
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "domain",
														"nameLocation": "9384:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "9370:20:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1561,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9370:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1567,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "parentDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "9431:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 1565,
															"name": "childDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "9457:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1563,
														"name": "createAndCheckFullDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "9393:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string calldata,string calldata) view returns (string memory)"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9393:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9370:108:8"
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "9496:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "9488:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9488:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1570,
														"name": "getUsdcAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "9508:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9508:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9488:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1574,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "9550:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1573,
														"name": "transferUsdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "9537:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9537:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "9537:23:8"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1577,
																	"name": "_getDomainStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "9571:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9571:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																	"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9591:10:8",
															"memberName": "domainList",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1225,
															"src": "9571:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 1581,
														"indexExpression": {
															"id": 1580,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "9602:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9571:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1582,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9612:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9616:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9612:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9571:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "9571:51:8"
											},
											{
												"expression": {
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1586,
																"name": "_getUsdcFundStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "9633:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_UsdcFundStorage_$1246_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.UsdcFundStorage storage pointer)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9633:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UsdcFundStorage_$1246_storage_ptr",
																"typeString": "struct DomainRegistry.UsdcFundStorage storage pointer"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9655:13:8",
														"memberName": "frozenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1240,
														"src": "9633:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1589,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "9672:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9633:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "9633:48:8"
											},
											{
												"expression": {
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1592,
																	"name": "_getUsdcFundStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "9691:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_UsdcFundStorage_$1246_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.UsdcFundStorage storage pointer)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9691:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UsdcFundStorage_$1246_storage_ptr",
																	"typeString": "struct DomainRegistry.UsdcFundStorage storage pointer"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9713:17:8",
															"memberName": "domainOwnersFunds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1245,
															"src": "9691:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1600,
														"indexExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1595,
																		"name": "_getDomainStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "9744:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																			"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9744:19:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																		"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																	}
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9764:10:8",
																"memberName": "domainList",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1225,
																"src": "9744:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																	"typeString": "mapping(string memory => address)"
																}
															},
															"id": 1599,
															"indexExpression": {
																"id": 1598,
																"name": "parentDomain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "9775:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9744:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9691:107:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1601,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "9802:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9691:120:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "9691:120:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1605,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "9844:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1606,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9852:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9856:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9852:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1604,
														"name": "DomainRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "9827:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9827:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "EmitStatement",
												"src": "9822:41:8"
											}
										]
									},
									"functionSelector": "225068c2",
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1559,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1558,
												"name": "incorrectUsdcAmount",
												"nameLocations": [
													"9340:19:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1397,
												"src": "9340:19:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9340:19:8"
										}
									],
									"name": "buyChildDomainViaUsdc",
									"nameLocation": "9220:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "parentDomain",
												"nameLocation": "9267:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "9251:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9251:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "childDomain",
												"nameLocation": "9305:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "9289:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9289:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9241:81:8"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9360:0:8"
									},
									"scope": 2114,
									"src": "9211:659:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2129
									],
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "10106:120:8",
										"statements": [
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1622,
																	"name": "_getDomainStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "10116:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																	}
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10116:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																	"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10136:10:8",
															"memberName": "domainList",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1225,
															"src": "10116:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 1626,
														"indexExpression": {
															"id": 1625,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "10147:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10116:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1627,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10157:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10161:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10157:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10116:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "10116:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1632,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "10200:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"expression": {
																"id": 1633,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10208:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10212:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10208:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1631,
														"name": "DomainRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "10183:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10183:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "EmitStatement",
												"src": "10178:41:8"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "9876:79:8",
										"text": " @dev Buying a domain via eth\n @param domain The domain"
									},
									"functionSelector": "1b0e17a3",
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1617,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1616,
												"name": "incorrectValueAmount",
												"nameLocations": [
													"10050:20:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "10050:20:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10050:20:8"
										},
										{
											"arguments": [
												{
													"id": 1619,
													"name": "domain",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1614,
													"src": "10094:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_calldata_ptr",
														"typeString": "string calldata"
													}
												}
											],
											"id": 1620,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1618,
												"name": "existingDomain",
												"nameLocations": [
													"10079:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1419,
												"src": "10079:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10079:22:8"
										}
									],
									"name": "buyDomainViaEth",
									"nameLocation": "9969:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "10001:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "9985:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9985:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9984:24:8"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10106:0:8"
									},
									"scope": 2114,
									"src": "9960:266:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2135
									],
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "10463:203:8",
										"statements": [
											{
												"assignments": [
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "10481:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1673,
														"src": "10473:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10473:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1651,
														"name": "getUsdcAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "10493:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10493:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10473:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1655,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "10535:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1654,
														"name": "transferUsdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "10522:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "10522:23:8"
											},
											{
												"expression": {
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1658,
																	"name": "_getDomainStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "10556:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10556:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																	"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10576:10:8",
															"memberName": "domainList",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1225,
															"src": "10556:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 1662,
														"indexExpression": {
															"id": 1661,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "10587:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10556:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1663,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10597:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10601:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10597:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10556:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "10556:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1668,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "10640:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"expression": {
																"id": 1669,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10648:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10652:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10648:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1667,
														"name": "DomainRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "10623:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10623:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "EmitStatement",
												"src": "10618:41:8"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "10232:80:8",
										"text": " @dev Buying a domain via usdc\n @param domain The domain"
									},
									"functionSelector": "fbd43caa",
									"id": 1674,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1643,
												"name": "incorrectUsdcAmount",
												"nameLocations": [
													"10408:19:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1397,
												"src": "10408:19:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10408:19:8"
										},
										{
											"arguments": [
												{
													"id": 1646,
													"name": "domain",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1641,
													"src": "10451:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_calldata_ptr",
														"typeString": "string calldata"
													}
												}
											],
											"id": 1647,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1645,
												"name": "existingDomain",
												"nameLocations": [
													"10436:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1419,
												"src": "10436:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10436:22:8"
										}
									],
									"name": "buyDomainViaUsdc",
									"nameLocation": "10326:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "10359:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "10343:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10343:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:24:8"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10463:0:8"
									},
									"scope": 2114,
									"src": "10317:349:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2123
									],
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "10904:103:8",
										"statements": [
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1685,
																"name": "_getDomainStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "10914:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10914:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																"typeString": "struct DomainRegistry.DomainStorage storage pointer"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10934:17:8",
														"memberName": "registrationPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "10914:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1688,
														"name": "newPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "10954:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10914:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "10914:48:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1692,
															"name": "newPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "10991:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1691,
														"name": "PriceChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "10978:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10978:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "EmitStatement",
												"src": "10973:27:8"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "10672:111:8",
										"text": " @dev Change price for domain registration\n @param newPrice The new price of the domain"
									},
									"functionSelector": "a2b40d19",
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1679,
												"name": "onlyOwner",
												"nameLocations": [
													"10852:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "10852:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10852:9:8"
										},
										{
											"arguments": [
												{
													"id": 1682,
													"name": "newPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1677,
													"src": "10890:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1681,
												"name": "priceBiggerThanZero",
												"nameLocations": [
													"10870:19:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1349,
												"src": "10870:19:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10870:29:8"
										}
									],
									"name": "changePrice",
									"nameLocation": "10797:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "10817:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "10809:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10809:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10808:18:8"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10904:0:8"
									},
									"scope": 2114,
									"src": "10788:219:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2143
									],
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "11217:455:8",
										"statements": [
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "11235:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "11227:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11227:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1713,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1706,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11261:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																],
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11253:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1704,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11253:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11253:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11267:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "11253:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1709,
																"name": "_getFundStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "11289:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11289:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																"typeString": "struct DomainRegistry.FundStorage storage pointer"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11307:13:8",
														"memberName": "frozenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1230,
														"src": "11289:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11253:67:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11227:93:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1714,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "11335:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11354:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11335:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1723,
												"nodeType": "IfStatement",
												"src": "11331:84:8",
												"trueBody": {
													"id": 1722,
													"nodeType": "Block",
													"src": "11357:58:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1718,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "11396:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11396:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1717,
																	"name": "NothingToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "11378:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11378:26:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1721,
															"nodeType": "RevertStatement",
															"src": "11371:33:8"
														}
													]
												}
											},
											{
												"assignments": [
													1725,
													1727
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "11431:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "11426:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1724,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11426:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1727,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "11450:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "11437:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1726,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11437:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11526:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1730,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "11466:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11466:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11458:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11458:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11458:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11475:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11458:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1734,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "11500:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11458:67:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11458:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11425:104:8"
											},
											{
												"condition": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11544:5:8",
													"subExpression": {
														"id": 1739,
														"name": "sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "11545:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1748,
												"nodeType": "IfStatement",
												"src": "11540:74:8",
												"trueBody": {
													"id": 1747,
													"nodeType": "Block",
													"src": "11551:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1742,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "11589:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11589:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1744,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "11598:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1741,
																	"name": "FailedToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "11572:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,bytes memory) pure"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11572:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1746,
															"nodeType": "RevertStatement",
															"src": "11565:38:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "11640:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11640:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1752,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "11649:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1749,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "11629:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11629:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "EmitStatement",
												"src": "11624:41:8"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "11013:159:8",
										"text": " @dev Withdraw eth to the owner of the contract\n @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\""
									},
									"functionSelector": "a0ef91df",
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1700,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1699,
												"name": "onlyOwner",
												"nameLocations": [
													"11207:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "11207:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "11207:9:8"
										}
									],
									"name": "withdrawEth",
									"nameLocation": "11186:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11197:2:8"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11217:0:8"
									},
									"scope": 2114,
									"src": "11177:495:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2139
									],
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "11884:321:8",
										"statements": [
											{
												"assignments": [
													1763
												],
												"declarations": [
													{
														"constant": false,
														"id": 1763,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "11902:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1795,
														"src": "11894:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11894:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1770,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1764,
															"name": "getUsdcContractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "11920:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11920:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1766,
																"name": "_getUsdcFundStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "11959:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_UsdcFundStorage_$1246_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.UsdcFundStorage storage pointer)"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11959:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UsdcFundStorage_$1246_storage_ptr",
																"typeString": "struct DomainRegistry.UsdcFundStorage storage pointer"
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11981:13:8",
														"memberName": "frozenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1240,
														"src": "11959:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11920:74:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11894:100:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "12009:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12028:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12009:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1780,
												"nodeType": "IfStatement",
												"src": "12005:84:8",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "12031:58:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1775,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "12070:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12070:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1774,
																	"name": "NothingToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "12052:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12052:26:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1778,
															"nodeType": "RevertStatement",
															"src": "12045:33:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1784,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12118:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12122:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12118:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1786,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "12130:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1781,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "12099:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12109:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 585,
														"src": "12099:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12099:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "12099:47:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1790,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "12173:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12173:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1792,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "12182:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "12162:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12162:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1794,
												"nodeType": "EmitStatement",
												"src": "12157:41:8"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "11678:160:8",
										"text": " @dev Withdraw usdc to the owner of the contract\n @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\""
									},
									"functionSelector": "fee84d4e",
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1759,
												"name": "onlyOwner",
												"nameLocations": [
													"11874:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "11874:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "11874:9:8"
										}
									],
									"name": "withdrawUsdc",
									"nameLocation": "11852:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11864:2:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11884:0:8"
									},
									"scope": 2114,
									"src": "11843:362:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2155
									],
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "12592:660:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1800,
																	"name": "_getFundStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "12606:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12606:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																	"typeString": "struct DomainRegistry.FundStorage storage pointer"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12624:17:8",
															"memberName": "domainOwnersFunds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1235,
															"src": "12606:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1805,
														"indexExpression": {
															"expression": {
																"id": 1803,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12642:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12646:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12642:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12606:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12657:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12606:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1814,
												"nodeType": "IfStatement",
												"src": "12602:119:8",
												"trueBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "12660:61:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1809,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12699:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12703:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12699:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1808,
																	"name": "NothingToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "12681:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12681:29:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1812,
															"nodeType": "RevertStatement",
															"src": "12674:36:8"
														}
													]
												}
											},
											{
												"assignments": [
													1816,
													1818
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "12737:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1876,
														"src": "12732:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1815,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1818,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "12756:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1876,
														"src": "12743:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1817,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12743:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1834,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12867:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1821,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12772:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12776:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12772:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12764:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1819,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12764:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12764:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12784:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12764:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1825,
																			"name": "_getFundStorage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1976,
																			"src": "12809:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																				"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																			}
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12809:17:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																			"typeString": "struct DomainRegistry.FundStorage storage pointer"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12827:17:8",
																	"memberName": "domainOwnersFunds",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1235,
																	"src": "12809:35:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1830,
																"indexExpression": {
																	"expression": {
																		"id": 1828,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12845:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12849:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12845:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12809:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12764:102:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12764:106:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12731:139:8"
											},
											{
												"condition": {
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12885:5:8",
													"subExpression": {
														"id": 1835,
														"name": "sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "12886:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "12881:77:8",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "12892:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1838,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12930:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12934:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12930:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1840,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "12942:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1837,
																	"name": "FailedToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "12913:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,bytes memory) pure"
																	}
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12913:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1842,
															"nodeType": "RevertStatement",
															"src": "12906:41:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1845,
																"name": "_getFundStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "12968:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12968:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																"typeString": "struct DomainRegistry.FundStorage storage pointer"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12986:13:8",
														"memberName": "frozenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1230,
														"src": "12968:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1848,
																	"name": "_getFundStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "13003:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13003:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																	"typeString": "struct DomainRegistry.FundStorage storage pointer"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13034:17:8",
															"memberName": "domainOwnersFunds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1235,
															"src": "13003:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1853,
														"indexExpression": {
															"expression": {
																"id": 1851,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13052:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13056:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13052:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13003:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12968:95:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "12968:95:8"
											},
											{
												"expression": {
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1856,
																	"name": "_getFundStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "13073:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13073:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																	"typeString": "struct DomainRegistry.FundStorage storage pointer"
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13091:17:8",
															"memberName": "domainOwnersFunds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1235,
															"src": "13073:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1861,
														"indexExpression": {
															"expression": {
																"id": 1859,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13109:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13113:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13109:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13073:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13123:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13073:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "13073:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1866,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13164:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13168:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13164:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1868,
																		"name": "_getFundStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "13188:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																			"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																		}
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13188:17:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																		"typeString": "struct DomainRegistry.FundStorage storage pointer"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13206:17:8",
																"memberName": "domainOwnersFunds",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1235,
																"src": "13188:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1873,
															"indexExpression": {
																"expression": {
																	"id": 1871,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13224:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13228:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13224:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13188:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1865,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "13140:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13140:105:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "EmitStatement",
												"src": "13135:110:8"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "12211:340:8",
										"text": " @dev Allows domain owners to withdraw their eth funds from the contract.\n @notice This function allows domain owners to withdraw the eth funds deposited for their domains.\n @notice Only the domain owner can invoke this function.\n @notice If the domain owner has no funds deposited, the function reverts."
									},
									"functionSelector": "559aae74",
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDomainEth",
									"nameLocation": "12565:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12582:2:8"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12592:0:8"
									},
									"scope": 2114,
									"src": "12556:696:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2159
									],
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "13642:476:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1881,
																	"name": "_getUsdcFundStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "13656:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_UsdcFundStorage_$1246_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.UsdcFundStorage storage pointer)"
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13656:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UsdcFundStorage_$1246_storage_ptr",
																	"typeString": "struct DomainRegistry.UsdcFundStorage storage pointer"
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13678:17:8",
															"memberName": "domainOwnersFunds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1245,
															"src": "13656:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1886,
														"indexExpression": {
															"expression": {
																"id": 1884,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13696:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13700:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13696:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13656:51:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13711:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13656:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1895,
												"nodeType": "IfStatement",
												"src": "13652:123:8",
												"trueBody": {
													"id": 1894,
													"nodeType": "Block",
													"src": "13714:61:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1890,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13753:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13757:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13753:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1889,
																	"name": "NothingToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "13735:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13735:29:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1893,
															"nodeType": "RevertStatement",
															"src": "13728:36:8"
														}
													]
												}
											},
											{
												"assignments": [
													1897
												],
												"declarations": [
													{
														"constant": false,
														"id": 1897,
														"mutability": "mutable",
														"name": "fundsToSend",
														"nameLocation": "13793:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "13785:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13785:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1904,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1898,
																"name": "_getFundStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "13807:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13807:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																"typeString": "struct DomainRegistry.FundStorage storage pointer"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13825:17:8",
														"memberName": "domainOwnersFunds",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1235,
														"src": "13807:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1903,
													"indexExpression": {
														"expression": {
															"id": 1901,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "13843:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13847:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13843:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13807:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13785:69:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1908,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13884:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13888:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13884:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1910,
															"name": "fundsToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "13896:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1905,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "13865:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13875:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 585,
														"src": "13865:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13865:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "13865:43:8"
											},
											{
												"expression": {
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1913,
																"name": "_getFundStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "13919:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																	"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13919:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																"typeString": "struct DomainRegistry.FundStorage storage pointer"
															}
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13937:13:8",
														"memberName": "frozenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1230,
														"src": "13919:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1916,
														"name": "fundsToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1897,
														"src": "13954:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13919:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "13919:46:8"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1919,
																	"name": "_getFundStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "13975:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FundStorage_$1236_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.FundStorage storage pointer)"
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13975:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
																	"typeString": "struct DomainRegistry.FundStorage storage pointer"
																}
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13993:17:8",
															"memberName": "domainOwnersFunds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1235,
															"src": "13975:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1924,
														"indexExpression": {
															"expression": {
																"id": 1922,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14011:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14015:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14011:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13975:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14025:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13975:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "13975:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1929,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14066:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14070:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14066:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1931,
															"name": "fundsToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "14090:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1928,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "14042:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14042:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1933,
												"nodeType": "EmitStatement",
												"src": "14037:74:8"
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "13258:342:8",
										"text": " @dev Allows domain owners to withdraw their usdc funds from the contract.\n @notice This function allows domain owners to withdraw the usdc funds deposited for their domains.\n @notice Only the domain owner can invoke this function.\n @notice If the domain owner has no funds deposited, the function reverts."
									},
									"functionSelector": "82702ff4",
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDomainUsdc",
									"nameLocation": "13614:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13632:2:8"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13642:0:8"
									},
									"scope": 2114,
									"src": "13605:513:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "14513:178:8",
										"statements": [
											{
												"expression": {
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1945,
														"name": "domain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "14523:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1950,
																		"name": "childDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "14586:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	},
																	{
																		"id": 1951,
																		"name": "domainSeparator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "14615:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1952,
																		"name": "parentDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "14648:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	],
																	"expression": {
																		"id": 1948,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "14552:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14556:12:8",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "14552:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14552:122:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14532:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1946,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "14532:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14532:152:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "14523:161:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1956,
												"nodeType": "ExpressionStatement",
												"src": "14523:161:8"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "14124:233:8",
										"text": " @dev Concatenates child and parent domain names.\n @param childDomain The name of the child domain.\n @param parentDomain The name of the parent domain.\n @return domain The concatenated domain name."
									},
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFullDomain",
									"nameLocation": "14371:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "childDomain",
												"nameLocation": "14413:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "14397:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14397:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "parentDomain",
												"nameLocation": "14450:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "14434:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14434:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14387:81:8"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "14505:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "14491:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14491:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14490:22:8"
									},
									"scope": 2114,
									"src": "14362:329:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "14930:82:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14949:57:8",
													"nodeType": "YulBlock",
													"src": "14949:57:8",
													"statements": [
														{
															"nativeSrc": "14963:33:8",
															"nodeType": "YulAssignment",
															"src": "14963:33:8",
															"value": {
																"name": "DOMAIN_STORAGE_LOCATION",
																"nativeSrc": "14973:23:8",
																"nodeType": "YulIdentifier",
																"src": "14973:23:8"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "14963:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14963:6:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1963,
														"isOffset": false,
														"isSlot": true,
														"src": "14963:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1249,
														"isOffset": false,
														"isSlot": false,
														"src": "14973:23:8",
														"valueSize": 1
													}
												],
												"id": 1965,
												"nodeType": "InlineAssembly",
												"src": "14940:66:8"
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "14697:124:8",
										"text": " @dev Returns domain storage\n @notice Domain storage contains domainList and registrationsPrice data"
									},
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDomainStorage",
									"nameLocation": "14835:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14852:2:8"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "14923:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "14901:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
													"typeString": "struct DomainRegistry.DomainStorage"
												},
												"typeName": {
													"id": 1962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1961,
														"name": "DomainStorage",
														"nameLocations": [
															"14901:13:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1226,
														"src": "14901:13:8"
													},
													"referencedDeclaration": 1226,
													"src": "14901:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
														"typeString": "struct DomainRegistry.DomainStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14900:25:8"
									},
									"scope": 2114,
									"src": "14826:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "15245:80:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "15264:55:8",
													"nodeType": "YulBlock",
													"src": "15264:55:8",
													"statements": [
														{
															"nativeSrc": "15278:31:8",
															"nodeType": "YulAssignment",
															"src": "15278:31:8",
															"value": {
																"name": "FUND_STORAGE_LOCATION",
																"nativeSrc": "15288:21:8",
																"nodeType": "YulIdentifier",
																"src": "15288:21:8"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "15278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15278:6:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1972,
														"isOffset": false,
														"isSlot": true,
														"src": "15278:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1252,
														"isOffset": false,
														"isSlot": false,
														"src": "15288:21:8",
														"valueSize": 1
													}
												],
												"id": 1974,
												"nodeType": "InlineAssembly",
												"src": "15255:64:8"
											}
										]
									},
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "15018:122:8",
										"text": " @dev Returns fund storage\n @notice Fund storage contains frozenBalance and domainOwnersFunds data"
									},
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getFundStorage",
									"nameLocation": "15154:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15169:2:8"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "15238:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "15218:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
													"typeString": "struct DomainRegistry.FundStorage"
												},
												"typeName": {
													"id": 1971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1970,
														"name": "FundStorage",
														"nameLocations": [
															"15218:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1236,
														"src": "15218:11:8"
													},
													"referencedDeclaration": 1236,
													"src": "15218:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundStorage_$1236_storage_ptr",
														"typeString": "struct DomainRegistry.FundStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15217:23:8"
									},
									"scope": 2114,
									"src": "15145:180:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "15487:182:8",
										"statements": [
											{
												"assignments": [
													null,
													1983,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1983,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "15507:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2001,
														"src": "15500:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1982,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "15500:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1987,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1984,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "15522:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15532:15:8",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "15522:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15522:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15497:52:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1988,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "15564:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15572:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15564:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1995,
												"nodeType": "IfStatement",
												"src": "15560:71:8",
												"trueBody": {
													"id": 1994,
													"nodeType": "Block",
													"src": "15575:56:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1991,
																	"name": "InvalidPriceFromOracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "15596:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15596:24:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1993,
															"nodeType": "RevertStatement",
															"src": "15589:31:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1998,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "15656:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15648:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1996,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15648:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15648:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1981,
												"id": 2000,
												"nodeType": "Return",
												"src": "15641:21:8"
											}
										]
									},
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "15331:53:8",
										"text": " @dev Returns current Eth/Usd price"
									},
									"functionSelector": "fc8b2653",
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getEthToUsdPriceFromOracle",
									"nameLocation": "15398:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15425:2:8"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "15474:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15474:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15473:9:8"
									},
									"scope": 2114,
									"src": "15389:280:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "15804:70:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2010,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15841:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15845:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15841:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2014,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15861:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																],
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15853:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15853:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15853:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2008,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "15821:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15831:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 595,
														"src": "15821:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15821:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2007,
												"id": 2017,
												"nodeType": "Return",
												"src": "15814:53:8"
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "15675:65:8",
										"text": " @dev Returns allowance of user to the contract"
									},
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUsdcAllowance",
									"nameLocation": "15754:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15770:2:8"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "15795:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15795:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15794:9:8"
									},
									"scope": 2114,
									"src": "15745:129:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "16120:85:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16139:60:8",
													"nodeType": "YulBlock",
													"src": "16139:60:8",
													"statements": [
														{
															"nativeSrc": "16153:36:8",
															"nodeType": "YulAssignment",
															"src": "16153:36:8",
															"value": {
																"name": "USDC_FUND_STORAGE_LOCATION",
																"nativeSrc": "16163:26:8",
																"nodeType": "YulIdentifier",
																"src": "16163:26:8"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "16153:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16153:6:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": true,
														"src": "16153:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1255,
														"isOffset": false,
														"isSlot": false,
														"src": "16163:26:8",
														"valueSize": 1
													}
												],
												"id": 2026,
												"nodeType": "InlineAssembly",
												"src": "16130:69:8"
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "15880:127:8",
										"text": " @dev Returns usdc fund storage\n @notice Fund storage contains frozenBalance and domainOwnersFunds data"
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUsdcFundStorage",
									"nameLocation": "16021:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16040:2:8"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "16113:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "16089:25:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UsdcFundStorage_$1246_storage_ptr",
													"typeString": "struct DomainRegistry.UsdcFundStorage"
												},
												"typeName": {
													"id": 2023,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2022,
														"name": "UsdcFundStorage",
														"nameLocations": [
															"16089:15:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1246,
														"src": "16089:15:8"
													},
													"referencedDeclaration": 1246,
													"src": "16089:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UsdcFundStorage_$1246_storage_ptr",
														"typeString": "struct DomainRegistry.UsdcFundStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16088:27:8"
									},
									"scope": 2114,
									"src": "16012:193:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "16417:423:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2038,
																	"name": "_getDomainStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "16444:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																	}
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16444:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																	"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																}
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16464:10:8",
															"memberName": "domainList",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1225,
															"src": "16444:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 2042,
														"indexExpression": {
															"id": 2041,
															"name": "parentDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "16475:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16444:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16500:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16492:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16492:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16492:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16444:58:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2053,
												"nodeType": "IfStatement",
												"src": "16427:152:8",
												"trueBody": {
													"id": 2052,
													"nodeType": "Block",
													"src": "16513:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2049,
																		"name": "parentDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "16555:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	],
																	"id": 2048,
																	"name": "ParentDomainNotFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "16534:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16534:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2051,
															"nodeType": "RevertStatement",
															"src": "16527:41:8"
														}
													]
												}
											},
											{
												"assignments": [
													2055
												],
												"declarations": [
													{
														"constant": false,
														"id": 2055,
														"mutability": "mutable",
														"name": "domain",
														"nameLocation": "16603:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "16589:20:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2054,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16589:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2060,
												"initialValue": {
													"arguments": [
														{
															"id": 2057,
															"name": "childDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "16642:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 2058,
															"name": "parentDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "16667:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 2056,
														"name": "createFullDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "16612:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string calldata,string calldata) pure returns (string memory)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16612:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16589:100:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2061,
																	"name": "_getDomainStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "16704:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DomainStorage_$1226_storage_ptr_$",
																		"typeString": "function () pure returns (struct DomainRegistry.DomainStorage storage pointer)"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16704:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DomainStorage_$1226_storage_ptr",
																	"typeString": "struct DomainRegistry.DomainStorage storage pointer"
																}
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16724:10:8",
															"memberName": "domainList",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1225,
															"src": "16704:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 2065,
														"indexExpression": {
															"id": 2064,
															"name": "domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "16735:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16704:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16754:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16746:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16746:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16746:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16704:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2075,
												"nodeType": "IfStatement",
												"src": "16700:110:8",
												"trueBody": {
													"id": 2074,
													"nodeType": "Block",
													"src": "16758:52:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2071,
																	"name": "DomainAlreadyTaken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "16779:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16779:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2073,
															"nodeType": "RevertStatement",
															"src": "16772:27:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2076,
													"name": "domain",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2055,
													"src": "16827:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2077,
												"nodeType": "Return",
												"src": "16820:13:8"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "16211:49:8",
										"text": " @dev Checks and returns domain"
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAndCheckFullDomain",
									"nameLocation": "16274:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "parentDomain",
												"nameLocation": "16324:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "16308:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16308:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "childDomain",
												"nameLocation": "16362:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "16346:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16346:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16298:81:8"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "16402:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2035,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16402:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16401:15:8"
									},
									"scope": 2114,
									"src": "16265:575:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "16974:123:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2088,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17020:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17024:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17020:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2092,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17052:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																],
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17044:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2090,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17044:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17044:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2094,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "17071:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2085,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "16984:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16994:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 617,
														"src": "16984:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16984:106:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "16984:106:8"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "16846:74:8",
										"text": " @dev Transfering usdc funds from sender to the contract"
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferUsdc",
									"nameLocation": "16934:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "16955:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "16947:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16947:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16946:19:8"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16974:0:8"
									},
									"scope": 2114,
									"src": "16925:172:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "17227:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2108,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17272:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DomainRegistry_$2114",
																		"typeString": "contract DomainRegistry"
																	}
																],
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17264:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2106,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17264:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17264:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2104,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "17244:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$618",
																"typeString": "contract IERC20"
															}
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17254:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "17244:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17244:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2111,
												"nodeType": "Return",
												"src": "17237:41:8"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "17103:55:8",
										"text": " @dev Returns balance of the contract"
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUsdcContractBalance",
									"nameLocation": "17172:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17194:2:8"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "17218:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17217:9:8"
									},
									"scope": 2114,
									"src": "17163:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2115,
							"src": "592:16695:8",
							"usedErrors": [
								76,
								81,
								257,
								260,
								1289,
								1296,
								1299,
								1306,
								1311,
								1318,
								1323,
								1330
							],
							"usedEvents": [
								87,
								265,
								1274,
								1281,
								1286
							]
						}
					],
					"src": "33:17255:8"
				},
				"id": 8
			},
			"contracts/interfaces/IDomainRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IDomainRegistry.sol",
					"exportedSymbols": {
						"IDomainRegistry": [
							2160
						]
					},
					"id": 2161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDomainRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2117,
								"nodeType": "StructuredDocumentation",
								"src": "59:147:9",
								"text": " @title Domain Registry Interface\n @notice This interface defines the methods required for interacting with a domain registry contract."
							},
							"fullyImplemented": false,
							"id": 2160,
							"linearizedBaseContracts": [
								2160
							],
							"name": "IDomainRegistry",
							"nameLocation": "217:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "239:111:9",
										"text": " @dev Change price for domain registration\n @param newPrice The new price of the domain"
									},
									"functionSelector": "a2b40d19",
									"id": 2123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changePrice",
									"nameLocation": "364:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "384:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "376:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:18:9"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:9"
									},
									"scope": 2160,
									"src": "355:48:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "409:79:9",
										"text": " @dev Buying a domain via eth\n @param domain The domain"
									},
									"functionSelector": "1b0e17a3",
									"id": 2129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyDomainViaEth",
									"nameLocation": "502:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "534:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "518:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2125,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "518:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:24:9"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:0:9"
									},
									"scope": 2160,
									"src": "493:66:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "565:80:9",
										"text": " @dev Buying a domain via usdc\n @param domain The domain"
									},
									"functionSelector": "fbd43caa",
									"id": 2135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyDomainViaUsdc",
									"nameLocation": "659:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "692:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "676:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "676:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:24:9"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:0:9"
									},
									"scope": 2160,
									"src": "650:83:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "739:160:9",
										"text": " @dev Withdraw usdc to the owner of the contract\n @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\""
									},
									"functionSelector": "fee84d4e",
									"id": 2139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawUsdc",
									"nameLocation": "913:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:2:9"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:0:9"
									},
									"scope": 2160,
									"src": "904:33:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "943:159:9",
										"text": " @dev Withdraw eth to the owner of the contract\n @notice Checks if the contract balance is not empty and then makes withdraw to \"owner\""
									},
									"functionSelector": "a0ef91df",
									"id": 2143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawEth",
									"nameLocation": "1116:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:2:9"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:0:9"
									},
									"scope": 2160,
									"src": "1107:32:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "1145:218:9",
										"text": " @dev Allows buying a child domain under a parent domain.\n @param parentDomain The parent domain under which to register the child domain.\n @param childDomain The name of the child domain."
									},
									"functionSelector": "37ee4b47",
									"id": 2151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyChildDomainViaEth",
									"nameLocation": "1377:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "parentDomain",
												"nameLocation": "1423:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "1407:28:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "childDomain",
												"nameLocation": "1461:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "1445:27:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1445:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:81:9"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:0:9"
									},
									"scope": 2160,
									"src": "1368:128:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "1502:340:9",
										"text": " @dev Allows domain owners to withdraw their eth funds from the contract.\n @notice This function allows domain owners to withdraw the eth funds deposited for their domains.\n @notice Only the domain owner can invoke this function.\n @notice If the domain owner has no funds deposited, the function reverts."
									},
									"functionSelector": "559aae74",
									"id": 2155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDomainEth",
									"nameLocation": "1856:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:2:9"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:0:9"
									},
									"scope": 2160,
									"src": "1847:38:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "1891:342:9",
										"text": " @dev Allows domain owners to withdraw their usdc funds from the contract.\n @notice This function allows domain owners to withdraw the usdc funds deposited for their domains.\n @notice Only the domain owner can invoke this function.\n @notice If the domain owner has no funds deposited, the function reverts."
									},
									"functionSelector": "82702ff4",
									"id": 2159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDomainUsdc",
									"nameLocation": "2247:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2265:2:9"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2276:0:9"
									},
									"scope": 2160,
									"src": "2238:39:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2161,
							"src": "207:2072:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2247:9"
				},
				"id": 9
			}
		}
	}
}